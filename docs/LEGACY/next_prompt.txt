Project Context:
  • Before creating or deleting any files, perform a full repo analysis around the core issue, using LS -LA commands or grep searching the repo and analyzing. 
  • Layers: Domain, Application, Infrastructure, API (FastAPI), Core.  
  • Principles: Robert C. Martin, GOF, SOLID, DRY.  
  • HIPAA: no PHI in URLs, encrypted at rest and in transit, session timeouts, audit‐logging, zero PHI in errors.  
  • Security: Pydantic validation, parameterized queries, TLS, output sanitization.  
  • API: RESTful, versioned, OpenAPI docs, rate limits, consistent JSON.  
  • Testing: unit, integration, security, performance; high coverage.  

Current Iteration Summary:
I've addressed a significant testing issue in the Clarity-AI-Backend codebase by creating a comprehensive migration strategy for standalone tests. The main accomplishments include:

1. **Created a migration script**: Implemented `scripts/migrate_standalone_tests.sh` to analyze, categorize, and assist with migrating standalone tests to proper unit/integration tests.

2. **Completed a proof-of-concept migration**: Successfully migrated the biometric event processor tests from standalone to proper unit tests, preserving test coverage while eliminating code duplication.

3. **Documentation and guides**: Created comprehensive documentation:
   - `docs/testing/standalone_test_migration_guide.md` with detailed instructions
   - `docs/testing/test_migration_status.md` to track progress
   - `docs/testing/README.md` explaining the testing strategy

4. **Validation and examples**: Created example migration script and templates to demonstrate the process.

5. **Applied Clean Architecture principles**:
   - Properly separated tests into domain-specific directories 
   - Utilized dependency injection for easier testing
   - Eliminated duplicated code in favor of actual implementations
   - Improved test maintainability through proper separation of concerns

Next Prompt:

Based on the test migration progress, the next critical area to address is the Digital Twin component. The standalone tests in this area contain duplicated implementations that should be migrated to use the actual domain implementations.

Tasks:
1. Analyze the Digital Twin standalone tests and compare with the actual implementation
2. Migrate the Digital Twin tests using the established process
3. Run tests to ensure proper coverage is maintained
4. Update the test migration status document with progress

Focus areas for this slice:
- Ensure proper handling of PHI in the Digital Twin implementation
- Verify HIPAA compliance in the migrated tests
- Apply proper dependency injection for better testability
- Document any edge cases or implementation differences discovered

Architectural reminders:
- Domain layer: Contains core business logic and entities
- Application layer: Coordinates activities between domain and infrastructure
- Infrastructure layer: Handles external concerns like databases and APIs
- Tests should respect these layers and proper dependencies

Prior work completed:
- Created migration script: `scripts/migrate_standalone_tests.sh`
- Successfully migrated biometric processor tests
- Documented the process in `docs/testing/standalone_test_migration_guide.md` 