{
  "default": true,
  "MD001": true,                      // Heading levels should only increment by one level at a time
  "MD003": { "style": "atx" },        // Heading style (use # for headings)
  "MD004": { "style": "dash" },       // Unordered list style (use - for list items)
  "MD005": true,                      // Consistent list indentation
  "MD007": { "indent": 2 },           // Unordered list indentation (2 spaces)
  "MD009": { "br_spaces": 2 },        // No trailing spaces except for line breaks (2 spaces)
  "MD010": { "code_blocks": false },  // No hard tabs (except in code blocks)
  "MD011": true,                      // Reversed link syntax
  "MD012": { "maximum": 1 },          // Multiple consecutive blank lines (max 1)
  "MD013": {                          // Line length
    "line_length": 100,
    "code_blocks": false,
    "tables": false,
    "headings": false
  },
  "MD014": false,                     // Dollar signs used before commands without showing output
  "MD018": true,                      // No space after hash on atx style heading
  "MD019": true,                      // Multiple spaces after hash on atx style heading
  "MD020": true,                      // No space inside hashes on closed atx style heading
  "MD021": true,                      // Multiple spaces inside hashes on closed atx style heading
  "MD022": true,                      // Headings should be surrounded by blank lines
  "MD023": true,                      // Headings must start at the beginning of the line
  "MD024": { "allow_different_nesting": true }, // Multiple headings with the same content
  "MD025": true,                      // Multiple top-level headings in the same document
  "MD026": { "punctuation": ".,;:!" }, // Trailing punctuation in heading
  "MD027": true,                      // Multiple spaces after blockquote symbol
  "MD028": true,                      // Blank line inside blockquote
  "MD029": { "style": "ordered" },    // Ordered list item prefix
  "MD030": true,                      // Spaces after list markers
  "MD031": true,                      // Fenced code blocks should be surrounded by blank lines
  "MD032": true,                      // Lists should be surrounded by blank lines
  "MD033": {                          // Allow specific HTML tags
    "allowed_elements": [
      "br", "details", "summary", "div", "span", "a", "img",
      "sup", "sub", "kbd", "mark", "abbr"
    ]
  },
  "MD034": false,                     // Bare URLs (allow these in some cases)
  "MD035": { "style": "---" },        // Horizontal rule style
  "MD036": false,                     // Emphasis used instead of a heading
  "MD037": true,                      // Spaces inside emphasis markers
  "MD038": true,                      // Spaces inside code span elements
  "MD039": true,                      // Spaces inside link text
  "MD040": true,                      // Fenced code blocks should have a language specified
  "MD041": true,                      // First line in a file should be a top-level heading
  "MD042": true,                      // No empty links
  "MD043": false,                     // Required heading structure (not enforced)
  "MD044": {                          // Proper names should have the correct capitalization
    "names": [
      "Clarity-AI",
      "MkDocs",
      "FastAPI",
      "HIPAA",
      "Python",
      "JavaScript",
      "TypeScript",
      "PostgreSQL",
      "SQLite",
      "Redis",
      "Docker",
      "JWT",
      "OpenAPI",
      "Swagger",
      "UV",
      "MentaLLaMA",
      "XGBoost",
      "Pytest"
    ]
  },
  "MD045": true,                      // Images should have alternate text
  "MD046": { "style": "fenced" },     // Code block style (fenced)
  "MD047": true,                      // Files should end with a single newline character
  "MD048": { "style": "backtick" },   // Code fence style (use ``` not ~~~)
  "MD049": { "style": "underscore" }, // Emphasis style should be consistent (use _)
  "MD050": { "style": "asterisk" }    // Strong style should be consistent (use **)
}