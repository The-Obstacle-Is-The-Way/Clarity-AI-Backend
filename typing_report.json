{
  "timestamp": "2025-05-19T16:00:13.977959",
  "mypy_issues": {
    "app/tests/helpers/patch_imports.py": [
      {
        "line": 36,
        "type": "error",
        "message": "Module has no attribute \"__import__\"  [attr-defined]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Module has no attribute \"__import__\"  [attr-defined]"
      }
    ],
    "app/tests/application/presentation/api/schemas/analytics/__init__.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.requests\"  [import-not-found]"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.responses\"  [import-not-found]"
      }
    ],
    "app/infrastructure/security/password/hashing.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Library stubs not installed for \"passlib.context\"  [import-untyped]"
      },
      {
        "line": 9,
        "type": "note",
        "message": "Hint: \"python3 -m pip install types-passlib\""
      },
      {
        "line": 9,
        "type": "note",
        "message": "(or run \"mypy --install-types\" to install all missing stub packages)"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      }
    ],
    "app/infrastructure/security/auth/mfa_service_patch.py": [
      {
        "line": 6,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 6,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      }
    ],
    "app/infrastructure/ml/mentallama/models.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, float]\"  [no-any-return]"
      }
    ],
    "app/domain/value_objects/diagnosis_code.py": [
      {
        "line": 80,
        "type": "error",
        "message": "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]"
      }
    ],
    "app/domain/value_objects/address.py": [
      {
        "line": 86,
        "type": "error",
        "message": "Function \"app.domain.value_objects.address.Address.dict\" is not valid as a type  [valid-type]"
      },
      {
        "line": 86,
        "type": "note",
        "message": "Perhaps you need \"Callable[...]\" or a callback protocol?"
      }
    ],
    "app/domain/utils/text_utils.py": [
      {
        "line": 65,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/domain/ml/exceptions.py": [
      {
        "line": 159,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]"
      }
    ],
    "app/core/interfaces/services/redis_service_interface.py": [
      {
        "line": 62,
        "type": "error",
        "message": "Function \"builtins.any\" is not valid as a type  [valid-type]"
      },
      {
        "line": 62,
        "type": "note",
        "message": "Perhaps you meant \"typing.Any\" instead of \"any\"?"
      }
    ],
    "app/core/interfaces/security/password_handler_interface.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Function \"builtins.any\" is not valid as a type  [valid-type]"
      },
      {
        "line": 59,
        "type": "note",
        "message": "Perhaps you meant \"typing.Any\" instead of \"any\"?"
      }
    ],
    "app/core/exceptions/base_exceptions.py": [
      {
        "line": 294,
        "type": "error",
        "message": "Name \"InitializationError\" already defined on line 133  [no-redef]"
      },
      {
        "line": 21,
        "type": "note",
        "message": "\"__init__\" of \"BaseException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      }
    ],
    "app/tests/unit/services/ml/conftest.py": [
      {
        "line": 47,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"type[MockYamlModule]\", target has type Module)  [assignment]"
      }
    ],
    "app/tests/unit/mocks/__init__.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Module has no attribute \"safe_load\"  [attr-defined]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Module has no attribute \"dump\"  [attr-defined]"
      }
    ],
    "app/infrastructure/services/mock_xgboost_service.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"_predictions\" (hint: \"_predictions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/services/mock_pat_service.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/services/mock_digital_twin_core_service.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Cannot determine type of \"state\"  [has-type]"
      },
      {
        "line": 311,
        "type": "error",
        "message": "Cannot determine type of \"new_state\"  [has-type]"
      }
    ],
    "app/infrastructure/security/rbac/role_based_access_control.py": [
      {
        "line": 87,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Argument 1 to \"get\" of \"dict\" has incompatible type \"Role | str\"; expected \"Role\"  [arg-type]"
      }
    ],
    "app/infrastructure/security/rate_limiting/in_memory_limiter.py": [
      {
        "line": 77,
        "type": "error",
        "message": "Incompatible return value type (got \"tuple[int | float, int]\", expected \"tuple[int, int]\")  [return-value]"
      }
    ],
    "app/infrastructure/aws/real_aws_services.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, list[dict[str, Any]]]\"  [no-any-return]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 137,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 156,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 173,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 238,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      }
    ],
    "app/domain/value_objects/emergency_contact.py": [
      {
        "line": 75,
        "type": "error",
        "message": "Function \"app.domain.value_objects.emergency_contact.EmergencyContact.dict\" is not valid as a type  [valid-type]"
      },
      {
        "line": 75,
        "type": "note",
        "message": "Perhaps you need \"Callable[...]\" or a callback protocol?"
      }
    ],
    "app/domain/exceptions/security_exceptions.py": [
      {
        "line": 28,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 28,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible default for argument \"resource_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 29,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Incompatible default for argument \"action\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 30,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 50,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 50,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 51,
        "type": "error",
        "message": "Incompatible default for argument \"permission\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 51,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 51,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Incompatible default for argument \"resource\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 52,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 52,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 79,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 79,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Incompatible default for argument \"until\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 80,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 80,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 99,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 99,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 100,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 100,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 119,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 119,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 119,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Incompatible default for argument \"attempts\" (default has type \"None\", argument has type \"int\")  [assignment]"
      },
      {
        "line": 120,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 120,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/exceptions/persistence_exceptions.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Incompatible default for argument \"original_exception\" (default has type \"None\", argument has type \"Exception\")  [assignment]"
      },
      {
        "line": 16,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 16,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible default for argument \"entity_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 29,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Incompatible default for argument \"entity_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 30,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Incompatible default for argument \"message\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 31,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible default for argument \"repository\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 53,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 53,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Incompatible default for argument \"operation\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 54,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 54,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/exceptions/appointment_exceptions.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Incompatible default for argument \"current_state\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 24,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 24,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Incompatible default for argument \"required_state\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 25,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 25,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 26,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 26,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 26,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible default for argument \"conflicting_appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 53,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 53,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 69,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 69,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 85,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 85,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 86,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 86,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 105,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 105,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 106,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 106,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/exceptions/ml_exceptions.py": [
      {
        "line": 149,
        "type": "error",
        "message": "Incompatible default for argument \"parameter\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 149,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 149,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Incompatible default for argument \"model_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 171,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 171,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Incompatible default for argument \"service_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 190,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 190,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      }
    ],
    "app/core/exceptions/data_privacy.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"__init__\" of \"BaseException\"; did you mean \"detail\"?  [call-arg]"
      }
    ],
    "scripts/test/security/run_hipaa_phi_audit.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Need type annotation for \"phi_detected\" (hint: \"phi_detected: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Need type annotation for \"findings\"  [var-annotated]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Need type annotation for \"files_examined\" (hint: \"files_examined: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Need type annotation for \"generated_files\" (hint: \"generated_files: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 416,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"None\")  [assignment]"
      }
    ],
    "app/tests/security/scripts/run_tests_direct.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 26,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 26,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 156,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unsupported left operand type for + (\"object\")  [operator]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 225,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 227,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"items\"  [attr-defined]"
      },
      {
        "line": 264,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]"
      },
      {
        "line": 264,
        "type": "note",
        "message": "Left operand is of type \"Collection[str] | int\""
      },
      {
        "line": 267,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]"
      },
      {
        "line": 267,
        "type": "note",
        "message": "Left operand is of type \"Collection[str] | int\""
      },
      {
        "line": 304,
        "type": "error",
        "message": "Argument 1 to \"fromisoformat\" of \"date\" has incompatible type \"Collection[str]\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 322,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 323,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 334,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"items\"  [attr-defined]"
      }
    ],
    "app/tests/security/scripts/run_tests.py": [
      {
        "line": 35,
        "type": "error",
        "message": "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 35,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 35,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 145,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 233,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 233,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 239,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 245,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 251,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 264,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 271,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 281,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 282,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 284,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 285,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 297,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"dashboard.dashboard\"  [import-not-found]"
      }
    ],
    "app/tests/mocks/patient_mock.py": [
      {
        "line": 307,
        "type": "error",
        "message": "Item \"None\" of \"date | str | None\" has no attribute \"isoformat\"  [union-attr]"
      }
    ],
    "app/infrastructure/repositories/mock_patient_repository.py": [
      {
        "line": 123,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      }
    ],
    "app/infrastructure/repositories/mock_digital_twin_repository.py": [
      {
        "line": 135,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      },
      {
        "line": 282,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 306,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      }
    ],
    "app/infrastructure/integrations/aws/sagemaker.py": [
      {
        "line": 198,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/events/patient_events.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.events.base_event\"  [import-not-found]"
      }
    ],
    "app/domain/entities/knowledge_graph.py": [
      {
        "line": 80,
        "type": "error",
        "message": "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 80,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 80,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 81,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 81,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 120,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 120,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 121,
        "type": "error",
        "message": "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 121,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 121,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible default for argument \"temporal_constraints\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 123,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 123,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Need type annotation for \"neighbors\" (hint: \"neighbors: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "Need type annotation for \"adjacency\" (hint: \"adjacency: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Need type annotation for \"chains\" (hint: \"chains: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"float\")  [assignment]"
      },
      {
        "line": 494,
        "type": "error",
        "message": "Need type annotation for \"configs\"  [var-annotated]"
      }
    ],
    "app/domain/entities/digital_twin_entity.py": [
      {
        "line": 88,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"ClinicalSignificance\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_twin_enhanced.py": [
      {
        "line": 473,
        "type": "error",
        "message": "Value expression in dictionary comprehension has incompatible type \"BiometricDataPoint | None\"; expected type \"BiometricDataPoint\"  [misc]"
      }
    ],
    "app/core/utils/date_utils.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/core/utils/aws.py": [
      {
        "line": 145,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 148,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 161,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/core/security/rate_limiting/limiter.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Need type annotation for \"client_requests\" (hint: \"client_requests: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/core/interfaces/security/jwt_service_interface.py": [
      {
        "line": 34,
        "type": "error",
        "message": "Incompatible default for argument \"roles\" (default has type \"None\", argument has type \"list[str]\")  [assignment]"
      },
      {
        "line": 34,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 34,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/exceptions/__init__.py": [
      {
        "line": 33,
        "type": "error",
        "message": "Incompatible import of \"AuthorizationError\" (imported name has type \"type[app.core.exceptions.base_exceptions.AuthorizationError]\", local name has type \"type[app.core.exceptions.auth_exceptions.AuthorizationError]\")  [assignment]"
      },
      {
        "line": 33,
        "type": "error",
        "message": "Incompatible import of \"SecurityException\" (imported name has type \"type[app.core.exceptions.base_exceptions.SecurityException]\", local name has type \"type[app.core.errors.security_exceptions.SecurityException]\")  [assignment]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Incompatible import of \"InvalidTokenError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.InvalidTokenError]\", local name has type \"type[app.core.exceptions.auth_exceptions.InvalidTokenError]\")  [assignment]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Incompatible import of \"TokenExpiredError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.TokenExpiredError]\", local name has type \"type[app.core.exceptions.auth_exceptions.TokenExpiredError]\")  [assignment]"
      }
    ],
    "app/tests/utils/query_param_helper.py": [
      {
        "line": 49,
        "type": "error",
        "message": "Returning Any from function declared to return \"T\"  [no-any-return]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible return value type (got \"T | Awaitable[T]\", expected \"T\")  [return-value]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Incompatible default for argument \"params\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 56,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 56,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"T\", expected type \"Awaitable[Any]\")  [misc]"
      }
    ],
    "app/tests/security/dashboard/dashboard.py": [
      {
        "line": 523,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/entities/provider.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Incompatible default for argument \"first_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 48,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 48,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Incompatible default for argument \"last_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 49,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 49,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible default for argument \"provider_type\" (default has type \"None\", argument has type \"ProviderType | str\")  [assignment]"
      },
      {
        "line": 50,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 50,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/entities/model_adapter.py": [
      {
        "line": 164,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Neurotransmitter\", variable has type \"BrainRegion\")  [assignment]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      },
      {
        "line": 201,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, BrainRegionStateAdapter]\", variable has type \"dict[Neurotransmitter, NeurotransmitterStateAdapter]\")  [assignment]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      }
    ],
    "app/domain/entities/appointment.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 18,
        "type": "error",
        "message": "Module has no attribute \"time\"  [attr-defined]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Argument 1 to \"_ensure_datetime\" has incompatible type \"datetime | Any | None\"; expected \"datetime | str\"  [arg-type]"
      }
    ],
    "app/core/services/analytics_service.py": [
      {
        "line": 278,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/xgboost/aws_xgboost_patch.py": [
      {
        "line": 126,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 203,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 239,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 267,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 270,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 275,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      }
    ],
    "app/core/services/ml/xgboost/aws.py": [
      {
        "line": 93,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"predict\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Signature of \"is_initialized\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "def is_initialized(self) -> bool"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "bool"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[dict[str, Any]]]\" of \"get_available_models\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 175,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"get_model_info\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "Attribute \"_observers\" already defined on line 164  [no-redef]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 295,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 330,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 498,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      },
      {
        "line": 553,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      },
      {
        "line": 856,
        "type": "error",
        "message": "Name \"integrate_with_digital_twin\" already defined on line 182  [no-redef]"
      },
      {
        "line": 950,
        "type": "error",
        "message": "Name \"get_model_info\" already defined on line 175  [no-redef]"
      },
      {
        "line": 1214,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 1236,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 2303,
        "type": "error",
        "message": "Name \"EventType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 2317,
        "type": "error",
        "message": "Name \"Observer\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 476,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]"
      },
      {
        "line": 507,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 510,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 641,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 670,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 670,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 670,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 743,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 843,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 843,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 849,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 849,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 849,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 909,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 937,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 937,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 943,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 943,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 943,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1093,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 1209,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 1228,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1233,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 1247,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1259,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 1340,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 1470,
        "type": "error",
        "message": "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1470,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1470,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1813,
        "type": "error",
        "message": "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 2080,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2189,
        "type": "error",
        "message": "\"None\" has no attribute \"update_item\"  [attr-defined]"
      },
      {
        "line": 2198,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2198,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 2217,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 2231,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 2234,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 251,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 272,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 303,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INITIALIZATION\"  [attr-defined]"
      },
      {
        "line": 315,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 315,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 315,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 335,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ConfigurationError\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 448,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 464,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 476,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]"
      },
      {
        "line": 507,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 510,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 573,
        "type": "error",
        "message": "\"None\" has no attribute \"put_item\"  [attr-defined]"
      },
      {
        "line": 578,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 971,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 977,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 979,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_model\"  [attr-defined]"
      },
      {
        "line": 1059,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1059,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1059,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1093,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 1097,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1098,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1100,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1104,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1108,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1124,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1138,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1138,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1138,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1148,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1148,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1148,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1209,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 1228,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1233,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 1233,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1247,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1259,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 1278,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1285,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1286,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1289,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1291,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 1340,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 1349,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1369,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 1419,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1419,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1419,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1458,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1458,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1458,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1293,
        "type": "error",
        "message": "Missing return statement  [return]"
      },
      {
        "line": 1470,
        "type": "error",
        "message": "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1470,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1470,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1743,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1813,
        "type": "error",
        "message": "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1834,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1834,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 1858,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1858,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]"
      },
      {
        "line": 1908,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1908,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"MAXIMUM\"  [attr-defined]"
      },
      {
        "line": 1909,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1909,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 1920,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1920,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]"
      },
      {
        "line": 2080,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2102,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 2125,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2134,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2134,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2217,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 2231,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 2234,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 2234,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 2244,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 2250,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 2251,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      }
    ],
    "app/core/services/ml/mentallama/__init__.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Need type annotation for \"_models\" (hint: \"_models: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"_digital_twin_sessions\" (hint: \"_digital_twin_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 1044,
        "type": "error",
        "message": "Argument \"key\" to \"sorted\" has incompatible type \"Callable[[tuple[str, dict[str, object]]], object]\"; expected \"Callable[[tuple[str, dict[str, object]]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 1044,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 1050,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 1217,
        "type": "error",
        "message": "Need type annotation for \"session\"  [var-annotated]"
      },
      {
        "line": 1623,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 2018,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2019,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2030,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2031,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2036,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2037,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2040,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2041,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2044,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2047,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 2048,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      }
    ],
    "app/core/services/ml/digital_twin/digital_twin.py": [
      {
        "line": 42,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Need type annotation for \"session\"  [var-annotated]"
      },
      {
        "line": 350,
        "type": "error",
        "message": "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]"
      },
      {
        "line": 350,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 350,
        "type": "note",
        "message": "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]"
      },
      {
        "line": 350,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 350,
        "type": "note",
        "message": "def get_insights(self, session_id: str, insight_type: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 556,
        "type": "error",
        "message": "Need type annotation for \"sender_counts\" (hint: \"sender_counts: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/domain/utils/datetime_utils.py": [
      {
        "line": 144,
        "type": "error",
        "message": "Argument 1 to \"format_iso\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]"
      }
    ],
    "app/infrastructure/services/mocks/mock_pat_service.py": [
      {
        "line": 88,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"float\")  [assignment]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Generator has incompatible item type \"str\"; expected \"bool\"  [misc]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 426,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 429,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 431,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 434,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 440,
        "type": "error",
        "message": "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 445,
        "type": "error",
        "message": "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 810,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 822,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 834,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/infrastructure/ml/mentallama/mock.py": [
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 127,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 533,
        "type": "error",
        "message": "Unsupported operand types for > (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 536,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      }
    ],
    "app/infrastructure/aws/in_memory_boto3.py": [
      {
        "line": 123,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Invalid \"type: ignore\" comment  [syntax]"
      }
    ],
    "app/infrastructure/aws/in_memory_aws_services.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Signature of \"put_item\" incompatible with supertype \"DynamoDBServiceInterface\"  [override]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 41,
        "type": "note",
        "message": "def put_item(self, table_name: str, item: dict[str, Any]) -> dict[str, Any]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 41,
        "type": "note",
        "message": "def put_item(self, *, TableName: str, Item: dict[str, Any]) -> dict[str, Any]"
      }
    ],
    "app/domain/services/standalone_clinical_rule_engine.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.entities.digital_twin.biometric_rule\"  [import-not-found]"
      }
    ],
    "app/domain/services/enhanced_xgboost_service.py": [
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "Name \"personalized_response\" is not defined  [name-defined]"
      },
      {
        "line": 311,
        "type": "error",
        "message": "Name \"result\" is not defined  [name-defined]"
      },
      {
        "line": 332,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]"
      },
      {
        "line": 336,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]"
      },
      {
        "line": 366,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 370,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 482,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 543,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]"
      },
      {
        "line": 549,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]"
      },
      {
        "line": 632,
        "type": "error",
        "message": "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]"
      },
      {
        "line": 632,
        "type": "error",
        "message": "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 632,
        "type": "error",
        "message": "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]"
      },
      {
        "line": 645,
        "type": "error",
        "message": "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 652,
        "type": "error",
        "message": "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"dict[<nothing>, <nothing>]\"  [call-overload]"
      },
      {
        "line": 652,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 652,
        "type": "note",
        "message": "def get(self, Neurotransmitter, /) -> dict[BrainRegion, float] | None"
      },
      {
        "line": 652,
        "type": "note",
        "message": "def get(self, Neurotransmitter, dict[BrainRegion, float], /) -> dict[BrainRegion, float]"
      },
      {
        "line": 652,
        "type": "note",
        "message": "def [_T] get(self, Neurotransmitter, _T, /) -> dict[BrainRegion, float] | _T"
      },
      {
        "line": 701,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"treatment_response_models\"  [attr-defined]"
      },
      {
        "line": 723,
        "type": "error",
        "message": "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]"
      },
      {
        "line": 723,
        "type": "error",
        "message": "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 723,
        "type": "error",
        "message": "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]"
      },
      {
        "line": 730,
        "type": "error",
        "message": "Argument 1 to \"_calculate_efficacy_score\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]"
      },
      {
        "line": 748,
        "type": "error",
        "message": "Argument 1 to \"_summarize_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], dict[str, float] | dict[str, Any] | float | str]\"; expected \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, float] | dict[str, Any] | float | str\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 892,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 992,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]"
      },
      {
        "line": 995,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"simulate_treatment_cascade\"  [attr-defined]"
      },
      {
        "line": 996,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_temporal_response\"  [attr-defined]"
      }
    ],
    "app/domain/services/biometric_integration_service.py": [
      {
        "line": 204,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]"
      }
    ],
    "app/domain/services/mocks/mock_pat_service.py": [
      {
        "line": 37,
        "type": "error",
        "message": "Argument 2 of \"get_assessment_questions\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 37,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 37,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Argument 2 of \"submit_assessment\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 102,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 102,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 151,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 189,
        "type": "error",
        "message": "Argument 2 of \"get_assessment_history\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str | None\"  [override]"
      },
      {
        "line": 189,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 189,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Argument 2 of \"get_trend_analysis\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 218,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Argument \"responses\" to \"submit_assessment\" of \"MockPATService\" has incompatible type \"dict[str, int]\"; expected \"dict[str, int | float | str]\"  [arg-type]"
      },
      {
        "line": 320,
        "type": "note",
        "message": "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance"
      },
      {
        "line": 320,
        "type": "note",
        "message": "Consider using \"Mapping\" instead, which is covariant in the value type"
      }
    ],
    "app/domain/events/medication_events.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/events/appointment_events.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/entities/temporal_events.py": [
      {
        "line": 42,
        "type": "error",
        "message": "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 42,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 42,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]"
      },
      {
        "line": 43,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 43,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 47,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 47,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 123,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 123,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]"
      },
      {
        "line": 124,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 124,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 132,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 132,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Incompatible default for argument \"correlation_type\" (default has type \"None\", argument has type \"CorrelationType\")  [assignment]"
      },
      {
        "line": 179,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 179,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/entities/symptom_assessment.py": [
      {
        "line": 44,
        "type": "error",
        "message": "\"__post_init__\" undefined in superclass  [misc]"
      }
    ],
    "app/domain/entities/clinical_session.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "\"__post_init__\" undefined in superclass  [misc]"
      }
    ],
    "app/domain/entities/biometric_rule.py": [
      {
        "line": 5,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "No overload variant of \"field\" matches argument type \"datetime\"  [call-overload]"
      },
      {
        "line": 313,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 313,
        "type": "note",
        "message": "def [_T] field(*, default: _T, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T"
      },
      {
        "line": 313,
        "type": "note",
        "message": "def [_T] field(*, default_factory: Callable[[], _T], init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T"
      },
      {
        "line": 313,
        "type": "note",
        "message": "def field(*, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> Any"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"list[BiometricRuleCondition]\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"LogicalOperator\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"AlertPriority\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"bool\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime | None\"  [arg-type]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"int\"  [arg-type]"
      },
      {
        "line": 415,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"UUID | None\")  [assignment]"
      }
    ],
    "app/tests/infrastructure/aws/test_aws_fixtures.py": [
      {
        "line": 27,
        "type": "error",
        "message": "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]"
      }
    ],
    "app/infrastructure/ml_services/digital_twin_integration/service.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"BiometricCorrelationService\"; maybe \"IBiometricCorrelationService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"DigitalTwinIntegrationService\"; maybe \"IDigitalTwinIntegrationService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"PharmacogenomicsService\"; maybe \"IPharmacogenomicsService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"SymptomForecastingService\"; maybe \"ISymptomForecastingService\"?  [attr-defined]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Unexpected keyword argument \"symptom_forecast\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Unexpected keyword argument \"biometric_analysis\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Unexpected keyword argument \"pharmacogenomic_insights\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 335,
        "type": "error",
        "message": "Argument \"id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]"
      }
    ],
    "app/infrastructure/ml/digital_twin_integration_service.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Incompatible default for argument \"init_data\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 52,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 52,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Argument \"id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 136,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 410,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"Sequence[str]\")  [assignment]"
      },
      {
        "line": 558,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]"
      },
      {
        "line": 582,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/ml/mentallama/mocks/mock_mentalllama_service.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Signature of \"assess_risk\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 59,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 59,
        "type": "note",
        "message": "def assess_risk(self, text: str, risk_type: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 59,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 59,
        "type": "note",
        "message": "def assess_risk(self, text: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Argument 2 to \"assess_risk\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Signature of \"generate_digital_twin\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 65,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 65,
        "type": "note",
        "message": "def generate_digital_twin(self, text_data: list[str] | None = ..., demographic_data: dict[str, Any] | None = ..., medical_history: dict[str, Any] | None = ..., treatment_history: dict[str, Any] | None = ..., options: dict[str, Any] | None = ..., patient_id: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 65,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 65,
        "type": "note",
        "message": "def generate_digital_twin(self, user_profile: dict[str, Any], clinical_data: dict[str, Any] | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Argument 1 to \"generate_digital_twin\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any]\"; expected \"list[str] | None\"  [arg-type]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Signature of \"create_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def create_digital_twin_session(self, twin_id: str, session_type: str = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def create_digital_twin_session(self, digital_twin_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Argument 2 to \"create_digital_twin_session\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Signature of \"end_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 90,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 90,
        "type": "note",
        "message": "def end_digital_twin_session(self, session_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 90,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 90,
        "type": "note",
        "message": "def end_digital_twin_session(self, session_id: str) -> dict[str, Any]"
      }
    ],
    "app/domain/events/clinical_documentation_events.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/entities/digital_twin/neurotransmitter_model.py": [
      {
        "line": 50,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      }
    ],
    "app/core/interfaces/repositories/biometric_rule_repository.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricRule]\")  [assignment]"
      }
    ],
    "app/tests/application/presentation/models/digital_twin.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.models.biometric_data\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/models/biometric_data.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 173,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      }
    ],
    "app/tests/application/presentation/api/schemas/xgboost.py": [
      {
        "line": 567,
        "type": "error",
        "message": "Name \"hyperparameters\" already defined on line 565  [no-redef]"
      },
      {
        "line": 568,
        "type": "error",
        "message": "Name \"status\" already defined on line 566  [no-redef]"
      }
    ],
    "app/presentation/api/schemas/patient.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Decorators on top of @property are not supported  [misc]"
      }
    ],
    "app/infrastructure/repositories/memory/biometric_alert_template_repository.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/pat/models.py": [
      {
        "line": 241,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ValidationInfo\", variable has type \"dict[str, Any]\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_twin.py": [
      {
        "line": 169,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"Collection[str]\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_alert_rule.py": [
      {
        "line": 69,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"str\"  [call-overload]"
      },
      {
        "line": 69,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def get(self, BiometricMetricType, /) -> str | None"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def get(self, BiometricMetricType, str, /) -> str"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def [_T] get(self, BiometricMetricType, _T, /) -> str | _T"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/xgboost/interface.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 18,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 39,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 60,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 85,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 97,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 116,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 137,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 137,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      }
    ],
    "app/core/domain/entities/patient.py": [
      {
        "line": 75,
        "type": "error",
        "message": "Argument \"default_factory\" to \"Field\" has incompatible type \"type[ContactInfo]\"; expected \"Callable[[], Any] | None\"  [arg-type]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/mocks.py": [
      {
        "line": 124,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Return type \"dict[str, list[dict[str, Any]]]\" of \"list_endpoints\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"SageMakerServiceInterface\"  [override]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 243,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"invoke_endpoint\" incompatible with return type \"dict[str, Any]\" in supertype \"SageMakerRuntimeServiceInterface\"  [override]"
      },
      {
        "line": 270,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      }
    ],
    "app/presentation/api/schemas/xgboost.py": [
      {
        "line": 120,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      }
    ],
    "app/presentation/api/schemas/digital_twin.py": [
      {
        "line": 106,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]"
      },
      {
        "line": 206,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]"
      }
    ],
    "app/infrastructure/security/role/role_validator.py": [
      {
        "line": 39,
        "type": "error",
        "message": "\"object\" has no attribute \"lower\"  [attr-defined]"
      }
    ],
    "app/infrastructure/factories/mock_digital_twin_factory.py": [
      {
        "line": 75,
        "type": "error",
        "message": "Incompatible return value type (got \"MockDigitalTwinCoreService\", expected \"DigitalTwinCoreService\")  [return-value]"
      }
    ],
    "app/core/services/ml/xgboost/mock.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 46,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 46,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 46,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 46,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[Any, Any]]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 212,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 212,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 271,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_simulate_processing_delay\"  [attr-defined]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 296,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 296,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 296,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 296,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 411,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 449,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 487,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 540,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 551,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 551,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 551,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 551,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 551,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 698,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 710,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 710,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 710,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 710,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 710,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> dict[str, Any]"
      },
      {
        "line": 728,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 802,
        "type": "error",
        "message": "Name \"integrate_with_digital_twin\" already defined on line 46  [no-redef]"
      },
      {
        "line": 802,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 802,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 802,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 802,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 802,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> dict[str, Any]"
      },
      {
        "line": 820,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 885,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 897,
        "type": "error",
        "message": "Name \"get_model_info\" already defined on line 43  [no-redef]"
      },
      {
        "line": 897,
        "type": "error",
        "message": "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 897,
        "type": "error",
        "message": "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"MLServiceInterface\"  [override]"
      },
      {
        "line": 910,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 1015,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 1015,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1023,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 1023,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1061,
        "type": "error",
        "message": "\"DataPrivacyError\" has no attribute \"pattern_types\"  [attr-defined]"
      },
      {
        "line": 1534,
        "type": "error",
        "message": "Need type annotation for \"risk_factors\"  [var-annotated]"
      },
      {
        "line": 1670,
        "type": "error",
        "message": "Need type annotation for \"side_effects\"  [var-annotated]"
      },
      {
        "line": 1862,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1867,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1872,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1882,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1887,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1892,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1902,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1907,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1912,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1923,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1926,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1928,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1929,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1933,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1934,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      }
    ],
    "app/core/interfaces/services/authentication_service.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 18,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      }
    ],
    "app/core/interfaces/services/ml/pat_interface.py": [
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible default for argument \"include_features\" (default has type \"None\", argument has type \"list[str]\")  [assignment]"
      },
      {
        "line": 79,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 79,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/interfaces/repositories/biometric_twin_repository.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 17,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricTwinState]\")  [assignment]"
      }
    ],
    "app/presentation/api/schemas/biometric.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Module \"app.presentation.api.schemas.xgboost\" does not explicitly export attribute \"BaseModelConfig\"  [attr-defined]"
      }
    ],
    "app/infrastructure/persistence/repositories/mock_audit_log_repository.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Invalid index type \"str | None\" for \"dict[str, AuditLog]\"; expected type \"str\"  [index]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]"
      }
    ],
    "app/infrastructure/messaging/secure_messaging_service.py": [
      {
        "line": 164,
        "type": "error",
        "message": "Item \"DHPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"DSAPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"EllipticCurvePublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"Ed25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"Ed448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"X25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Item \"X448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"DHPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"Ed25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"Ed448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"DSAPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"EllipticCurvePrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"X25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Item \"X448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 417,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 451,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 485,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 527,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/services/biometric_event_processor.py": [
      {
        "line": 145,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 151,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 161,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 174,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 327,
        "type": "error",
        "message": "Incompatible default for argument \"acknowledge_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 327,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 327,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 337,
        "type": "error",
        "message": "Incompatible default for argument \"resolution_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 337,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 337,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 338,
        "type": "error",
        "message": "Incompatible default for argument \"resolution_note\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 338,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 338,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 403,
        "type": "error",
        "message": "Argument 1 to \"_get_recipient_for_patient\" of \"EmailAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 405,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 412,
        "type": "error",
        "message": "\"object\" has no attribute \"send_email\"  [attr-defined]"
      },
      {
        "line": 486,
        "type": "error",
        "message": "Argument 1 to \"_get_recipient_for_patient\" of \"SMSAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 492,
        "type": "error",
        "message": "\"object\" has no attribute \"send_sms\"  [attr-defined]"
      },
      {
        "line": 557,
        "type": "error",
        "message": "Argument 1 to \"_get_recipients_for_patient\" of \"InAppAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 561,
        "type": "error",
        "message": "\"object\" has no attribute \"send_notification\"  [attr-defined]"
      },
      {
        "line": 563,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 776,
        "type": "error",
        "message": "Incompatible default for argument \"template_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 776,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 776,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 811,
        "type": "error",
        "message": "Incompatible default for argument \"name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 811,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 811,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 812,
        "type": "error",
        "message": "Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 812,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 812,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 813,
        "type": "error",
        "message": "Incompatible default for argument \"priority\" (default has type \"None\", argument has type \"AlertPriority\")  [assignment]"
      },
      {
        "line": 813,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 813,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 814,
        "type": "error",
        "message": "Incompatible default for argument \"parameters\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 814,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 814,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 815,
        "type": "error",
        "message": "Incompatible default for argument \"created_by\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 815,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 815,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/database_settings.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Extra keys (\"env_file\", \"env_prefix\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 48,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      }
    ],
    "app/core/services/ml/xgboost/aws_service.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 67,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 67,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 130,
        "type": "error",
        "message": "Name \"aws_service_factory\" is not defined  [name-defined]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 256,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 256,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 256,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 256,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 256,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 256,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 256,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 256,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 303,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 305,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]"
      },
      {
        "line": 390,
        "type": "error",
        "message": "\"type[RiskLevel]\" has no attribute \"MEDIUM\"  [attr-defined]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "\"type[RiskLevel]\" has no attribute \"UNKNOWN\"  [attr-defined]"
      },
      {
        "line": 419,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 510,
        "type": "note",
        "message": "\"_store_prediction\" of \"AWSXGBoostService\" defined here"
      },
      {
        "line": 546,
        "type": "error",
        "message": "\"Observer\" has no attribute \"on_event\"  [attr-defined]"
      },
      {
        "line": 556,
        "type": "error",
        "message": "\"Observer\" has no attribute \"on_event\"  [attr-defined]"
      },
      {
        "line": 583,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 583,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 586,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 589,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 600,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 603,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]"
      },
      {
        "line": 603,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]"
      },
      {
        "line": 604,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 605,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 610,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 610,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 611,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 612,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 623,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Collection[str]]\", expected \"list[dict[str, Any]]\")  [return-value]"
      },
      {
        "line": 628,
        "type": "error",
        "message": "Name \"get_available_models\" already defined on line 562  [no-redef]"
      },
      {
        "line": 639,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 644,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 651,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 715,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 735,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]"
      },
      {
        "line": 738,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 739,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 743,
        "type": "error",
        "message": "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]"
      },
      {
        "line": 752,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 759,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 761,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 761,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 761,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 761,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 761,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 761,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 761,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 761,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 761,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 813,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 831,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]"
      },
      {
        "line": 834,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 835,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 839,
        "type": "error",
        "message": "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]"
      },
      {
        "line": 848,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 855,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 857,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 857,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 857,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 857,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 857,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 857,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 857,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 857,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 857,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 888,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 888,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 890,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 900,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 904,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 907,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 907,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 919,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 920,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 926,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 926,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 926,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 926,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 926,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 926,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 926,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 926,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 926,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 957,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 957,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 959,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 982,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 990,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 1077,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1081,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1084,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 1084,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 1137,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1137,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1138,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1144,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1150,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1150,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1151,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1153,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1159,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1162,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1173,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1177,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1180,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1209,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1210,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1211,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1214,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1215,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1216,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1221,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1223,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1228,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1229,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1230,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1235,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1236,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1237,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1249,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1260,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1260,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1261,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1261,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1262,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1262,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1263,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1263,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1281,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1281,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1283,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1285,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1290,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1299,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1332,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1335,
        "type": "error",
        "message": "Name \"ServiceInitializationError\" is not defined  [name-defined]"
      },
      {
        "line": 1341,
        "type": "error",
        "message": "Name \"predict_risk\" already defined on line 256  [no-redef]"
      },
      {
        "line": 1341,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 1341,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1361,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1395,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1409,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 1409,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1431,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 1484,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1485,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1495,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1496,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1506,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1507,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1523,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1524,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1524,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1544,
        "type": "error",
        "message": "Name \"_store_prediction\" already defined on line 510  [no-redef]"
      },
      {
        "line": 1573,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1573,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1598,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1598,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1603,
        "type": "error",
        "message": "Name \"predict_treatment_response\" already defined on line 672  [no-redef]"
      },
      {
        "line": 1629,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1673,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1716,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 1755,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1756,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1756,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1792,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1792,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1816,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1816,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      }
    ],
    "app/core/interfaces/repositories/biometric_alert_repository.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 12,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricAlert]\")  [assignment]"
      }
    ],
    "app/core/config/settings.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"typing\" has no attribute \"Self\"  [attr-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Use `from typing_extensions import Self` instead"
      },
      {
        "line": 13,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/runtime_troubles.html#using-new-additions-to-the-typing-module"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Extra keys (\"env_file\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 251,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"SecretStr\")  [assignment]"
      }
    ],
    "app/config/settings.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, str]\"  [no-any-return]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, list[str]] | None\"  [no-any-return]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Name \"DATABASE_ECHO\" already defined on line 355  [no-redef]"
      },
      {
        "line": 385,
        "type": "error",
        "message": "Name \"DATABASE_SSL_MODE\" already defined on line 362  [no-redef]"
      },
      {
        "line": 388,
        "type": "error",
        "message": "Name \"DATABASE_SSL_CA\" already defined on line 365  [no-redef]"
      },
      {
        "line": 393,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 434,
        "type": "error",
        "message": "Name \"DATABASE_SSL_VERIFY\" already defined on line 368  [no-redef]"
      },
      {
        "line": 503,
        "type": "error",
        "message": "Name \"TESTING\" already defined on line 222  [no-redef]"
      },
      {
        "line": 544,
        "type": "error",
        "message": "Argument \"port\" to \"build\" of \"MultiHostUrl\" has incompatible type \"str\"; expected \"int | None\"  [arg-type]"
      },
      {
        "line": 570,
        "type": "error",
        "message": "Extra keys (\"case_sensitive\", \"env_file_encoding\", \"env_nested_delimiter\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 570,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      }
    ],
    "app/application/services/biometric_alert_rule_service.py": [
      {
        "line": 79,
        "type": "error",
        "message": "\"BiometricAlertTemplateRepository\" has no attribute \"get_by_id\"  [attr-defined]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"is_active\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]"
      },
      {
        "line": 533,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 536,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/repositories/biometric_alert_rule_repository.py": [
      {
        "line": 184,
        "type": "note",
        "message": "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here"
      },
      {
        "line": 184,
        "type": "note",
        "message": "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here"
      }
    ],
    "app/application/services/alert_rule_template_service.py": [
      {
        "line": 79,
        "type": "error",
        "message": "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 111,
        "type": "error",
        "message": "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 292,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 295,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/security/phi/sanitizer.py": [
      {
        "line": 20,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 20,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 20,
        "type": "note",
        "message": "def get_settings() -> Settings"
      },
      {
        "line": 20,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 20,
        "type": "note",
        "message": "def get_settings() -> Any"
      },
      {
        "line": 468,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 474,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 494,
        "type": "error",
        "message": "\"PHISanitizer\" has no attribute \"_is_path_whitelisted\"; maybe \"_is_whitelisted\" or \"is_whitelisted\"?  [attr-defined]"
      },
      {
        "line": 502,
        "type": "error",
        "message": "Argument 2 to \"_is_whitelisted\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 761,
        "type": "error",
        "message": "Item \"None\" of \"Match[str] | None\" has no attribute \"group\"  [union-attr]"
      },
      {
        "line": 793,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 801,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 817,
        "type": "error",
        "message": "Argument \"path\" to \"contains_phi\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 988,
        "type": "error",
        "message": "Incompatible return value type (got \"Logger\", expected \"PHISafeLogger\")  [return-value]"
      }
    ],
    "app/infrastructure/security/password/password_handler.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Library stubs not installed for \"passlib.context\"  [import-untyped]"
      },
      {
        "line": 16,
        "type": "error",
        "message": "Library stubs not installed for \"zxcvbn\"  [import-untyped]"
      },
      {
        "line": 16,
        "type": "note",
        "message": "Hint: \"python3 -m pip install types-zxcvbn\""
      },
      {
        "line": 83,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_uppercase\"  [attr-defined]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_lowercase\"  [attr-defined]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_digit\"  [attr-defined]"
      },
      {
        "line": 253,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_special\"  [attr-defined]"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Argument 1 to \"join\" of \"str\" has incompatible type \"list[str | None]\"; expected \"Iterable[str]\"  [arg-type]"
      }
    ],
    "app/infrastructure/security/auth/mfa_service.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Skipping analyzing \"qrcode\": module is installed, but missing library stubs or py.typed marker  [import-untyped]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_SECRET_KEY\"  [union-attr]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_ISSUER_NAME\"  [union-attr]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type Module)  [assignment]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      }
    ],
    "app/infrastructure/security/audit/audit.py": [
      {
        "line": 263,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"DummyAuditLogger\", variable has type \"AuditLogger\")  [assignment]"
      }
    ],
    "app/infrastructure/ml/pat/repository.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Module \"app.core.exceptions.ml_exceptions\" has no attribute \"RepositoryError\"  [attr-defined]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "\"Settings\" has no attribute \"ml\"  [attr-defined]"
      }
    ],
    "app/infrastructure/logging/audit_logger.py": [
      {
        "line": 30,
        "type": "error",
        "message": "\"Settings\" has no attribute \"DATABASE_AUDIT_ENABLED\"  [attr-defined]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"StreamHandler[TextIO]\", variable has type \"FileHandler\")  [assignment]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 146,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 146,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str, resource_type: str, action: str, status: str, phi_fields: list[str] | None = ..., reason: str | None = ..., request: Any | None = ..., request_context: dict[str, Any] | None = ...) -> Coroutine[Any, Any, str]"
      },
      {
        "line": 146,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 146,
        "type": "note",
        "message": "@classmethod"
      },
      {
        "line": 146,
        "type": "note",
        "message": "def log_phi_access(cls, user_id: str, patient_id: str, action: str, details: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 173,
        "type": "error",
        "message": "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 173,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 173,
        "type": "note",
        "message": "def log_security_event(self, description: str, actor_id: str | None = ..., status: str | None = ..., severity: AuditSeverity = ..., details: dict[str, Any] | None = ..., request: Any | None = ...) -> Coroutine[Any, Any, str]"
      },
      {
        "line": 173,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 173,
        "type": "note",
        "message": "@classmethod"
      },
      {
        "line": 173,
        "type": "note",
        "message": "def log_security_event(cls, event_type: str, user_id: str | None = ..., details: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 223,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 173,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      }
    ],
    "app/domain/services/clinical_rule_engine.py": [
      {
        "line": 54,
        "type": "error",
        "message": "Incompatible default for argument \"provider_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 54,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 54,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 271,
        "type": "error",
        "message": "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 271,
        "type": "error",
        "message": "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"int | None\"  [arg-type]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Argument 1 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"list[RuleCondition]\"; expected \"list[dict[Any, Any]]\"  [arg-type]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Argument 2 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"str | LogicalOperator | None\"; expected \"LogicalOperator | None\"  [arg-type]"
      },
      {
        "line": 370,
        "type": "error",
        "message": "\"BiometricRule\" has no attribute \"updated_at\"  [attr-defined]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Need type annotation for \"created_rules\" (hint: \"created_rules: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 486,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 487,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 488,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 489,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 490,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/core/services/ml/xgboost/aws_compatibility.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Argument \"aws_service_factory\" to \"AWSXGBoostService\" has incompatible type \"AWSServiceFactory\"; expected \"AWSServiceFactoryInterface | None\"  [arg-type]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Name \"AWSXGBoostService\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 44,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 44,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 82,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 82,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 82,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 82,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 82,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 82,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 82,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 82,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 133,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 133,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 133,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 133,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 133,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 133,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 133,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 133,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 154,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 154,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 162,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 162,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 162,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 162,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 162,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 162,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 162,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 162,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 199,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 199,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 222,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 222,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 222,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 222,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 222,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 222,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 222,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 222,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]"
      },
      {
        "line": 262,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]"
      }
    ],
    "app/infrastructure/security/phi/code_analyzer.py": [
      {
        "line": 499,
        "type": "error",
        "message": "\"type[PHICodeAnalyzer]\" has no attribute \"PHI_MODEL_NAMES\"  [attr-defined]"
      },
      {
        "line": 575,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 680,
        "type": "error",
        "message": "Argument 1 to \"_check_config_dict\" of \"PHICodeAnalyzer\" has incompatible type \"dict[Any, Any] | list[Any]\"; expected \"dict[Any, Any]\"  [arg-type]"
      },
      {
        "line": 740,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1048,
        "type": "error",
        "message": "Need type annotation for \"config_files\" (hint: \"config_files: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/domain/services/biometric_alert_notification_service.py": [
      {
        "line": 69,
        "type": "error",
        "message": "Argument 1 to \"_get_channels_for_priority\" of \"BiometricAlertNotificationService\" has incompatible type \"Any | None\"; expected \"AlertPriority\"  [arg-type]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 203,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 267,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      }
    ],
    "app/domain/services/biometric_alert_audit_service.py": [
      {
        "line": 115,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/xgboost/factory.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"str\": \"type[XGBoostService]\"; expected \"str\": \"type[XGBoostInterface]\"  [dict-item]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "\"get_xgboost_service\" defined here"
      }
    ],
    "app/application/services/biometric_alert_service.py": [
      {
        "line": 32,
        "type": "error",
        "message": "Signature of \"get_alerts\" incompatible with supertype \"AlertServiceInterface\"  [override]"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | UUID | None = ..., provider_id: str | UUID | None = ..., alert_type: str | None = ..., severity: AlertSeverity | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | None = ..., alert_type: str | None = ..., severity: AlertPriority | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[Alert]]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "Argument 1 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 114,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 114,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 117,
        "type": "error",
        "message": "Argument 4 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID | None\"  [override]"
      },
      {
        "line": 117,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 117,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 145,
        "type": "error",
        "message": "Argument 1 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 145,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 145,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Argument 3 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"AlertSeverity\"  [override]"
      },
      {
        "line": 147,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 147,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Argument 5 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]"
      },
      {
        "line": 149,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 149,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Incompatible default for argument \"source_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 149,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 149,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Argument 6 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]"
      },
      {
        "line": 150,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 150,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Incompatible default for argument \"metadata\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 150,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 150,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Argument 1 of \"get_alert_summary\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 184,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 184,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 217,
        "type": "error",
        "message": "\"type[AlertType]\" has no attribute \"MEDICATION\"  [attr-defined]"
      }
    ],
    "app/infrastructure/security/audit_logger.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Incompatible default for argument \"store_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Cannot determine type of \"_hmac_key\"  [has-type]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Collection[str]\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Sequence[str]\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 295,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 562,
        "type": "error",
        "message": "Need type annotation for \"all_fields\" (hint: \"all_fields: Set[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/security/token/in_memory_token_blacklist_repository.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/persistence/repositories/user_repository.py": [
      {
        "line": 36,
        "type": "error",
        "message": "Cannot instantiate abstract class \"UserRepository\" with abstract attributes \"count\" and \"list_all\"  [abstract]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_username\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_email\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"create\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" in supertype \"IUserRepository\"  [override]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Argument 1 of \"create\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]"
      },
      {
        "line": 155,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 155,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" in supertype \"IUserRepository\"  [override]"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Argument 1 of \"update\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]"
      },
      {
        "line": 177,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 177,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"delete\" incompatible with return type \"Coroutine[Any, Any, bool]\" in supertype \"IUserRepository\"  [override]"
      }
    ],
    "app/infrastructure/persistence/repositories/token_blacklist_repository.py": [
      {
        "line": 96,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 175,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/utils/validation.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Name \"ValidationError\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 724,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 728,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/infrastructure/ml/base/base_model.py": [
      {
        "line": 47,
        "type": "error",
        "message": "Need type annotation for \"metrics\" (hint: \"metrics: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 253,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/core/services/ml/xgboost/__init__.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Name \"PrivacyLevel\" is not defined  [name-defined]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Name \"PrivacyLevel\" is not defined  [name-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Unexpected keyword argument \"implementation_name\" for \"get_xgboost_service\"  [call-arg]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/infrastructure/security/jwt/jwt_service.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def encode(claims: dict[str, Any], key: str, algorithm: str = ..., headers: dict[str, Any] | None = ..., access_token: bool = ...) -> str"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def jwt_encode(claims: Any, key: Any, algorithm: Any = ..., **kwargs: Any) -> Any"
      },
      {
        "line": 35,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 35,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 35,
        "type": "note",
        "message": "def decode(token: str, key: str = ..., algorithms: list[str] | None = ..., audience: str | None = ..., issuer: str | None = ..., subject: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 35,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 35,
        "type": "note",
        "message": "def jwt_decode(token: Any, key: Any, algorithms: Any = ..., **kwargs: Any) -> Any"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Name \"TokenType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Name \"AuthenticationError\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[ITokenBlacklistRepository]\")  [assignment]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[Settings]\")  [assignment]"
      },
      {
        "line": 107,
        "type": "error",
        "message": "Name \"TokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Name \"InvalidTokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 117,
        "type": "error",
        "message": "Name \"TokenExpiredException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "Name \"RevokedTokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 127,
        "type": "error",
        "message": "Name \"TokenGenerationException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Name \"TokenType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 347,
        "type": "error",
        "message": "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"dict[Any, Any]\"  [arg-type]"
      },
      {
        "line": 350,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[Any, Any]]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 355,
        "type": "error",
        "message": "Signature of \"create_access_token\" incompatible with supertype \"IJwtService\"  [override]"
      },
      {
        "line": 355,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 355,
        "type": "note",
        "message": "def create_access_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str"
      },
      {
        "line": 355,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 355,
        "type": "note",
        "message": "def create_access_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., jti: str | None = ...) -> str"
      },
      {
        "line": 389,
        "type": "error",
        "message": "Signature of \"create_refresh_token\" incompatible with supertype \"IJwtService\"  [override]"
      },
      {
        "line": 389,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 389,
        "type": "note",
        "message": "def create_refresh_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str"
      },
      {
        "line": 389,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 389,
        "type": "note",
        "message": "def create_refresh_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., parent_token_jti: str | None = ..., family_id: str | None = ...) -> str"
      },
      {
        "line": 542,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 542,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 580,
        "type": "error",
        "message": "Argument \"days\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 586,
        "type": "error",
        "message": "Argument \"minutes\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 596,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 596,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 600,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 600,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 663,
        "type": "error",
        "message": "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 762,
        "type": "error",
        "message": "Unexpected keyword argument \"algorithm\" for \"decode\"; did you mean \"algorithms\"?  [call-arg]"
      },
      {
        "line": 763,
        "type": "error",
        "message": "Argument 5 to \"decode\" has incompatible type \"**dict[str, str]\"; expected \"list[str] | None\"  [arg-type]"
      },
      {
        "line": 806,
        "type": "error",
        "message": "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]"
      },
      {
        "line": 879,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 942,
        "type": "error",
        "message": "Returning Any from function declared to return \"User | None\"  [no-any-return]"
      },
      {
        "line": 992,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 1030,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 1090,
        "type": "error",
        "message": "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 1090,
        "type": "error",
        "message": "Argument 2 to \"add_to_blacklist\" of \"ITokenBlacklistRepository\" has incompatible type \"datetime\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 1122,
        "type": "error",
        "message": "Incompatible return value type (got \"Coroutine[Any, Any, bool]\", expected \"bool\")  [return-value]"
      },
      {
        "line": 1122,
        "type": "note",
        "message": "Maybe you forgot to use \"await\"?"
      },
      {
        "line": 1131,
        "type": "error",
        "message": "Incompatible default for argument \"resource_owner_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1131,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1131,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1199,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 1204,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 355,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 355,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 355,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 389,
        "type": "note",
        "message": "\"create_refresh_token\" of \"JWTService\" defined here"
      }
    ],
    "app/core/interfaces/services/jwt_service.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[TokenPayload]\")  [assignment]"
      }
    ],
    "app/tests/utils/jwt_helpers.py": [
      {
        "line": 7,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/services/security/jwt_token_service.py": [
      {
        "line": 58,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 84,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 207,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Are you missing an await?"
      }
    ],
    "app/infrastructure/security/jwt/__init__.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"IJwtService\"  [attr-defined]"
      },
      {
        "line": 8,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      }
    ],
    "app/infrastructure/logging/audit.py": [
      {
        "line": 395,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 395,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"get_audit_trail\"  [attr-defined]"
      }
    ],
    "app/application/security/jwt_service.py": [
      {
        "line": 82,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 107,
        "type": "error",
        "message": "\"Settings\" has no attribute \"access_token_expire_minutes\"  [attr-defined]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 133,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 179,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 183,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 214,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 221,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 222,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 234,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 235,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 249,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 260,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 261,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 296,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 299,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 300,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLISTED\"  [attr-defined]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Missing positional arguments \"jti\", \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 309,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 312,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLIST_FAILURE\"  [attr-defined]"
      },
      {
        "line": 316,
        "type": "error",
        "message": "\"type[AuditSeverity]\" has no attribute \"WARNING\"  [attr-defined]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]"
      },
      {
        "line": 339,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 340,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"SESSION_TOKENS_BLACKLISTED\"  [attr-defined]"
      }
    ],
    "app/application/security/authentication_service.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Module \"app.domain.exceptions\" has no attribute \"UserNotFoundError\"; maybe \"DataNotFoundError\"?  [attr-defined]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.interfaces.user_repository\"  [import-not-found]"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.security.password.password_service\"  [import-not-found]"
      },
      {
        "line": 34,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports"
      },
      {
        "line": 99,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 109,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_successful_login\"  [attr-defined]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 238,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]"
      },
      {
        "line": 279,
        "type": "error",
        "message": "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 285,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 306,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 347,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 348,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 360,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 360,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 363,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 363,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 363,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 375,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 375,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 377,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 407,
        "type": "error",
        "message": "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]"
      },
      {
        "line": 427,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 453,
        "type": "error",
        "message": "\"User\" has no attribute \"permissions\"  [attr-defined]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 481,
        "type": "error",
        "message": "\"User\" has no attribute \"permissions\"  [attr-defined]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "Unexpected keyword argument \"permissions\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "Unexpected keyword argument \"additional_data\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 486,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"create_refresh_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 497,
        "type": "error",
        "message": "\"type[UUID]\" has no attribute \"uuid4\"  [attr-defined]"
      }
    ],
    "app/core/services/ml/pat/fixed_validation.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 14,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 14,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 38,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 107,
        "type": "error",
        "message": "Name \"Optional\" is not defined  [name-defined]"
      },
      {
        "line": 107,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Name \"Optional\" is not defined  [name-defined]"
      },
      {
        "line": 108,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 108,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 108,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 109,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 109,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 109,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 109,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 128,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 154,
        "type": "error",
        "message": "Name \"ResourceNotFoundError\" is not defined  [name-defined]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 166,
        "type": "error",
        "message": "Name \"ResourceNotFoundError\" is not defined  [name-defined]"
      }
    ],
    "app/core/services/ml/providers/bedrock_pat.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]"
      }
    ],
    "app/core/services/ml/providers/mock_pat.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]"
      }
    ],
    "app/core/services/ml/providers/text_generation.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.mentalllama\"  [import-not-found]"
      }
    ],
    "app/domain/entities/neurotransmitter_effect.py": [
      {
        "line": 178,
        "type": "error",
        "message": "Skipping analyzing \"scipy\": module is installed, but missing library stubs or py.typed marker  [import-untyped]"
      }
    ],
    "app/infrastructure/ml/mentallama/model_loader.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.logging.phi_logger\"  [import-not-found]"
      }
    ],
    "app/infrastructure/ml/pat/api.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.auth.jwt_handler\"  [import-not-found]"
      }
    ],
    "app/infrastructure/ml/symptom_forecasting/service.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.exceptions.ml_exceptions\"  [import-not-found]"
      }
    ],
    "app/infrastructure/ml/symptom_forecasting/xgboost_model.py": [
      {
        "line": 88,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"optuna\"  [import-not-found]"
      },
      {
        "line": 89,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"optuna.samplers\"  [import-not-found]"
      }
    ],
    "app/presentation/api/dependencies/repository.py": [
      {
        "line": 68,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.patient_repository\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/dependencies/database.py": [
      {
        "line": 57,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_repository\"  [import-not-found]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_rule_repository\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/dependencies/__init__.py": [
      {
        "line": 162,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.services.mock_biometric_alert_service\"  [import-not-found]"
      },
      {
        "line": 203,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.services.mock_biometric_alert_rule_service\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/actigraphy.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.actigraphy\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/appointments.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.appointment\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/biometric_alert_rules.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.biometric_alert\"  [import-not-found]"
      },
      {
        "line": 23,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.dependencies.auth\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/biometric_alerts.py": [
      {
        "line": 20,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]"
      },
      {
        "line": 26,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.biometric_alert_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/clinical_analysis.py": [
      {
        "line": 20,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.ml_schemas\"  [import-not-found]"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/clinical_sessions.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.clinical_session\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/digital_twins.py": [
      {
        "line": 37,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.digital_twin_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/mentallama.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.ml\"  [import-not-found]"
      },
      {
        "line": 10,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/symptom_assessments.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.symptom_assessment\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/temporal_neurotransmitter.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.temporal_neurotransmitter\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/xgboost.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.xgboost\"  [import-not-found]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.xgboost_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/routes.py": [
      {
        "line": 200,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.routers.ml.test_xgboost_router\"  [import-not-found]"
      }
    ],
    "app/tests/core/security/base_security_test_utils.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.authentication\"  [import-not-found]"
      },
      {
        "line": 10,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.rbac\"  [import-not-found]"
      }
    ],
    "app/tests/mocks/mock_auth_dependencies.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.dto.auth.token\"  [import-not-found]"
      }
    ],
    "app/tests/security/auth/test_auth_hipaa_compliance.py": [
      {
        "line": 21,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.security.auth_middleware\"  [import-not-found]"
      }
    ],
    "app/tests/unit/presentation/api/v1/endpoints/test_biometric_alerts_endpoint.py": [
      {
        "line": 79,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_repository\"  [import-not-found]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_rule_repository\"  [import-not-found]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_template_repository\"  [import-not-found]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.services.biometric_event_processor\"  [import-not-found]"
      }
    ],
    "app/tests/utils/quantum_db_fix.py": [
      {
        "line": 35,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.passwords\"  [import-not-found]"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.database.base\"  [import-not-found]"
      }
    ]
  },
  "analysis": {
    "total_files": 162,
    "total_issues": 1715,
    "issue_types": {
      "Module has no attribute \"__import__\"  [attr-defined]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.requests\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.responses\"  [import-not-found]": 1,
      "Library stubs not installed for \"passlib.context\"  [import-untyped]": 2,
      "Hint: \"python3 -m pip install types-passlib\"": 1,
      "(or run \"mypy --install-types\" to install all missing stub packages)": 1,
      "Returning Any from function declared to return \"bool\"  [no-any-return]": 31,
      "Returning Any from function declared to return \"str\"  [no-any-return]": 5,
      "Name \"List\" is not defined  [name-defined]": 4,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")": 4,
      "Returning Any from function declared to return \"list[str]\"  [no-any-return]": 5,
      "Returning Any from function declared to return \"dict[str, float]\"  [no-any-return]": 1,
      "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]": 2,
      "Function \"app.domain.value_objects.address.Address.dict\" is not valid as a type  [valid-type]": 1,
      "Perhaps you need \"Callable[...]\" or a callback protocol?": 2,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]": 1,
      "Function \"builtins.any\" is not valid as a type  [valid-type]": 2,
      "Perhaps you meant \"typing.Any\" instead of \"any\"?": 2,
      "Name \"InitializationError\" already defined on line 133  [no-redef]": 1,
      "\"__init__\" of \"BaseException\" defined here": 1,
      "\"ConfigurationError\" defined here": 11,
      "\"ExternalServiceException\" defined here": 30,
      "\"ResourceNotFoundError\" defined here": 8,
      "Incompatible types in assignment (expression has type \"type[MockYamlModule]\", target has type Module)  [assignment]": 1,
      "Module has no attribute \"safe_load\"  [attr-defined]": 1,
      "Module has no attribute \"dump\"  [attr-defined]": 1,
      "Need type annotation for \"_predictions\" (hint: \"_predictions: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]": 3,
      "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]": 2,
      "Cannot determine type of \"state\"  [has-type]": 1,
      "Cannot determine type of \"new_state\"  [has-type]": 1,
      "Unused \"type: ignore\" comment  [unused-ignore]": 8,
      "Argument 1 to \"get\" of \"dict\" has incompatible type \"Role | str\"; expected \"Role\"  [arg-type]": 1,
      "Incompatible return value type (got \"tuple[int | float, int]\", expected \"tuple[int, int]\")  [return-value]": 1,
      "Returning Any from function declared to return \"dict[str, list[dict[str, Any]]]\"  [no-any-return]": 1,
      "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]": 58,
      "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]": 4,
      "Function \"app.domain.value_objects.emergency_contact.EmergencyContact.dict\" is not valid as a type  [valid-type]": 1,
      "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 5,
      "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True": 67,
      "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase": 67,
      "Incompatible default for argument \"resource_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"action\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"permission\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"resource\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"until\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]": 4,
      "Incompatible default for argument \"attempts\" (default has type \"None\", argument has type \"int\")  [assignment]": 1,
      "Incompatible default for argument \"original_exception\" (default has type \"None\", argument has type \"Exception\")  [assignment]": 1,
      "Incompatible default for argument \"entity_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"entity_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"message\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"repository\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"operation\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"current_state\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"required_state\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 4,
      "Incompatible default for argument \"conflicting_appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"parameter\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"model_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"service_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Unexpected keyword argument \"details\" for \"__init__\" of \"BaseException\"; did you mean \"detail\"?  [call-arg]": 1,
      "Need type annotation for \"phi_detected\" (hint: \"phi_detected: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"findings\" (hint: \"findings: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"findings\"  [var-annotated]": 1,
      "Need type annotation for \"files_examined\" (hint: \"files_examined: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"generated_files\" (hint: \"generated_files: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"None\")  [assignment]": 1,
      "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Value of type \"Collection[str]\" is not indexable  [index]": 34,
      "Unsupported target for indexed assignment (\"Collection[str]\")  [index]": 18,
      "Unsupported operand types for + (\"object\" and \"int\")  [operator]": 4,
      "\"object\" has no attribute \"append\"  [attr-defined]": 13,
      "Unsupported left operand type for + (\"object\")  [operator]": 1,
      "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"int\", target has type \"Collection[str]\")  [assignment]": 1,
      "\"Collection[str]\" has no attribute \"items\"  [attr-defined]": 2,
      "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]": 2,
      "Left operand is of type \"Collection[str] | int\"": 2,
      "Argument 1 to \"fromisoformat\" of \"date\" has incompatible type \"Collection[str]\"; expected \"str\"  [arg-type]": 1,
      "Value of type \"object\" is not indexable  [index]": 16,
      "Unsupported target for indexed assignment (\"object\")  [index]": 2,
      "Cannot find implementation or library stub for module named \"dashboard.dashboard\"  [import-not-found]": 1,
      "Item \"None\" of \"date | str | None\" has no attribute \"isoformat\"  [union-attr]": 1,
      "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]": 4,
      "Cannot find implementation or library stub for module named \"app.domain.events.base_event\"  [import-not-found]": 1,
      "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 2,
      "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"temporal_constraints\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 1,
      "Need type annotation for \"neighbors\" (hint: \"neighbors: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"adjacency\" (hint: \"adjacency: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"chains\" (hint: \"chains: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"str\", target has type \"float\")  [assignment]": 1,
      "Need type annotation for \"configs\"  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"ClinicalSignificance\")  [assignment]": 1,
      "Value expression in dictionary comprehension has incompatible type \"BiometricDataPoint | None\"; expected type \"BiometricDataPoint\"  [misc]": 1,
      "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]": 7,
      "Need type annotation for \"client_requests\" (hint: \"client_requests: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible default for argument \"roles\" (default has type \"None\", argument has type \"list[str]\")  [assignment]": 1,
      "Incompatible import of \"AuthorizationError\" (imported name has type \"type[app.core.exceptions.base_exceptions.AuthorizationError]\", local name has type \"type[app.core.exceptions.auth_exceptions.AuthorizationError]\")  [assignment]": 1,
      "Incompatible import of \"SecurityException\" (imported name has type \"type[app.core.exceptions.base_exceptions.SecurityException]\", local name has type \"type[app.core.errors.security_exceptions.SecurityException]\")  [assignment]": 1,
      "Incompatible import of \"InvalidTokenError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.InvalidTokenError]\", local name has type \"type[app.core.exceptions.auth_exceptions.InvalidTokenError]\")  [assignment]": 1,
      "Incompatible import of \"TokenExpiredError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.TokenExpiredError]\", local name has type \"type[app.core.exceptions.auth_exceptions.TokenExpiredError]\")  [assignment]": 1,
      "Returning Any from function declared to return \"T\"  [no-any-return]": 1,
      "Incompatible return value type (got \"T | Awaitable[T]\", expected \"T\")  [return-value]": 1,
      "Incompatible default for argument \"params\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible types in \"await\" (actual type \"T\", expected type \"Awaitable[Any]\")  [misc]": 1,
      "Incompatible default for argument \"first_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"last_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"provider_type\" (default has type \"None\", argument has type \"ProviderType | str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"Neurotransmitter\", variable has type \"BrainRegion\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"dict[Any, BrainRegionStateAdapter]\", variable has type \"dict[Neurotransmitter, NeurotransmitterStateAdapter]\")  [assignment]": 1,
      "Module has no attribute \"time\"  [attr-defined]": 1,
      "Argument 1 to \"_ensure_datetime\" has incompatible type \"datetime | Any | None\"; expected \"datetime | str\"  [arg-type]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"predict\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]": 2,
      "Signature of \"is_initialized\" incompatible with supertype \"XGBoostInterface\"  [override]": 1,
      "Superclass:": 35,
      "def is_initialized(self) -> bool": 1,
      "Subclass:": 35,
      "bool": 1,
      "Return type \"Coroutine[Any, Any, list[dict[str, Any]]]\" of \"get_available_models\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"get_model_info\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Attribute \"_observers\" already defined on line 164  [no-redef]": 1,
      "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]": 6,
      "Name \"ServiceConfigurationError\" is not defined  [name-defined]": 4,
      "Name \"uuid\" is not defined  [name-defined]": 3,
      "Name \"integrate_with_digital_twin\" already defined on line 182  [no-redef]": 1,
      "Name \"get_model_info\" already defined on line 175  [no-redef]": 1,
      "Name \"EventType\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"Observer\" already defined (possibly by an import)  [no-redef]": 1,
      "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]": 4,
      "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]": 2,
      "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]": 4,
      "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]": 9,
      "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]": 10,
      "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]": 10,
      "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]": 10,
      "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]": 4,
      "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]": 4,
      "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]": 3,
      "\"None\" has no attribute \"scan\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"head_bucket\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"list_endpoints\"  [attr-defined]": 3,
      "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]": 2,
      "\"None\" has no attribute \"get_item\"  [attr-defined]": 3,
      "\"None\" has no attribute \"update_item\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]": 2,
      "Cannot determine type of \"_privacy_level\"  [has-type]": 16,
      "Cannot determine type of \"_dynamodb_table_name\"  [has-type]": 11,
      "Cannot determine type of \"_region_name\"  [has-type]": 6,
      "\"type[EventType]\" has no attribute \"INITIALIZATION\"  [attr-defined]": 1,
      "Unexpected keyword argument \"details\" for \"ConfigurationError\"; did you mean \"detail\"?  [call-arg]": 1,
      "Cannot determine type of \"_endpoint_prefix\"  [has-type]": 18,
      "\"None\" has no attribute \"put_item\"  [attr-defined]": 1,
      "Cannot determine type of \"_model_mappings\"  [has-type]": 17,
      "\"None\" has no attribute \"describe_model\"  [attr-defined]": 1,
      "Cannot determine type of \"_bucket_name\"  [has-type]": 11,
      "Cannot determine type of \"_audit_table_name\"  [has-type]": 7,
      "Missing return statement  [return]": 1,
      "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]": 2,
      "\"type[PrivacyLevel]\" has no attribute \"MAXIMUM\"  [attr-defined]": 1,
      "Need type annotation for \"_models\" (hint: \"_models: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_digital_twin_sessions\" (hint: \"_digital_twin_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]": 3,
      "Argument \"key\" to \"sorted\" has incompatible type \"Callable[[tuple[str, dict[str, object]]], object]\"; expected \"Callable[[tuple[str, dict[str, object]]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 1,
      "Unsupported operand types for < (\"float\" and \"object\")  [operator]": 2,
      "Need type annotation for \"session\"  [var-annotated]": 2,
      "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]": 1,
      "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]": 1,
      "def get_insights(self, session_id: str, insight_type: str | None = ...) -> dict[str, Any]": 1,
      "Need type annotation for \"sender_counts\" (hint: \"sender_counts: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Argument 1 to \"format_iso\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]": 1,
      "\"Collection[str]\" has no attribute \"append\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"float\")  [assignment]": 1,
      "Generator has incompatible item type \"str\"; expected \"bool\"  [misc]": 1,
      "Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice\"  [index]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"Collection[str]\")  [assignment]": 1,
      "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]": 4,
      "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]": 2,
      "Unsupported operand types for > (\"float\" and \"object\")  [operator]": 1,
      "Invalid \"type: ignore\" comment  [syntax]": 1,
      "Signature of \"put_item\" incompatible with supertype \"DynamoDBServiceInterface\"  [override]": 1,
      "def put_item(self, table_name: str, item: dict[str, Any]) -> dict[str, Any]": 1,
      "def put_item(self, *, TableName: str, Item: dict[str, Any]) -> dict[str, Any]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.entities.digital_twin.biometric_rule\"  [import-not-found]": 1,
      "Name \"personalized_response\" is not defined  [name-defined]": 1,
      "Name \"result\" is not defined  [name-defined]": 1,
      "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]": 2,
      "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]": 5,
      "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]": 2,
      "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]": 2,
      "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]": 2,
      "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]": 2,
      "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"dict[<nothing>, <nothing>]\"  [call-overload]": 1,
      "Possible overload variants:": 3,
      "def get(self, Neurotransmitter, /) -> dict[BrainRegion, float] | None": 1,
      "def get(self, Neurotransmitter, dict[BrainRegion, float], /) -> dict[BrainRegion, float]": 1,
      "def [_T] get(self, Neurotransmitter, _T, /) -> dict[BrainRegion, float] | _T": 1,
      "\"EnhancedXGBoostService\" has no attribute \"treatment_response_models\"  [attr-defined]": 1,
      "Argument 1 to \"_calculate_efficacy_score\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]": 1,
      "Argument 1 to \"_summarize_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]": 1,
      "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], dict[str, float] | dict[str, Any] | float | str]\"; expected \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"dict[str, float] | dict[str, Any] | float | str\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"simulate_treatment_cascade\"  [attr-defined]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_temporal_response\"  [attr-defined]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]": 2,
      "Argument 2 of \"get_assessment_questions\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "This violates the Liskov substitution principle": 16,
      "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides": 16,
      "Argument 2 of \"submit_assessment\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "Argument 2 of \"get_assessment_history\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str | None\"  [override]": 1,
      "Argument 2 of \"get_trend_analysis\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "Argument \"responses\" to \"submit_assessment\" of \"MockPATService\" has incompatible type \"dict[str, int]\"; expected \"dict[str, int | float | str]\"  [arg-type]": 1,
      "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance": 1,
      "Consider using \"Mapping\" instead, which is covariant in the value type": 1,
      "Attributes without a default cannot follow attributes with one  [misc]": 38,
      "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 2,
      "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]": 2,
      "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"correlation_type\" (default has type \"None\", argument has type \"CorrelationType\")  [assignment]": 1,
      "\"__post_init__\" undefined in superclass  [misc]": 2,
      "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]": 2,
      "No overload variant of \"field\" matches argument type \"datetime\"  [call-overload]": 1,
      "def [_T] field(*, default: _T, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T": 1,
      "def [_T] field(*, default_factory: Callable[[], _T], init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T": 1,
      "def field(*, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> Any": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"list[BiometricRuleCondition]\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"LogicalOperator\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"AlertPriority\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"bool\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"int\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"UUID | None\")  [assignment]": 1,
      "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]": 2,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"BiometricCorrelationService\"; maybe \"IBiometricCorrelationService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"DigitalTwinIntegrationService\"; maybe \"IDigitalTwinIntegrationService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"PharmacogenomicsService\"; maybe \"IPharmacogenomicsService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"SymptomForecastingService\"; maybe \"ISymptomForecastingService\"?  [attr-defined]": 1,
      "Unexpected keyword argument \"symptom_forecast\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"biometric_analysis\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"pharmacogenomic_insights\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]": 2,
      "Argument \"id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]": 1,
      "Incompatible default for argument \"init_data\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 1,
      "Argument \"id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]": 3,
      "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"Sequence[str]\")  [assignment]": 1,
      "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]": 2,
      "Signature of \"assess_risk\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def assess_risk(self, text: str, risk_type: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def assess_risk(self, text: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 2 to \"assess_risk\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str | None\"  [arg-type]": 1,
      "Signature of \"generate_digital_twin\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def generate_digital_twin(self, text_data: list[str] | None = ..., demographic_data: dict[str, Any] | None = ..., medical_history: dict[str, Any] | None = ..., treatment_history: dict[str, Any] | None = ..., options: dict[str, Any] | None = ..., patient_id: str | None = ...) -> dict[str, Any]": 1,
      "def generate_digital_twin(self, user_profile: dict[str, Any], clinical_data: dict[str, Any] | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 1 to \"generate_digital_twin\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any]\"; expected \"list[str] | None\"  [arg-type]": 1,
      "Signature of \"create_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def create_digital_twin_session(self, twin_id: str, session_type: str = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def create_digital_twin_session(self, digital_twin_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 2 to \"create_digital_twin_session\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str\"  [arg-type]": 1,
      "Signature of \"end_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def end_digital_twin_session(self, session_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def end_digital_twin_session(self, session_id: str) -> dict[str, Any]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]": 1,
      "\"Medication\" has no attribute \"medication_class\"  [attr-defined]": 2,
      "Cannot assign to a type  [misc]": 9,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricRule]\")  [assignment]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.models.biometric_data\"  [import-not-found]": 1,
      "Name \"field_validator\" is not defined  [name-defined]": 6,
      "Name \"hyperparameters\" already defined on line 565  [no-redef]": 1,
      "Name \"status\" already defined on line 566  [no-redef]": 1,
      "Decorators on top of @property are not supported  [misc]": 1,
      "Incompatible types in assignment (expression has type \"ValidationInfo\", variable has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"Collection[str]\")  [assignment]": 1,
      "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"str\"  [call-overload]": 1,
      "def get(self, BiometricMetricType, /) -> str | None": 1,
      "def get(self, BiometricMetricType, str, /) -> str": 1,
      "def [_T] get(self, BiometricMetricType, _T, /) -> str | _T": 1,
      "Missing return statement  [empty-body]": 7,
      "If the method is meant to be abstract, use @abc.abstractmethod": 7,
      "Argument \"default_factory\" to \"Field\" has incompatible type \"type[ContactInfo]\"; expected \"Callable[[], Any] | None\"  [arg-type]": 1,
      "Return type \"dict[str, list[dict[str, Any]]]\" of \"list_endpoints\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"SageMakerServiceInterface\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"invoke_endpoint\" incompatible with return type \"dict[str, Any]\" in supertype \"SageMakerRuntimeServiceInterface\"  [override]": 1,
      "Returning Any from function declared to return \"int\"  [no-any-return]": 1,
      "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]": 2,
      "\"object\" has no attribute \"lower\"  [attr-defined]": 1,
      "Incompatible return value type (got \"MockDigitalTwinCoreService\", expected \"DigitalTwinCoreService\")  [return-value]": 1,
      "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]": 3,
      "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]": 4,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 6,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[Any, Any]]": 1,
      "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]": 3,
      "\"MockXGBoostService\" has no attribute \"_simulate_processing_delay\"  [attr-defined]": 1,
      "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]": 4,
      "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 7,
      "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 7,
      "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]": 4,
      "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]": 3,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 5,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 1,
      "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]": 3,
      "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 5,
      "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> dict[str, Any]": 1,
      "Name \"integrate_with_digital_twin\" already defined on line 46  [no-redef]": 1,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> dict[str, Any]": 1,
      "Name \"get_model_info\" already defined on line 43  [no-redef]": 1,
      "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"MLServiceInterface\"  [override]": 1,
      "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]": 8,
      "Are you missing an await?": 17,
      "\"DataPrivacyError\" has no attribute \"pattern_types\"  [attr-defined]": 1,
      "Need type annotation for \"risk_factors\"  [var-annotated]": 1,
      "Need type annotation for \"side_effects\"  [var-annotated]": 1,
      "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]": 6,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]": 3,
      "Incompatible default for argument \"include_features\" (default has type \"None\", argument has type \"list[str]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricTwinState]\")  [assignment]": 1,
      "Module \"app.presentation.api.schemas.xgboost\" does not explicitly export attribute \"BaseModelConfig\"  [attr-defined]": 1,
      "Invalid index type \"str | None\" for \"dict[str, AuditLog]\"; expected type \"str\"  [index]": 1,
      "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]": 1,
      "Item \"DHPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"DSAPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"EllipticCurvePublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"Ed25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"Ed448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"X25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"X448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"DHPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"Ed25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"Ed448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"DSAPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"EllipticCurvePrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"X25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"X448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Incompatible default for argument \"acknowledge_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 1,
      "Incompatible default for argument \"resolution_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 1,
      "Incompatible default for argument \"resolution_note\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Argument 1 to \"_get_recipient_for_patient\" of \"EmailAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]": 8,
      "\"object\" has no attribute \"send_email\"  [attr-defined]": 1,
      "Argument 1 to \"_get_recipient_for_patient\" of \"SMSAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "\"object\" has no attribute \"send_sms\"  [attr-defined]": 1,
      "Argument 1 to \"_get_recipients_for_patient\" of \"InAppAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "\"object\" has no attribute \"send_notification\"  [attr-defined]": 1,
      "Incompatible default for argument \"template_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"priority\" (default has type \"None\", argument has type \"AlertPriority\")  [assignment]": 1,
      "Incompatible default for argument \"parameters\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible default for argument \"created_by\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 1,
      "Extra keys (\"env_file\", \"env_prefix\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]": 8,
      "Name \"aws_service_factory\" is not defined  [name-defined]": 1,
      "Cannot determine type of \"_initialized\"  [has-type]": 8,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]": 1,
      "\"type[RiskLevel]\" has no attribute \"MEDIUM\"  [attr-defined]": 1,
      "\"type[RiskLevel]\" has no attribute \"UNKNOWN\"  [attr-defined]": 1,
      "\"_store_prediction\" of \"AWSXGBoostService\" defined here": 1,
      "\"Observer\" has no attribute \"on_event\"  [attr-defined]": 2,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]": 3,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]": 3,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]": 1,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]": 3,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]": 3,
      "Incompatible return value type (got \"dict[str, Collection[str]]\", expected \"list[dict[str, Any]]\")  [return-value]": 1,
      "Name \"get_available_models\" already defined on line 562  [no-redef]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]": 5,
      "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]": 2,
      "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]": 3,
      "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]": 2,
      "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]": 3,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 4,
      "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]": 2,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]": 4,
      "Cannot determine type of \"_s3\"  [has-type]": 3,
      "Cannot determine type of \"_dynamodb\"  [has-type]": 6,
      "Cannot determine type of \"_sagemaker\"  [has-type]": 3,
      "Cannot determine type of \"_sagemaker_runtime\"  [has-type]": 3,
      "Name \"ServiceInitializationError\" is not defined  [name-defined]": 1,
      "Name \"predict_risk\" already defined on line 256  [no-redef]": 1,
      "Name \"_store_prediction\" already defined on line 510  [no-redef]": 1,
      "Name \"predict_treatment_response\" already defined on line 672  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricAlert]\")  [assignment]": 1,
      "Module \"typing\" has no attribute \"Self\"  [attr-defined]": 1,
      "Use `from typing_extensions import Self` instead": 1,
      "See https://mypy.readthedocs.io/en/stable/runtime_troubles.html#using-new-additions-to-the-typing-module": 1,
      "Extra keys (\"env_file\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"SecretStr\")  [assignment]": 1,
      "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 5,
      "Returning Any from function declared to return \"dict[str, str]\"  [no-any-return]": 1,
      "Returning Any from function declared to return \"dict[str, list[str]] | None\"  [no-any-return]": 1,
      "Name \"DATABASE_ECHO\" already defined on line 355  [no-redef]": 1,
      "Name \"DATABASE_SSL_MODE\" already defined on line 362  [no-redef]": 1,
      "Name \"DATABASE_SSL_CA\" already defined on line 365  [no-redef]": 1,
      "Name \"DATABASE_SSL_VERIFY\" already defined on line 368  [no-redef]": 1,
      "Name \"TESTING\" already defined on line 222  [no-redef]": 1,
      "Argument \"port\" to \"build\" of \"MultiHostUrl\" has incompatible type \"str\"; expected \"int | None\"  [arg-type]": 1,
      "Extra keys (\"case_sensitive\", \"env_file_encoding\", \"env_nested_delimiter\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "\"BiometricAlertTemplateRepository\" has no attribute \"get_by_id\"  [attr-defined]": 1,
      "Unexpected keyword argument \"patient_id\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]": 1,
      "Unexpected keyword argument \"is_active\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]": 1,
      "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here": 2,
      "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 2,
      "All conditional function variants must have identical signatures  [misc]": 3,
      "Original:": 3,
      "def get_settings() -> Settings": 1,
      "Redefinition:": 3,
      "def get_settings() -> Any": 1,
      "\"str\" has no attribute \"search\"  [attr-defined]": 4,
      "\"PHISanitizer\" has no attribute \"_is_path_whitelisted\"; maybe \"_is_whitelisted\" or \"is_whitelisted\"?  [attr-defined]": 1,
      "Argument 2 to \"_is_whitelisted\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]": 1,
      "Item \"None\" of \"Match[str] | None\" has no attribute \"group\"  [union-attr]": 1,
      "Argument \"path\" to \"contains_phi\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]": 1,
      "Incompatible return value type (got \"Logger\", expected \"PHISafeLogger\")  [return-value]": 1,
      "Library stubs not installed for \"zxcvbn\"  [import-untyped]": 1,
      "Hint: \"python3 -m pip install types-zxcvbn\"": 1,
      "\"PasswordHandler\" has no attribute \"require_uppercase\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_lowercase\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_digit\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_special\"  [attr-defined]": 1,
      "Argument 1 to \"join\" of \"str\" has incompatible type \"list[str | None]\"; expected \"Iterable[str]\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]": 1,
      "Skipping analyzing \"qrcode\": module is installed, but missing library stubs or py.typed marker  [import-untyped]": 1,
      "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_SECRET_KEY\"  [union-attr]": 1,
      "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_ISSUER_NAME\"  [union-attr]": 1,
      "Incompatible types in assignment (expression has type \"Any | None\", variable has type Module)  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"DummyAuditLogger\", variable has type \"AuditLogger\")  [assignment]": 1,
      "Module \"app.core.exceptions.ml_exceptions\" has no attribute \"RepositoryError\"  [attr-defined]": 1,
      "\"Settings\" has no attribute \"ml\"  [attr-defined]": 1,
      "\"Settings\" has no attribute \"DATABASE_AUDIT_ENABLED\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"StreamHandler[TextIO]\", variable has type \"FileHandler\")  [assignment]": 1,
      "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]": 1,
      "def log_phi_access(self, actor_id: str, patient_id: str, resource_type: str, action: str, status: str, phi_fields: list[str] | None = ..., reason: str | None = ..., request: Any | None = ..., request_context: dict[str, Any] | None = ...) -> Coroutine[Any, Any, str]": 1,
      "@classmethod": 2,
      "def log_phi_access(cls, user_id: str, patient_id: str, action: str, details: dict[str, Any] | None = ...) -> None": 1,
      "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]": 1,
      "def log_security_event(self, description: str, actor_id: str | None = ..., status: str | None = ..., severity: AuditSeverity = ..., details: dict[str, Any] | None = ..., request: Any | None = ...) -> Coroutine[Any, Any, str]": 1,
      "def log_security_event(cls, event_type: str, user_id: str | None = ..., details: dict[str, Any] | None = ...) -> None": 1,
      "\"log_security_event\" of \"AuditLogger\" defined here": 15,
      "Incompatible default for argument \"provider_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 1,
      "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"int | None\"  [arg-type]": 1,
      "Argument 1 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"list[RuleCondition]\"; expected \"list[dict[Any, Any]]\"  [arg-type]": 1,
      "Argument 2 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"str | LogicalOperator | None\"; expected \"LogicalOperator | None\"  [arg-type]": 1,
      "\"BiometricRule\" has no attribute \"updated_at\"  [attr-defined]": 1,
      "Need type annotation for \"created_rules\" (hint: \"created_rules: List[<type>] = ...\")  [var-annotated]": 1,
      "Argument \"aws_service_factory\" to \"AWSXGBoostService\" has incompatible type \"AWSServiceFactory\"; expected \"AWSServiceFactoryInterface | None\"  [arg-type]": 1,
      "Name \"AWSXGBoostService\" already defined (possibly by an import)  [no-redef]": 1,
      "Cannot determine type of \"_impl\"  [has-type]": 12,
      "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 2,
      "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]": 2,
      "\"type[PHICodeAnalyzer]\" has no attribute \"PHI_MODEL_NAMES\"  [attr-defined]": 1,
      "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]": 2,
      "Argument 1 to \"_check_config_dict\" of \"PHICodeAnalyzer\" has incompatible type \"dict[Any, Any] | list[Any]\"; expected \"dict[Any, Any]\"  [arg-type]": 1,
      "Need type annotation for \"config_files\" (hint: \"config_files: List[<type>] = ...\")  [var-annotated]": 1,
      "Argument 1 to \"_get_channels_for_priority\" of \"BiometricAlertNotificationService\" has incompatible type \"Any | None\"; expected \"AlertPriority\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]": 2,
      "Dict entry 0 has incompatible type \"str\": \"type[XGBoostService]\"; expected \"str\": \"type[XGBoostInterface]\"  [dict-item]": 1,
      "\"get_xgboost_service\" defined here": 1,
      "Signature of \"get_alerts\" incompatible with supertype \"AlertServiceInterface\"  [override]": 1,
      "def get_alerts(self, patient_id: str | UUID | None = ..., provider_id: str | UUID | None = ..., alert_type: str | None = ..., severity: AlertSeverity | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]": 1,
      "def get_alerts(self, patient_id: str | None = ..., alert_type: str | None = ..., severity: AlertPriority | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[Alert]]": 1,
      "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]": 2,
      "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]": 2,
      "Argument 1 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 1,
      "Argument 4 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID | None\"  [override]": 1,
      "Argument 1 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 1,
      "Argument 3 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"AlertSeverity\"  [override]": 1,
      "Argument 5 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]": 1,
      "Incompatible default for argument \"source_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Argument 6 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]": 1,
      "Incompatible default for argument \"metadata\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Argument 1 of \"get_alert_summary\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 1,
      "\"type[AlertType]\" has no attribute \"MEDICATION\"  [attr-defined]": 1,
      "Incompatible default for argument \"store_path\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Cannot determine type of \"_hmac_key\"  [has-type]": 1,
      "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"Collection[str]\", variable has type \"str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"Sequence[str]\", variable has type \"str\")  [assignment]": 1,
      "Need type annotation for \"all_fields\" (hint: \"all_fields: Set[<type>] = ...\")  [var-annotated]": 1,
      "Cannot instantiate abstract class \"UserRepository\" with abstract attributes \"count\" and \"list_all\"  [abstract]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]": 1,
      "Returning Any from function declared to return \"User\"  [no-any-return]": 6,
      "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_username\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"get_by_email\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" in supertype \"IUserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"create\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" in supertype \"IUserRepository\"  [override]": 1,
      "Argument 1 of \"create\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" in supertype \"IUserRepository\"  [override]": 1,
      "Argument 1 of \"update\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"delete\" incompatible with return type \"Coroutine[Any, Any, bool]\" in supertype \"IUserRepository\"  [override]": 1,
      "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]": 11,
      "Name \"ValidationError\" already defined (possibly by an import)  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]": 1,
      "Need type annotation for \"metrics\" (hint: \"metrics: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"str\")  [assignment]": 1,
      "Name \"PrivacyLevel\" is not defined  [name-defined]": 2,
      "Unexpected keyword argument \"implementation_name\" for \"get_xgboost_service\"  [call-arg]": 1,
      "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]": 2,
      "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"str\")  [assignment]": 1,
      "def encode(claims: dict[str, Any], key: str, algorithm: str = ..., headers: dict[str, Any] | None = ..., access_token: bool = ...) -> str": 1,
      "def jwt_encode(claims: Any, key: Any, algorithm: Any = ..., **kwargs: Any) -> Any": 1,
      "def decode(token: str, key: str = ..., algorithms: list[str] | None = ..., audience: str | None = ..., issuer: str | None = ..., subject: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def jwt_decode(token: Any, key: Any, algorithms: Any = ..., **kwargs: Any) -> Any": 1,
      "Name \"TokenType\" already defined (possibly by an import)  [no-redef]": 2,
      "Name \"AuthenticationError\" already defined (possibly by an import)  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[ITokenBlacklistRepository]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[Settings]\")  [assignment]": 1,
      "Name \"TokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"InvalidTokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"TokenExpiredException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"RevokedTokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"TokenGenerationException\" already defined (possibly by an import)  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"dict[Any, Any]\", target has type \"str\")  [assignment]": 1,
      "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"dict[Any, Any]\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[Any, Any]]\", target has type \"str\")  [assignment]": 1,
      "Signature of \"create_access_token\" incompatible with supertype \"IJwtService\"  [override]": 1,
      "def create_access_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str": 1,
      "def create_access_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., jti: str | None = ...) -> str": 1,
      "Signature of \"create_refresh_token\" incompatible with supertype \"IJwtService\"  [override]": 1,
      "def create_refresh_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str": 1,
      "def create_refresh_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., parent_token_jti: str | None = ..., family_id: str | None = ...) -> str": 1,
      "Unsupported operand types for * (\"None\" and \"int\")  [operator]": 3,
      "Left operand is of type \"int | Any | None\"": 3,
      "Argument \"days\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]": 1,
      "Argument \"minutes\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]": 1,
      "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]": 1,
      "Unexpected keyword argument \"algorithm\" for \"decode\"; did you mean \"algorithms\"?  [call-arg]": 1,
      "Argument 5 to \"decode\" has incompatible type \"**dict[str, str]\"; expected \"list[str] | None\"  [arg-type]": 1,
      "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]": 1,
      "Function \"is_expired\" could always be true in boolean context  [truthy-function]": 3,
      "Returning Any from function declared to return \"User | None\"  [no-any-return]": 1,
      "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]": 2,
      "Argument 2 to \"add_to_blacklist\" of \"ITokenBlacklistRepository\" has incompatible type \"datetime\"; expected \"str\"  [arg-type]": 1,
      "Incompatible return value type (got \"Coroutine[Any, Any, bool]\", expected \"bool\")  [return-value]": 1,
      "Maybe you forgot to use \"await\"?": 1,
      "Incompatible default for argument \"resource_owner_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Returning Any from function declared to return \"str | None\"  [no-any-return]": 2,
      "\"create_access_token\" of \"JWTService\" defined here": 3,
      "\"create_refresh_token\" of \"JWTService\" defined here": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[TokenPayload]\")  [assignment]": 1,
      "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]": 2,
      "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]": 2,
      "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"IJwtService\"  [attr-defined]": 1,
      "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]": 1,
      "\"AuditLogger\" has no attribute \"get_audit_trail\"  [attr-defined]": 1,
      "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]": 4,
      "\"Settings\" has no attribute \"access_token_expire_minutes\"  [attr-defined]": 1,
      "Unexpected keyword argument \"event_type\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]": 9,
      "Unexpected keyword argument \"user_id\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]": 7,
      "Unexpected keyword argument \"metadata\" for \"log_security_event\" of \"IAuditLogger\"  [call-arg]": 9,
      "Value of type \"Coroutine[Any, Any, str]\" must be used  [unused-coroutine]": 9,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]": 4,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLISTED\"  [attr-defined]": 1,
      "Missing positional arguments \"jti\", \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]": 1,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLIST_FAILURE\"  [attr-defined]": 1,
      "\"type[AuditSeverity]\" has no attribute \"WARNING\"  [attr-defined]": 1,
      "\"type[AuditEventType]\" has no attribute \"SESSION_TOKENS_BLACKLISTED\"  [attr-defined]": 1,
      "Module \"app.domain.exceptions\" has no attribute \"UserNotFoundError\"; maybe \"DataNotFoundError\"?  [attr-defined]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.interfaces.user_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.security.password.password_service\"  [import-not-found]": 1,
      "See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports": 1,
      "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]": 4,
      "\"AuditLogger\" has no attribute \"log_successful_login\"  [attr-defined]": 1,
      "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]": 2,
      "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 3,
      "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]": 4,
      "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]": 2,
      "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 6,
      "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 6,
      "\"User\" has no attribute \"permissions\"  [attr-defined]": 2,
      "Unexpected keyword argument \"user_id\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"permissions\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"additional_data\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"user_id\" for \"create_refresh_token\" of \"JWTService\"  [call-arg]": 1,
      "\"type[UUID]\" has no attribute \"uuid4\"  [attr-defined]": 1,
      "Name \"Dict\" is not defined  [name-defined]": 5,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")": 5,
      "Name \"Any\" is not defined  [name-defined]": 5,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")": 5,
      "Name \"ValidationError\" is not defined  [name-defined]": 14,
      "Name \"Optional\" is not defined  [name-defined]": 2,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")": 2,
      "Name \"ResourceNotFoundError\" is not defined  [name-defined]": 2,
      "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.core.services.ml.mentalllama\"  [import-not-found]": 1,
      "Skipping analyzing \"scipy\": module is installed, but missing library stubs or py.typed marker  [import-untyped]": 1,
      "Cannot find implementation or library stub for module named \"app.core.logging.phi_logger\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.auth.jwt_handler\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.exceptions.ml_exceptions\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"optuna\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"optuna.samplers\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.patient_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_repository\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_rule_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.services.mock_biometric_alert_service\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.services.mock_biometric_alert_rule_service\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.actigraphy\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.appointment\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.biometric_alert\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.dependencies.auth\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.biometric_alert_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.ml_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.clinical_session\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.digital_twin_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.ml\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.symptom_assessment\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.temporal_neurotransmitter\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.xgboost\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.xgboost_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.routers.ml.test_xgboost_router\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.authentication\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.rbac\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.dto.auth.token\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.security.auth_middleware\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_rule_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_alert_template_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.services.biometric_event_processor\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.passwords\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.database.base\"  [import-not-found]": 1
    },
    "files_by_issue_count": [
      [
        "app/core/services/ml/xgboost/aws_service.py",
        191
      ],
      [
        "app/core/services/ml/xgboost/aws.py",
        159
      ],
      [
        "app/infrastructure/security/jwt/jwt_service.py",
        67
      ],
      [
        "app/core/services/ml/xgboost/aws_compatibility.py",
        66
      ],
      [
        "app/core/services/ml/xgboost/mock.py",
        65
      ],
      [
        "app/application/security/jwt_service.py",
        62
      ],
      [
        "app/domain/services/biometric_event_processor.py",
        52
      ],
      [
        "app/core/exceptions/base_exceptions.py",
        51
      ],
      [
        "app/application/security/authentication_service.py",
        47
      ],
      [
        "app/core/services/ml/pat/fixed_validation.py",
        46
      ],
      [
        "app/tests/security/scripts/run_tests_direct.py",
        37
      ],
      [
        "app/application/services/biometric_alert_service.py",
        37
      ],
      [
        "app/domain/exceptions/security_exceptions.py",
        36
      ],
      [
        "app/domain/services/enhanced_xgboost_service.py",
        34
      ],
      [
        "app/infrastructure/logging/audit_logger.py",
        31
      ],
      [
        "app/domain/exceptions/appointment_exceptions.py",
        27
      ],
      [
        "app/tests/security/scripts/run_tests.py",
        27
      ],
      [
        "app/infrastructure/ml/mentallama/mocks/mock_mentalllama_service.py",
        23
      ],
      [
        "app/config/settings.py",
        23
      ],
      [
        "app/domain/entities/temporal_events.py",
        21
      ],
      [
        "app/domain/entities/knowledge_graph.py",
        20
      ],
      [
        "app/domain/entities/biometric_rule.py",
        20
      ],
      [
        "app/infrastructure/aws/real_aws_services.py",
        19
      ],
      [
        "app/core/services/ml/mentallama/__init__.py",
        19
      ],
      [
        "app/domain/exceptions/persistence_exceptions.py",
        18
      ],
      [
        "app/domain/events/medication_events.py",
        18
      ],
      [
        "app/infrastructure/messaging/secure_messaging_service.py",
        18
      ],
      [
        "app/infrastructure/persistence/repositories/user_repository.py",
        18
      ],
      [
        "app/domain/services/mocks/mock_pat_service.py",
        16
      ],
      [
        "app/infrastructure/services/mocks/mock_pat_service.py",
        14
      ],
      [
        "app/core/services/ml/xgboost/interface.py",
        14
      ],
      [
        "app/infrastructure/security/phi/sanitizer.py",
        14
      ],
      [
        "app/domain/services/clinical_rule_engine.py",
        14
      ],
      [
        "app/infrastructure/ml/digital_twin_integration_service.py",
        13
      ],
      [
        "app/core/services/ml/xgboost/aws_xgboost_patch.py",
        12
      ],
      [
        "app/domain/entities/biometric_alert_rule.py",
        12
      ],
      [
        "app/infrastructure/services/security/jwt_token_service.py",
        12
      ],
      [
        "app/infrastructure/security/password/password_handler.py",
        11
      ],
      [
        "app/core/exceptions/ml_exceptions.py",
        10
      ],
      [
        "app/infrastructure/ml_services/digital_twin_integration/service.py",
        10
      ],
      [
        "app/domain/entities/provider.py",
        9
      ],
      [
        "app/infrastructure/security/audit_logger.py",
        9
      ],
      [
        "app/core/services/ml/digital_twin/digital_twin.py",
        8
      ],
      [
        "app/domain/events/appointment_events.py",
        8
      ],
      [
        "app/domain/events/clinical_documentation_events.py",
        8
      ],
      [
        "app/infrastructure/security/auth/mfa_service.py",
        7
      ],
      [
        "app/core/services/ml/xgboost/__init__.py",
        7
      ],
      [
        "scripts/test/security/run_hipaa_phi_audit.py",
        6
      ],
      [
        "app/tests/utils/query_param_helper.py",
        6
      ],
      [
        "app/domain/entities/model_adapter.py",
        6
      ],
      [
        "app/domain/entities/clinical_session.py",
        6
      ],
      [
        "app/tests/application/presentation/models/biometric_data.py",
        6
      ],
      [
        "app/core/config/settings.py",
        6
      ],
      [
        "app/domain/services/biometric_alert_notification_service.py",
        6
      ],
      [
        "app/infrastructure/security/password/hashing.py",
        5
      ],
      [
        "app/infrastructure/aws/in_memory_aws_services.py",
        5
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/mocks.py",
        5
      ],
      [
        "app/application/services/biometric_alert_rule_service.py",
        5
      ],
      [
        "app/infrastructure/security/phi/code_analyzer.py",
        5
      ],
      [
        "app/infrastructure/services/mock_digital_twin_core_service.py",
        4
      ],
      [
        "app/infrastructure/repositories/mock_digital_twin_repository.py",
        4
      ],
      [
        "app/core/utils/aws.py",
        4
      ],
      [
        "app/core/exceptions/__init__.py",
        4
      ],
      [
        "app/infrastructure/ml/mentallama/mock.py",
        4
      ],
      [
        "app/application/services/alert_rule_template_service.py",
        4
      ],
      [
        "app/domain/services/biometric_alert_audit_service.py",
        4
      ],
      [
        "app/infrastructure/persistence/repositories/token_blacklist_repository.py",
        4
      ],
      [
        "app/core/interfaces/services/jwt_service.py",
        4
      ],
      [
        "app/tests/unit/presentation/api/v1/endpoints/test_biometric_alerts_endpoint.py",
        4
      ],
      [
        "app/infrastructure/ml/mentallama/models.py",
        3
      ],
      [
        "app/infrastructure/security/rbac/role_based_access_control.py",
        3
      ],
      [
        "app/core/interfaces/security/jwt_service_interface.py",
        3
      ],
      [
        "app/domain/entities/appointment.py",
        3
      ],
      [
        "app/core/interfaces/services/ml/pat_interface.py",
        3
      ],
      [
        "app/infrastructure/ml/utils/validation.py",
        3
      ],
      [
        "app/infrastructure/ml/base/base_model.py",
        3
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/biometric_alert_rules.py",
        3
      ],
      [
        "app/tests/helpers/patch_imports.py",
        2
      ],
      [
        "app/tests/application/presentation/api/schemas/analytics/__init__.py",
        2
      ],
      [
        "app/infrastructure/security/auth/mfa_service_patch.py",
        2
      ],
      [
        "app/domain/value_objects/diagnosis_code.py",
        2
      ],
      [
        "app/domain/value_objects/address.py",
        2
      ],
      [
        "app/domain/utils/text_utils.py",
        2
      ],
      [
        "app/core/interfaces/services/redis_service_interface.py",
        2
      ],
      [
        "app/core/interfaces/security/password_handler_interface.py",
        2
      ],
      [
        "app/tests/unit/mocks/__init__.py",
        2
      ],
      [
        "app/domain/value_objects/emergency_contact.py",
        2
      ],
      [
        "app/domain/entities/digital_twin_entity.py",
        2
      ],
      [
        "app/core/security/rate_limiting/limiter.py",
        2
      ],
      [
        "app/infrastructure/aws/in_memory_boto3.py",
        2
      ],
      [
        "app/domain/services/biometric_integration_service.py",
        2
      ],
      [
        "app/tests/infrastructure/aws/test_aws_fixtures.py",
        2
      ],
      [
        "app/domain/entities/digital_twin/neurotransmitter_model.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_rule_repository.py",
        2
      ],
      [
        "app/tests/application/presentation/api/schemas/xgboost.py",
        2
      ],
      [
        "app/presentation/api/schemas/digital_twin.py",
        2
      ],
      [
        "app/core/interfaces/services/authentication_service.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_twin_repository.py",
        2
      ],
      [
        "app/infrastructure/persistence/repositories/mock_audit_log_repository.py",
        2
      ],
      [
        "app/core/database_settings.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_alert_repository.py",
        2
      ],
      [
        "app/domain/repositories/biometric_alert_rule_repository.py",
        2
      ],
      [
        "app/infrastructure/ml/pat/repository.py",
        2
      ],
      [
        "app/core/services/ml/xgboost/factory.py",
        2
      ],
      [
        "app/tests/utils/jwt_helpers.py",
        2
      ],
      [
        "app/infrastructure/security/jwt/__init__.py",
        2
      ],
      [
        "app/infrastructure/logging/audit.py",
        2
      ],
      [
        "app/infrastructure/ml/symptom_forecasting/xgboost_model.py",
        2
      ],
      [
        "app/tests/application/presentation/api/dependencies/database.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/dependencies/__init__.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/biometric_alerts.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/clinical_analysis.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/mentallama.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/xgboost.py",
        2
      ],
      [
        "app/tests/core/security/base_security_test_utils.py",
        2
      ],
      [
        "app/tests/utils/quantum_db_fix.py",
        2
      ],
      [
        "app/domain/ml/exceptions.py",
        1
      ],
      [
        "app/tests/unit/services/ml/conftest.py",
        1
      ],
      [
        "app/infrastructure/services/mock_xgboost_service.py",
        1
      ],
      [
        "app/infrastructure/services/mock_pat_service.py",
        1
      ],
      [
        "app/infrastructure/security/rate_limiting/in_memory_limiter.py",
        1
      ],
      [
        "app/core/exceptions/data_privacy.py",
        1
      ],
      [
        "app/tests/mocks/patient_mock.py",
        1
      ],
      [
        "app/infrastructure/repositories/mock_patient_repository.py",
        1
      ],
      [
        "app/infrastructure/integrations/aws/sagemaker.py",
        1
      ],
      [
        "app/domain/events/patient_events.py",
        1
      ],
      [
        "app/domain/entities/biometric_twin_enhanced.py",
        1
      ],
      [
        "app/core/utils/date_utils.py",
        1
      ],
      [
        "app/tests/security/dashboard/dashboard.py",
        1
      ],
      [
        "app/core/services/analytics_service.py",
        1
      ],
      [
        "app/domain/utils/datetime_utils.py",
        1
      ],
      [
        "app/domain/services/standalone_clinical_rule_engine.py",
        1
      ],
      [
        "app/domain/entities/symptom_assessment.py",
        1
      ],
      [
        "app/tests/application/presentation/models/digital_twin.py",
        1
      ],
      [
        "app/presentation/api/schemas/patient.py",
        1
      ],
      [
        "app/infrastructure/repositories/memory/biometric_alert_template_repository.py",
        1
      ],
      [
        "app/infrastructure/ml/pat/models.py",
        1
      ],
      [
        "app/domain/entities/biometric_twin.py",
        1
      ],
      [
        "app/core/domain/entities/patient.py",
        1
      ],
      [
        "app/presentation/api/schemas/xgboost.py",
        1
      ],
      [
        "app/infrastructure/security/role/role_validator.py",
        1
      ],
      [
        "app/infrastructure/factories/mock_digital_twin_factory.py",
        1
      ],
      [
        "app/presentation/api/schemas/biometric.py",
        1
      ],
      [
        "app/infrastructure/security/audit/audit.py",
        1
      ],
      [
        "app/infrastructure/security/token/in_memory_token_blacklist_repository.py",
        1
      ],
      [
        "app/core/services/ml/providers/bedrock_pat.py",
        1
      ],
      [
        "app/core/services/ml/providers/mock_pat.py",
        1
      ],
      [
        "app/core/services/ml/providers/text_generation.py",
        1
      ],
      [
        "app/domain/entities/neurotransmitter_effect.py",
        1
      ],
      [
        "app/infrastructure/ml/mentallama/model_loader.py",
        1
      ],
      [
        "app/infrastructure/ml/pat/api.py",
        1
      ],
      [
        "app/infrastructure/ml/symptom_forecasting/service.py",
        1
      ],
      [
        "app/presentation/api/dependencies/repository.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/actigraphy.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/appointments.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/clinical_sessions.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/digital_twins.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/symptom_assessments.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/temporal_neurotransmitter.py",
        1
      ],
      [
        "app/tests/application/presentation/api/routes.py",
        1
      ],
      [
        "app/tests/mocks/mock_auth_dependencies.py",
        1
      ],
      [
        "app/tests/security/auth/test_auth_hipaa_compliance.py",
        1
      ]
    ],
    "common_patterns": {
      "missing_attribute": 232,
      "incompatible_type": 81
    }
  }
}