{
  "timestamp": "2025-05-20T16:59:59.846614",
  "mypy_issues": {
    "app/tests/helpers/patch_imports.py": [
      {
        "line": 36,
        "type": "error",
        "message": "Module has no attribute \"__import__\"  [attr-defined]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Module has no attribute \"__import__\"  [attr-defined]"
      }
    ],
    "app/tests/application/presentation/api/schemas/analytics/__init__.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.requests\"  [import-not-found]"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.responses\"  [import-not-found]"
      }
    ],
    "app/infrastructure/security/password/hashing.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Library stubs not installed for \"passlib.context\"  [import-untyped]"
      },
      {
        "line": 9,
        "type": "note",
        "message": "Hint: \"python3 -m pip install types-passlib\""
      },
      {
        "line": 9,
        "type": "note",
        "message": "(or run \"mypy --install-types\" to install all missing stub packages)"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      }
    ],
    "app/infrastructure/security/auth/mfa_service_patch.py": [
      {
        "line": 6,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 6,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      }
    ],
    "app/infrastructure/ml/mentallama/models.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, float]\"  [no-any-return]"
      }
    ],
    "app/domain/value_objects/diagnosis_code.py": [
      {
        "line": 78,
        "type": "error",
        "message": "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]"
      }
    ],
    "app/domain/value_objects/address.py": [
      {
        "line": 86,
        "type": "error",
        "message": "Function \"app.domain.value_objects.address.Address.dict\" is not valid as a type  [valid-type]"
      },
      {
        "line": 86,
        "type": "note",
        "message": "Perhaps you need \"Callable[...]\" or a callback protocol?"
      }
    ],
    "app/domain/utils/text_utils.py": [
      {
        "line": 65,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/domain/ml/exceptions.py": [
      {
        "line": 157,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]"
      }
    ],
    "app/core/interfaces/services/redis_service_interface.py": [
      {
        "line": 62,
        "type": "error",
        "message": "Function \"builtins.any\" is not valid as a type  [valid-type]"
      },
      {
        "line": 62,
        "type": "note",
        "message": "Perhaps you meant \"typing.Any\" instead of \"any\"?"
      }
    ],
    "app/core/exceptions/base_exceptions.py": [
      {
        "line": 294,
        "type": "error",
        "message": "Name \"InitializationError\" already defined on line 133  [no-redef]"
      },
      {
        "line": 21,
        "type": "note",
        "message": "\"__init__\" of \"BaseException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 148,
        "type": "note",
        "message": "\"ConfigurationError\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 160,
        "type": "note",
        "message": "\"ExternalServiceException\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      },
      {
        "line": 69,
        "type": "note",
        "message": "\"ResourceNotFoundError\" defined here"
      }
    ],
    "app/tests/utils/async_test_helpers.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_with\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_once_with\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_called\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_once\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_not_called\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_once\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_with\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]"
      },
      {
        "line": 84,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_once_with\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"assert_any_call\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]"
      }
    ],
    "app/tests/unit/services/ml/conftest.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"type[MockYamlModule]\", target has type Module)  [assignment]"
      }
    ],
    "app/tests/unit/mocks/__init__.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Module has no attribute \"safe_load\"  [attr-defined]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Module has no attribute \"dump\"  [attr-defined]"
      }
    ],
    "app/infrastructure/services/mock_xgboost_service.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"_predictions\" (hint: \"_predictions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/services/mock_pat_service.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/services/mock_digital_twin_core_service.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Cannot determine type of \"state\"  [has-type]"
      },
      {
        "line": 307,
        "type": "error",
        "message": "Cannot determine type of \"new_state\"  [has-type]"
      }
    ],
    "app/infrastructure/security/rbac/role_based_access_control.py": [
      {
        "line": 87,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Argument 1 to \"get\" of \"dict\" has incompatible type \"Role | str\"; expected \"Role\"  [arg-type]"
      }
    ],
    "app/infrastructure/security/rate_limiting/in_memory_limiter.py": [
      {
        "line": 77,
        "type": "error",
        "message": "Incompatible return value type (got \"tuple[int | float, int]\", expected \"tuple[int, int]\")  [return-value]"
      }
    ],
    "app/infrastructure/aws/real_aws_services.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, list[dict[str, Any]]]\"  [no-any-return]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 135,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 154,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      }
    ],
    "app/domain/value_objects/emergency_contact.py": [
      {
        "line": 75,
        "type": "error",
        "message": "Function \"app.domain.value_objects.emergency_contact.EmergencyContact.dict\" is not valid as a type  [valid-type]"
      },
      {
        "line": 75,
        "type": "note",
        "message": "Perhaps you need \"Callable[...]\" or a callback protocol?"
      }
    ],
    "app/domain/exceptions/security_exceptions.py": [
      {
        "line": 28,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 28,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible default for argument \"resource_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 29,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Incompatible default for argument \"action\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 30,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 48,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 48,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 48,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Incompatible default for argument \"permission\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 49,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 49,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible default for argument \"resource\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 50,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 50,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 77,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 77,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 77,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Incompatible default for argument \"until\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 78,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 78,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 97,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 97,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 98,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 98,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 117,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 117,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 117,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Incompatible default for argument \"attempts\" (default has type \"None\", argument has type \"int\")  [assignment]"
      },
      {
        "line": 118,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 118,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/exceptions/persistence_exceptions.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Incompatible default for argument \"original_exception\" (default has type \"None\", argument has type \"Exception\")  [assignment]"
      },
      {
        "line": 16,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 16,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible default for argument \"entity_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 29,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Incompatible default for argument \"entity_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 30,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Incompatible default for argument \"message\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 31,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible default for argument \"repository\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 53,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 53,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Incompatible default for argument \"operation\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 54,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 54,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/domain/exceptions/appointment_exceptions.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Incompatible default for argument \"current_state\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 24,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 24,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Incompatible default for argument \"required_state\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 25,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 25,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 26,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 26,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 26,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible default for argument \"conflicting_appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 53,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 53,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 69,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 69,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 85,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 85,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 86,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 86,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 105,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 105,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 106,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 106,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/services/ml/pat/fixed_validation.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 11,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 14,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 14,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 38,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Name \"List\" is not defined  [name-defined]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Name \"Optional\" is not defined  [name-defined]"
      },
      {
        "line": 99,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Name \"Optional\" is not defined  [name-defined]"
      },
      {
        "line": 100,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 100,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 100,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Name \"Dict\" is not defined  [name-defined]"
      },
      {
        "line": 101,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Name \"Any\" is not defined  [name-defined]"
      },
      {
        "line": 101,
        "type": "note",
        "message": "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "Name \"ResourceNotFoundError\" is not defined  [name-defined]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Name \"ValidationError\" is not defined  [name-defined]"
      },
      {
        "line": 156,
        "type": "error",
        "message": "Name \"ResourceNotFoundError\" is not defined  [name-defined]"
      }
    ],
    "app/core/interfaces/services/audit_logger_interface.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 29,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/exceptions/ml_exceptions.py": [
      {
        "line": 149,
        "type": "error",
        "message": "Incompatible default for argument \"parameter\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 149,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 149,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Incompatible default for argument \"model_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 171,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 171,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Incompatible default for argument \"service_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 190,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 190,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]"
      }
    ],
    "app/core/exceptions/data_privacy.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"__init__\" of \"BaseException\"; did you mean \"detail\"?  [call-arg]"
      }
    ],
    "scripts/test/security/run_hipaa_phi_audit.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Need type annotation for \"phi_detected\" (hint: \"phi_detected: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Need type annotation for \"findings\"  [var-annotated]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Need type annotation for \"files_examined\" (hint: \"files_examined: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Need type annotation for \"generated_files\" (hint: \"generated_files: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 416,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"None\")  [assignment]"
      }
    ],
    "app/tests/security/scripts/run_tests_direct.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 24,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 24,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 104,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 144,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"int\")  [operator]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Unsupported left operand type for + (\"object\")  [operator]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 201,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 203,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 206,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"items\"  [attr-defined]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]"
      },
      {
        "line": 249,
        "type": "note",
        "message": "Left operand is of type \"Collection[str] | int\""
      },
      {
        "line": 252,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]"
      },
      {
        "line": 252,
        "type": "note",
        "message": "Left operand is of type \"Collection[str] | int\""
      },
      {
        "line": 289,
        "type": "error",
        "message": "Argument 1 to \"fromisoformat\" of \"date\" has incompatible type \"Collection[str]\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 306,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 307,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"items\"  [attr-defined]"
      }
    ],
    "app/tests/security/scripts/run_tests.py": [
      {
        "line": 33,
        "type": "error",
        "message": "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 33,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 33,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 243,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 245,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 267,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 279,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 281,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 293,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"dashboard.dashboard\"  [import-not-found]"
      }
    ],
    "app/tests/mocks/patient_mock.py": [
      {
        "line": 299,
        "type": "error",
        "message": "Item \"None\" of \"date | str | None\" has no attribute \"isoformat\"  [union-attr]"
      }
    ],
    "app/infrastructure/repositories/mock_patient_repository.py": [
      {
        "line": 119,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      }
    ],
    "app/infrastructure/repositories/mock_digital_twin_repository.py": [
      {
        "line": 131,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      },
      {
        "line": 243,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      },
      {
        "line": 270,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 292,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]"
      }
    ],
    "app/infrastructure/integrations/aws/sagemaker.py": [
      {
        "line": 192,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/events/patient_events.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.events.base_event\"  [import-not-found]"
      }
    ],
    "app/domain/entities/knowledge_graph.py": [
      {
        "line": 80,
        "type": "error",
        "message": "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 80,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 80,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 81,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 81,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 120,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 120,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 121,
        "type": "error",
        "message": "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 121,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 121,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible default for argument \"temporal_constraints\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 123,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 123,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 174,
        "type": "error",
        "message": "Need type annotation for \"neighbors\" (hint: \"neighbors: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "Need type annotation for \"adjacency\" (hint: \"adjacency: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "Need type annotation for \"chains\" (hint: \"chains: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 375,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"float\")  [assignment]"
      },
      {
        "line": 470,
        "type": "error",
        "message": "Need type annotation for \"configs\"  [var-annotated]"
      }
    ],
    "app/domain/entities/digital_twin_entity.py": [
      {
        "line": 88,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"ClinicalSignificance\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_twin_enhanced.py": [
      {
        "line": 466,
        "type": "error",
        "message": "Value expression in dictionary comprehension has incompatible type \"BiometricDataPoint | None\"; expected type \"BiometricDataPoint\"  [misc]"
      }
    ],
    "app/core/utils/date_utils.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/core/utils/aws.py": [
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 144,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/core/security/rate_limiting/limiter.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Need type annotation for \"client_requests\" (hint: \"client_requests: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/core/interfaces/security/jwt_service_interface.py": [
      {
        "line": 34,
        "type": "error",
        "message": "Incompatible default for argument \"roles\" (default has type \"None\", argument has type \"list[str]\")  [assignment]"
      },
      {
        "line": 34,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 34,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/exceptions/__init__.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Incompatible import of \"AuthorizationError\" (imported name has type \"type[app.core.exceptions.base_exceptions.AuthorizationError]\", local name has type \"type[app.core.exceptions.auth_exceptions.AuthorizationError]\")  [assignment]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Incompatible import of \"SecurityException\" (imported name has type \"type[app.core.exceptions.base_exceptions.SecurityException]\", local name has type \"type[app.core.errors.security_exceptions.SecurityException]\")  [assignment]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Incompatible import of \"InvalidTokenError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.InvalidTokenError]\", local name has type \"type[app.core.exceptions.auth_exceptions.InvalidTokenError]\")  [assignment]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Incompatible import of \"TokenExpiredError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.TokenExpiredError]\", local name has type \"type[app.core.exceptions.auth_exceptions.TokenExpiredError]\")  [assignment]"
      }
    ],
    "app/tests/utils/query_param_helper.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Returning Any from function declared to return \"T\"  [no-any-return]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Returning Any from function declared to return \"T\"  [no-any-return]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"T\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Incompatible return value type (got \"Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T]]\", expected \"Callable[..., T]\")  [return-value]"
      }
    ],
    "app/tests/security/dashboard/dashboard.py": [
      {
        "line": 521,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/utils/datetime_utils.py": [
      {
        "line": 142,
        "type": "error",
        "message": "Argument 1 to \"format_iso\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]"
      }
    ],
    "app/domain/entities/provider.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Incompatible default for argument \"first_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 48,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 48,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Incompatible default for argument \"last_name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 49,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 49,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible default for argument \"provider_type\" (default has type \"None\", argument has type \"ProviderType | str\")  [assignment]"
      },
      {
        "line": 50,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 50,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      },
      {
        "line": 45,
        "type": "note",
        "message": "\"Provider\" defined here"
      }
    ],
    "app/domain/entities/model_adapter.py": [
      {
        "line": 160,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Neurotransmitter\", variable has type \"BrainRegion\")  [assignment]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      },
      {
        "line": 206,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, BrainRegionStateAdapter]\", variable has type \"dict[Neurotransmitter, NeurotransmitterStateAdapter]\")  [assignment]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]"
      }
    ],
    "app/domain/entities/appointment.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 18,
        "type": "error",
        "message": "Module has no attribute \"time\"  [attr-defined]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "Argument 1 to \"_ensure_datetime\" has incompatible type \"datetime | Any | None\"; expected \"datetime | str\"  [arg-type]"
      }
    ],
    "app/core/services/analytics_service.py": [
      {
        "line": 278,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/xgboost/aws_xgboost_patch.py": [
      {
        "line": 124,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 199,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 233,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 243,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 264,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 269,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      }
    ],
    "app/core/services/ml/xgboost/aws.py": [
      {
        "line": 93,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"predict\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Signature of \"is_initialized\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 167,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 167,
        "type": "note",
        "message": "def is_initialized(self) -> bool"
      },
      {
        "line": 167,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 167,
        "type": "note",
        "message": "bool"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[dict[str, Any]]]\" of \"get_available_models\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 173,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"get_model_info\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 208,
        "type": "error",
        "message": "Attribute \"_observers\" already defined on line 162  [no-redef]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 289,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 486,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      },
      {
        "line": 539,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      },
      {
        "line": 836,
        "type": "error",
        "message": "Name \"integrate_with_digital_twin\" already defined on line 180  [no-redef]"
      },
      {
        "line": 928,
        "type": "error",
        "message": "Name \"get_model_info\" already defined on line 173  [no-redef]"
      },
      {
        "line": 1177,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 1199,
        "type": "error",
        "message": "Name \"ServiceConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 2233,
        "type": "error",
        "message": "Name \"EventType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 2247,
        "type": "error",
        "message": "Name \"Observer\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 464,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 467,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]"
      },
      {
        "line": 493,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 496,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 625,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 654,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 654,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 654,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 725,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 823,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 823,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 829,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 829,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 829,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 887,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 915,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 915,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 921,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 921,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 921,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1060,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 1172,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 1191,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1196,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 1210,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 1299,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 1426,
        "type": "error",
        "message": "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1426,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1426,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1757,
        "type": "error",
        "message": "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 2016,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2121,
        "type": "error",
        "message": "\"None\" has no attribute \"update_item\"  [attr-defined]"
      },
      {
        "line": 2130,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2130,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 2149,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 2163,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 2166,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 258,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 272,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 297,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INITIALIZATION\"  [attr-defined]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 329,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ConfigurationError\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 438,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 452,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 464,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 467,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]"
      },
      {
        "line": 493,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 496,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 559,
        "type": "error",
        "message": "\"None\" has no attribute \"put_item\"  [attr-defined]"
      },
      {
        "line": 564,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 949,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 953,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 955,
        "type": "error",
        "message": "\"None\" has no attribute \"describe_model\"  [attr-defined]"
      },
      {
        "line": 1026,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1026,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1026,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1060,
        "type": "error",
        "message": "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]"
      },
      {
        "line": 1062,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1063,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1065,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1069,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1073,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1089,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1101,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1101,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1101,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1111,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1111,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1111,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1172,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 1191,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1196,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 1196,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1210,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 1241,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1246,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1247,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1250,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1252,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 1299,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 1308,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1328,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 1378,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1378,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1378,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1414,
        "type": "error",
        "message": "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1414,
        "type": "error",
        "message": "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]"
      },
      {
        "line": 1414,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]"
      },
      {
        "line": 1254,
        "type": "error",
        "message": "Missing return statement  [return]"
      },
      {
        "line": 1426,
        "type": "error",
        "message": "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1426,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1426,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1687,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1757,
        "type": "error",
        "message": "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1778,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1778,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 1802,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1802,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]"
      },
      {
        "line": 1852,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1852,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"MAXIMUM\"  [attr-defined]"
      },
      {
        "line": 1853,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1853,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]"
      },
      {
        "line": 1864,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1864,
        "type": "error",
        "message": "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]"
      },
      {
        "line": 2016,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2036,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 2059,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 2066,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2066,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]"
      },
      {
        "line": 2149,
        "type": "error",
        "message": "\"None\" has no attribute \"scan\"  [attr-defined]"
      },
      {
        "line": 2163,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 2166,
        "type": "error",
        "message": "\"None\" has no attribute \"head_bucket\"  [attr-defined]"
      },
      {
        "line": 2166,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 2176,
        "type": "error",
        "message": "\"None\" has no attribute \"list_endpoints\"  [attr-defined]"
      },
      {
        "line": 2182,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 2183,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      }
    ],
    "app/core/services/ml/mentallama/__init__.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Need type annotation for \"_models\" (hint: \"_models: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"_digital_twin_sessions\" (hint: \"_digital_twin_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 1019,
        "type": "error",
        "message": "Argument \"key\" to \"sorted\" has incompatible type \"Callable[[tuple[str, dict[str, object]]], object]\"; expected \"Callable[[tuple[str, dict[str, object]]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 1019,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 1025,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 1190,
        "type": "error",
        "message": "Need type annotation for \"session\"  [var-annotated]"
      },
      {
        "line": 1590,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 1967,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1968,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1979,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1980,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1983,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1984,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1987,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1988,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1991,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1994,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1995,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      }
    ],
    "app/core/services/ml/digital_twin/digital_twin.py": [
      {
        "line": 42,
        "type": "error",
        "message": "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Need type annotation for \"session\"  [var-annotated]"
      },
      {
        "line": 342,
        "type": "error",
        "message": "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]"
      },
      {
        "line": 342,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 342,
        "type": "note",
        "message": "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]"
      },
      {
        "line": 342,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 342,
        "type": "note",
        "message": "def get_insights(self, session_id: str, insight_type: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 542,
        "type": "error",
        "message": "Need type annotation for \"sender_counts\" (hint: \"sender_counts: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/tests/unit/infrastructure/ml/symptom_forecasting/mock_modules.py": [
      {
        "line": 84,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MockOptuna\", target has type Module)  [assignment]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"type\", target has type Module)  [assignment]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MockXGB\", target has type Module)  [assignment]"
      }
    ],
    "app/infrastructure/ml/pharmacogenomics/treatment_model.py": [
      {
        "line": 102,
        "type": "error",
        "message": "Need type annotation for \"models\" (hint: \"models: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Need type annotation for \"patient_data\" (hint: \"patient_data: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 286,
        "type": "error",
        "message": "Need type annotation for \"medication_data\"  [var-annotated]"
      },
      {
        "line": 721,
        "type": "error",
        "message": "Need type annotation for \"gene\"  [var-annotated]"
      },
      {
        "line": 721,
        "type": "error",
        "message": "Argument 1 to \"enumerate\" has incompatible type \"object\"; expected \"Iterable[<nothing>]\"  [arg-type]"
      },
      {
        "line": 724,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 724,
        "type": "error",
        "message": "Argument 1 to \"len\" has incompatible type \"object\"; expected \"Sized\"  [arg-type]"
      },
      {
        "line": 728,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"float\")  [operator]"
      },
      {
        "line": 736,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"float\")  [operator]"
      },
      {
        "line": 748,
        "type": "error",
        "message": "Unsupported operand types for + (\"object\" and \"float\")  [operator]"
      },
      {
        "line": 751,
        "type": "error",
        "message": "No overload variant of \"min\" matches argument types \"float\", \"object\"  [call-overload]"
      },
      {
        "line": 751,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [SupportsRichComparisonT] min(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [_T] min(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [SupportsRichComparisonT] min(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [_T] min(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [SupportsRichComparisonT, _T] min(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T"
      },
      {
        "line": 751,
        "type": "note",
        "message": "def [_T1, _T2] min(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2"
      },
      {
        "line": 758,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 760,
        "type": "error",
        "message": "\"object\" has no attribute \"__iter__\"; maybe \"__dir__\" or \"__str__\"? (not iterable)  [attr-defined]"
      },
      {
        "line": 766,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 766,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      }
    ],
    "app/infrastructure/ml/biometric_correlation/lstm_model.py": [
      {
        "line": 36,
        "type": "error",
        "message": "Name \"LSTM\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Name \"Dense\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Name \"Dropout\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Name \"Sequential\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 111,
        "type": "error",
        "message": "\"None\" has no attribute \"add\"  [attr-defined]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "\"None\" has no attribute \"add\"  [attr-defined]"
      },
      {
        "line": 119,
        "type": "error",
        "message": "\"None\" has no attribute \"add\"  [attr-defined]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "\"None\" has no attribute \"add\"  [attr-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "\"None\" has no attribute \"compile\"  [attr-defined]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Need type annotation for \"anomalies_by_time\" (hint: \"anomalies_by_time: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ndarray[Any, dtype[Any]]\", variable has type \"list[Any]\")  [assignment]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ndarray[Any, dtype[Any]]\", variable has type \"list[Any]\")  [assignment]"
      }
    ],
    "app/infrastructure/ml/base/model_metrics.py": [
      {
        "line": 70,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", target has type \"float\")  [assignment]"
      },
      {
        "line": 208,
        "type": "error",
        "message": "Need type annotation for \"feature_metrics\" (hint: \"feature_metrics: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/aws/in_memory_boto3.py": [
      {
        "line": 123,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Invalid \"type: ignore\" comment  [syntax]"
      }
    ],
    "app/infrastructure/aws/in_memory_aws_services.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Signature of \"put_item\" incompatible with supertype \"DynamoDBServiceInterface\"  [override]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 41,
        "type": "note",
        "message": "def put_item(self, table_name: str, item: dict[str, Any]) -> dict[str, Any]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 41,
        "type": "note",
        "message": "def put_item(self, *, TableName: str, Item: dict[str, Any]) -> dict[str, Any]"
      }
    ],
    "app/domain/services/standalone_clinical_rule_engine.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.entities.digital_twin.biometric_rule\"  [import-not-found]"
      }
    ],
    "app/domain/services/enhanced_xgboost_service.py": [
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Name \"personalized_response\" is not defined  [name-defined]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Name \"result\" is not defined  [name-defined]"
      },
      {
        "line": 330,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]"
      },
      {
        "line": 334,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]"
      },
      {
        "line": 364,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 367,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 388,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 391,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]"
      },
      {
        "line": 472,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 533,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]"
      },
      {
        "line": 537,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]"
      },
      {
        "line": 620,
        "type": "error",
        "message": "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]"
      },
      {
        "line": 620,
        "type": "error",
        "message": "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 620,
        "type": "error",
        "message": "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]"
      },
      {
        "line": 633,
        "type": "error",
        "message": "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 640,
        "type": "error",
        "message": "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"dict[<nothing>, <nothing>]\"  [call-overload]"
      },
      {
        "line": 640,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 640,
        "type": "note",
        "message": "def get(self, Neurotransmitter, /) -> dict[BrainRegion, float] | None"
      },
      {
        "line": 640,
        "type": "note",
        "message": "def get(self, Neurotransmitter, dict[BrainRegion, float], /) -> dict[BrainRegion, float]"
      },
      {
        "line": 640,
        "type": "note",
        "message": "def [_T] get(self, Neurotransmitter, _T, /) -> dict[BrainRegion, float] | _T"
      },
      {
        "line": 689,
        "type": "error",
        "message": "\"EnhancedXGBoostService\" has no attribute \"treatment_response_models\"  [attr-defined]"
      },
      {
        "line": 711,
        "type": "error",
        "message": "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]"
      },
      {
        "line": 711,
        "type": "error",
        "message": "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 711,
        "type": "error",
        "message": "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]"
      },
      {
        "line": 717,
        "type": "error",
        "message": "Argument 1 to \"_calculate_efficacy_score\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]"
      },
      {
        "line": 732,
        "type": "error",
        "message": "Argument 1 to \"_summarize_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]"
      },
      {
        "line": 738,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], dict[str, float] | dict[str, Any] | float | str]\"; expected \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 738,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, float] | dict[str, Any] | float | str\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 874,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 968,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]"
      },
      {
        "line": 971,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"simulate_treatment_cascade\"  [attr-defined]"
      },
      {
        "line": 972,
        "type": "error",
        "message": "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_temporal_response\"  [attr-defined]"
      }
    ],
    "app/domain/events/medication_events.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/events/appointment_events.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/entities/temporal_sequence.py": [
      {
        "line": 275,
        "type": "error",
        "message": "Dict entry 2 has incompatible type \"str\": \"int\"; expected \"str\": \"ndarray[Any, Any]\"  [dict-item]"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Returning Any from function declared to return \"float | None\"  [no-any-return]"
      },
      {
        "line": 346,
        "type": "error",
        "message": "Returning Any from function declared to return \"float | None\"  [no-any-return]"
      },
      {
        "line": 348,
        "type": "error",
        "message": "Returning Any from function declared to return \"float | None\"  [no-any-return]"
      },
      {
        "line": 355,
        "type": "error",
        "message": "Returning Any from function declared to return \"float | None\"  [no-any-return]"
      },
      {
        "line": 359,
        "type": "error",
        "message": "Returning Any from function declared to return \"float | None\"  [no-any-return]"
      },
      {
        "line": 438,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 497,
        "type": "error",
        "message": "Name \"TemporalSequence\" already defined on line 43  [no-redef]"
      },
      {
        "line": 505,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      },
      {
        "line": 52,
        "type": "note",
        "message": "\"TemporalSequence\" defined here"
      }
    ],
    "app/domain/entities/temporal_events.py": [
      {
        "line": 42,
        "type": "error",
        "message": "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 42,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 42,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]"
      },
      {
        "line": 43,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 43,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 47,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 47,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 123,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 123,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]"
      },
      {
        "line": 124,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 124,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 132,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 132,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Incompatible default for argument \"correlation_type\" (default has type \"None\", argument has type \"CorrelationType\")  [assignment]"
      },
      {
        "line": 179,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 179,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 40,
        "type": "note",
        "message": "\"TemporalEvent\" defined here"
      },
      {
        "line": 40,
        "type": "note",
        "message": "\"TemporalEvent\" defined here"
      },
      {
        "line": 40,
        "type": "note",
        "message": "\"TemporalEvent\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      },
      {
        "line": 260,
        "type": "note",
        "message": "\"EventChain\" defined here"
      }
    ],
    "app/domain/entities/symptom_assessment.py": [
      {
        "line": 44,
        "type": "error",
        "message": "\"__post_init__\" undefined in superclass  [misc]"
      }
    ],
    "app/domain/entities/neurotransmitter_effect.py": [
      {
        "line": 178,
        "type": "error",
        "message": "Skipping analyzing \"scipy\": module is installed, but missing library stubs or py.typed marker  [import-untyped]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"tuple[float, float] | float | str\")  [assignment]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, dict[str, str]]\", target has type \"tuple[float, float] | float | str\")  [assignment]"
      },
      {
        "line": 26,
        "type": "note",
        "message": "\"NeurotransmitterEffect\" defined here"
      }
    ],
    "app/domain/entities/clinical_session.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "\"__post_init__\" undefined in superclass  [misc]"
      }
    ],
    "app/domain/entities/biometric_rule.py": [
      {
        "line": 5,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 109,
        "type": "error",
        "message": "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]"
      },
      {
        "line": 273,
        "type": "error",
        "message": "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "No overload variant of \"field\" matches argument type \"datetime\"  [call-overload]"
      },
      {
        "line": 308,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 308,
        "type": "note",
        "message": "def [_T] field(*, default: _T, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T"
      },
      {
        "line": 308,
        "type": "note",
        "message": "def [_T] field(*, default_factory: Callable[[], _T], init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T"
      },
      {
        "line": 308,
        "type": "note",
        "message": "def field(*, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> Any"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"list[BiometricRuleCondition]\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"LogicalOperator\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"AlertPriority\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"bool\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime | None\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"int\"  [arg-type]"
      },
      {
        "line": 410,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"UUID | None\")  [assignment]"
      }
    ],
    "app/tests/infrastructure/aws/test_aws_fixtures.py": [
      {
        "line": 27,
        "type": "error",
        "message": "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]"
      }
    ],
    "app/infrastructure/services/mocks/mock_pat_service.py": [
      {
        "line": 86,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 127,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"float\")  [assignment]"
      },
      {
        "line": 135,
        "type": "error",
        "message": "Generator has incompatible item type \"str\"; expected \"bool\"  [misc]"
      },
      {
        "line": 135,
        "type": "error",
        "message": "Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"Collection[str]\")  [assignment]"
      },
      {
        "line": 396,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 399,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 402,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 403,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 406,
        "type": "error",
        "message": "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 409,
        "type": "error",
        "message": "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 742,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 766,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/infrastructure/ml_services/digital_twin_integration/service.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"BiometricCorrelationService\"; maybe \"IBiometricCorrelationService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"DigitalTwinIntegrationService\"; maybe \"IDigitalTwinIntegrationService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"PharmacogenomicsService\"; maybe \"IPharmacogenomicsService\"?  [attr-defined]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Module \"app.domain.interfaces.ml_services\" has no attribute \"SymptomForecastingService\"; maybe \"ISymptomForecastingService\"?  [attr-defined]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Unexpected keyword argument \"symptom_forecast\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Unexpected keyword argument \"biometric_analysis\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Unexpected keyword argument \"pharmacogenomic_insights\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 323,
        "type": "error",
        "message": "Argument \"id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]"
      }
    ],
    "app/infrastructure/ml/digital_twin_integration_service.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 51,
        "type": "error",
        "message": "Incompatible default for argument \"init_data\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 51,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 51,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Argument \"id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 128,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]"
      },
      {
        "line": 380,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"Sequence[str]\")  [assignment]"
      },
      {
        "line": 518,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]"
      },
      {
        "line": 542,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/ml/pharmacogenomics/model_service.py": [
      {
        "line": 228,
        "type": "error",
        "message": "Need type annotation for \"interactions_by_medication\" (hint: \"interactions_by_medication: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 269,
        "type": "error",
        "message": "Need type annotation for \"interactions_by_gene\" (hint: \"interactions_by_gene: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Need type annotation for \"interactions_by_variant\" (hint: \"interactions_by_variant: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 386,
        "type": "error",
        "message": "Need type annotation for \"all_effects\" (hint: \"all_effects: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "\"str\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 485,
        "type": "error",
        "message": "\"str\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 486,
        "type": "error",
        "message": "\"str\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 658,
        "type": "error",
        "message": "Need type annotation for \"interaction_lookup\" (hint: \"interaction_lookup: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 799,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[str, Any]\"; expected type \"str\"  [index]"
      }
    ],
    "app/infrastructure/ml/mentallama/mock.py": [
      {
        "line": 123,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 518,
        "type": "error",
        "message": "Unsupported operand types for > (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 519,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      }
    ],
    "app/infrastructure/ml/biometric_correlation/model_service.py": [
      {
        "line": 199,
        "type": "error",
        "message": "Name \"result\" already defined on line 176  [no-redef]"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Dict entry 2 has incompatible type \"str\": \"list[Any]\"; expected \"str\": \"ndarray[Any, Any]\"  [dict-item]"
      },
      {
        "line": 648,
        "type": "error",
        "message": "Argument 3 to \"_analyze_mental_health_changes\" of \"BiometricCorrelationService\" has incompatible type \"ndarray[Any, Any]\"; expected \"list[str]\"  [arg-type]"
      },
      {
        "line": 797,
        "type": "error",
        "message": "Need type annotation for \"changes_by_indicator\" (hint: \"changes_by_indicator: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/domain/services/visualization_preprocessor.py": [
      {
        "line": 89,
        "type": "error",
        "message": "Argument 1 to \"_precompute_time_series_geometry\" of \"NeurotransmitterVisualizationPreprocessor\" has incompatible type \"dict[BrainRegion, dict[Neurotransmitter, float]] | dict[BrainRegion, list[float]]\"; expected \"dict[BrainRegion, list[float]]\"  [arg-type]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Argument 1 to \"_precompute_detailed_geometry\" of \"NeurotransmitterVisualizationPreprocessor\" has incompatible type \"dict[BrainRegion, dict[Neurotransmitter, float]] | dict[BrainRegion, list[float]]\"; expected \"dict[BrainRegion, dict[Neurotransmitter, float]]\"  [arg-type]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Need type annotation for \"vertices_by_time\" (hint: \"vertices_by_time: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 104,
        "type": "error",
        "message": "Need type annotation for \"colors_by_time\" (hint: \"colors_by_time: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 287,
        "type": "error",
        "message": "\"TemporalSequence[Any]\" has no attribute \"data\"  [attr-defined]"
      },
      {
        "line": 415,
        "type": "error",
        "message": "Name \"generate_comparative_visualization\" already defined on line 321  [no-redef]"
      }
    ],
    "app/domain/services/biometric_integration_service.py": [
      {
        "line": 200,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]"
      }
    ],
    "app/domain/services/mocks/mock_pat_service.py": [
      {
        "line": 37,
        "type": "error",
        "message": "Argument 2 of \"get_assessment_questions\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 37,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 37,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Argument 2 of \"submit_assessment\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 102,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 102,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 151,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 189,
        "type": "error",
        "message": "Argument 2 of \"get_assessment_history\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str | None\"  [override]"
      },
      {
        "line": 189,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 189,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Argument 2 of \"get_trend_analysis\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 218,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Argument \"responses\" to \"submit_assessment\" of \"MockPATService\" has incompatible type \"dict[str, int]\"; expected \"dict[str, int | float | str]\"  [arg-type]"
      },
      {
        "line": 320,
        "type": "note",
        "message": "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance"
      },
      {
        "line": 320,
        "type": "note",
        "message": "Consider using \"Mapping\" instead, which is covariant in the value type"
      }
    ],
    "app/domain/events/clinical_documentation_events.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      },
      {
        "line": 83,
        "type": "error",
        "message": "Attributes without a default cannot follow attributes with one  [misc]"
      }
    ],
    "app/domain/entities/neurotransmitter_mapping.py": [
      {
        "line": 272,
        "type": "error",
        "message": "Argument 1 to \"append\" of \"list\" has incompatible type \"tuple[BrainRegion, float]\"; expected \"tuple[BrainRegion, ReceptorProfile]\"  [arg-type]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "Incompatible return value type (got \"list[tuple[BrainRegion, ReceptorProfile]]\", expected \"list[tuple[BrainRegion, float]]\")  [return-value]"
      },
      {
        "line": 281,
        "type": "error",
        "message": "Incompatible default for argument \"neurotransmitter_level\" (default has type \"None\", argument has type \"float\")  [assignment]"
      },
      {
        "line": 281,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 281,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 311,
        "type": "error",
        "message": "Unsupported operand types for * (\"float\" and \"ReceptorProfile\")  [operator]"
      },
      {
        "line": 368,
        "type": "error",
        "message": "Incompatible return value type (got \"set[Neurotransmitter]\", expected \"list[BrainRegion]\")  [return-value]"
      },
      {
        "line": 368,
        "type": "error",
        "message": "Invalid index type \"Neurotransmitter\" for \"dict[BrainRegion, set[Neurotransmitter]]\"; expected type \"BrainRegion\"  [index]"
      },
      {
        "line": 412,
        "type": "error",
        "message": "Incompatible return value type (got \"ReceptorProfile\", expected \"float\")  [return-value]"
      },
      {
        "line": 469,
        "type": "error",
        "message": "Unexpected keyword argument \"is_statistically_significant\" for \"NeurotransmitterEffect\"  [call-arg]"
      },
      {
        "line": 499,
        "type": "error",
        "message": "No overload variant of \"max\" matches argument types \"ReceptorProfile\", \"float\"  [call-overload]"
      },
      {
        "line": 499,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [SupportsRichComparisonT] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [SupportsRichComparisonT] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [SupportsRichComparisonT, _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T"
      },
      {
        "line": 499,
        "type": "note",
        "message": "def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2"
      },
      {
        "line": 503,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"ReceptorProfile\")  [assignment]"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      },
      {
        "line": 80,
        "type": "note",
        "message": "\"ReceptorProfile\" defined here"
      }
    ],
    "app/domain/entities/digital_twin/temporal_neurotransmitter_sequence.py": [
      {
        "line": 35,
        "type": "error",
        "message": "Incompatible default for argument \"sequence_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 35,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 35,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Incompatible default for argument \"name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 36,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 36,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 37,
        "type": "error",
        "message": "Incompatible default for argument \"metadata\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 37,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 37,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Invalid index type \"int | None\" for \"list[Any]\"; expected type \"SupportsIndex\"  [index]"
      },
      {
        "line": 156,
        "type": "error",
        "message": "Incompatible default for argument \"brain_region\" (default has type \"None\", argument has type \"BrainRegion\")  [assignment]"
      },
      {
        "line": 156,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 156,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 200,
        "type": "error",
        "message": "Incompatible default for argument \"neurotransmitter\" (default has type \"None\", argument has type \"Neurotransmitter\")  [assignment]"
      },
      {
        "line": 200,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 200,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 350,
        "type": "error",
        "message": "Returning Any from function declared to return \"float\"  [no-any-return]"
      }
    ],
    "app/domain/entities/digital_twin/neurotransmitter_model.py": [
      {
        "line": 50,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      },
      {
        "line": 251,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      }
    ],
    "app/core/interfaces/repositories/biometric_rule_repository.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricRule]\")  [assignment]"
      }
    ],
    "app/infrastructure/repositories/memory/biometric_alert_template_repository.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/mentallama/mocks/mock_mentalllama_service.py": [
      {
        "line": 55,
        "type": "error",
        "message": "Signature of \"assess_risk\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 55,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 55,
        "type": "note",
        "message": "def assess_risk(self, text: str, risk_type: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 55,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 55,
        "type": "note",
        "message": "def assess_risk(self, text: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 57,
        "type": "error",
        "message": "Argument 2 to \"assess_risk\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Signature of \"generate_digital_twin\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 59,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 59,
        "type": "note",
        "message": "def generate_digital_twin(self, text_data: list[str] | None = ..., demographic_data: dict[str, Any] | None = ..., medical_history: dict[str, Any] | None = ..., treatment_history: dict[str, Any] | None = ..., options: dict[str, Any] | None = ..., patient_id: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 59,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 59,
        "type": "note",
        "message": "def generate_digital_twin(self, user_profile: dict[str, Any], clinical_data: dict[str, Any] | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Argument 1 to \"generate_digital_twin\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any]\"; expected \"list[str] | None\"  [arg-type]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Signature of \"create_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 68,
        "type": "note",
        "message": "def create_digital_twin_session(self, twin_id: str, session_type: str = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 68,
        "type": "note",
        "message": "def create_digital_twin_session(self, digital_twin_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Argument 2 to \"create_digital_twin_session\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 84,
        "type": "error",
        "message": "Signature of \"end_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]"
      },
      {
        "line": 84,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 84,
        "type": "note",
        "message": "def end_digital_twin_session(self, session_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 84,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 84,
        "type": "note",
        "message": "def end_digital_twin_session(self, session_id: str) -> dict[str, Any]"
      }
    ],
    "app/domain/entities/temporal_neurotransmitter_mapping.py": [
      {
        "line": 111,
        "type": "error",
        "message": "Invalid index type \"Neurotransmitter\" for \"dict[BrainRegion, set[Neurotransmitter]]\"; expected type \"BrainRegion\"  [index]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Incompatible default for argument \"initial_level\" (default has type \"None\", argument has type \"float\")  [assignment]"
      },
      {
        "line": 276,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 276,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 277,
        "type": "error",
        "message": "Incompatible default for argument \"time_steps\" (default has type \"None\", argument has type \"int\")  [assignment]"
      },
      {
        "line": 277,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 277,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 555,
        "type": "error",
        "message": "Incompatible default for argument \"sequence\" (default has type \"None\", argument has type \"TemporalSequence[Any]\")  [assignment]"
      },
      {
        "line": 555,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 555,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 556,
        "type": "error",
        "message": "Incompatible default for argument \"patient_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 556,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 556,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 557,
        "type": "error",
        "message": "Incompatible default for argument \"brain_region\" (default has type \"None\", argument has type \"BrainRegion\")  [assignment]"
      },
      {
        "line": 557,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 557,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 558,
        "type": "error",
        "message": "Incompatible default for argument \"neurotransmitter\" (default has type \"None\", argument has type \"Neurotransmitter\")  [assignment]"
      },
      {
        "line": 558,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 558,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 559,
        "type": "error",
        "message": "Incompatible default for argument \"time_series_data\" (default has type \"None\", argument has type \"list[tuple[datetime, float]]\")  [assignment]"
      },
      {
        "line": 559,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 559,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 560,
        "type": "error",
        "message": "Incompatible default for argument \"baseline_period\" (default has type \"None\", argument has type \"tuple[datetime, datetime]\")  [assignment]"
      },
      {
        "line": 560,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 560,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 597,
        "type": "error",
        "message": "Need type annotation for \"results\"  [var-annotated]"
      },
      {
        "line": 782,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"tuple[datetime, datetime] | None\", variable has type \"tuple[datetime, datetime]\")  [assignment]"
      },
      {
        "line": 823,
        "type": "error",
        "message": "Incompatible default for argument \"baseline_period\" (default has type \"None\", argument has type \"tuple[datetime, datetime]\")  [assignment]"
      },
      {
        "line": 823,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 823,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 902,
        "type": "error",
        "message": "Incompatible default for argument \"target_neurotransmitter\" (default has type \"None\", argument has type \"Neurotransmitter\")  [assignment]"
      },
      {
        "line": 902,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 902,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 904,
        "type": "error",
        "message": "Incompatible default for argument \"timestamps\" (default has type \"None\", argument has type \"list[datetime]\")  [assignment]"
      },
      {
        "line": 904,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 904,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 905,
        "type": "error",
        "message": "Incompatible default for argument \"affected_neurotransmitters\" (default has type \"None\", argument has type \"dict[Neurotransmitter, float]\")  [assignment]"
      },
      {
        "line": 905,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 905,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1133,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"event_chains\"  [attr-defined]"
      },
      {
        "line": 1137,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 1144,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"neurotransmitters\"  [attr-defined]"
      },
      {
        "line": 1151,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"interactions\"  [attr-defined]"
      },
      {
        "line": 1177,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 1180,
        "type": "error",
        "message": "Name \"logger\" is not defined  [name-defined]"
      },
      {
        "line": 1183,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 1196,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 1252,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 1252,
        "type": "error",
        "message": "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 1278,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 1288,
        "type": "error",
        "message": "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"add_temporal_sequence\"  [attr-defined]"
      },
      {
        "line": 1289,
        "type": "error",
        "message": "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"add_neurotransmitter_connection\"  [attr-defined]"
      },
      {
        "line": 1290,
        "type": "error",
        "message": "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"calculate_receptor_response\"  [attr-defined]"
      },
      {
        "line": 1291,
        "type": "error",
        "message": "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"simulate_cascade_effects\"  [attr-defined]"
      },
      {
        "line": 899,
        "type": "note",
        "message": "\"simulate_treatment_response\" of \"TemporalNeurotransmitterMapping\" defined here"
      },
      {
        "line": 269,
        "type": "note",
        "message": "\"predict_cascade_effect\" of \"TemporalNeurotransmitterMapping\" defined here"
      }
    ],
    "app/tests/integration/infrastructure/persistence/test_models.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Variable \"app.tests.integration.infrastructure.persistence.test_models.TestMockBase\" is not valid as a type  [valid-type]"
      },
      {
        "line": 21,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Invalid base class \"TestMockBase\"  [misc]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Variable \"app.tests.integration.infrastructure.persistence.test_models.TestMockBase\" is not valid as a type  [valid-type]"
      },
      {
        "line": 55,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Invalid base class \"TestMockBase\"  [misc]"
      }
    ],
    "app/tests/application/presentation/models/digital_twin.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.models.biometric_data\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/models/biometric_data.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      },
      {
        "line": 173,
        "type": "error",
        "message": "Name \"field_validator\" is not defined  [name-defined]"
      }
    ],
    "app/tests/application/presentation/api/schemas/xgboost.py": [
      {
        "line": 507,
        "type": "error",
        "message": "Name \"hyperparameters\" already defined on line 505  [no-redef]"
      },
      {
        "line": 508,
        "type": "error",
        "message": "Name \"status\" already defined on line 506  [no-redef]"
      }
    ],
    "app/presentation/api/schemas/patient.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Decorators on top of @property are not supported  [misc]"
      }
    ],
    "app/infrastructure/services/mocks/mock_enhanced_digital_twin_neurotransmitter_service.py": [
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"affinity\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 75,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 75,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 75,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 76,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 76,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 77,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 77,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 77,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"expression\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"modulation\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "No overload variant of \"__setitem__\" of \"list\" matches argument types \"Neurotransmitter\", \"ReceptorProfile\"  [call-overload]"
      },
      {
        "line": 73,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 73,
        "type": "note",
        "message": "def __setitem__(self, SupportsIndex, ReceptorProfile, /) -> None"
      },
      {
        "line": 73,
        "type": "note",
        "message": "def __setitem__(self, slice, Iterable[ReceptorProfile], /) -> None"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"affinity\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 75,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 75,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 75,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 76,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 76,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]"
      },
      {
        "line": 77,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 77,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile"
      },
      {
        "line": 77,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[ReceptorProfile]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"expression\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Unexpected keyword argument \"modulation\" for \"ReceptorProfile\"  [call-arg]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[Neurotransmitter, dict[str, float]]]\" of \"predict_medication_impacts\" incompatible with return type \"Coroutine[Any, Any, dict[str, dict[str, float]]]\" in supertype \"EnhancedDigitalTwinNeurotransmitterService\"  [override]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"INSULAR_CORTEX\"  [attr-defined]"
      },
      {
        "line": 318,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"MEDIAL_PREFRONTAL_CORTEX\"  [attr-defined]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"POSTERIOR_CINGULATE_CORTEX\"  [attr-defined]"
      },
      {
        "line": 320,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"INFERIOR_PARIETAL_LOBE\"  [attr-defined]"
      },
      {
        "line": 341,
        "type": "error",
        "message": "\"object\" has no attribute \"__iter__\"; maybe \"__dir__\" or \"__str__\"? (not iterable)  [attr-defined]"
      },
      {
        "line": 350,
        "type": "error",
        "message": "\"object\" has no attribute \"name\"  [attr-defined]"
      },
      {
        "line": 361,
        "type": "error",
        "message": "\"object\" has no attribute \"__iter__\"; maybe \"__dir__\" or \"__str__\"? (not iterable)  [attr-defined]"
      }
    ],
    "app/infrastructure/services/mocks/mock_digital_twin_core_service.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Missing positional arguments \"include_genetic_data\", \"include_biomarkers\" in call to \"initialize_digital_twin\" of \"MockDigitalTwinCoreService\"  [call-arg]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_pat_service\"  [attr-defined]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_map_clinical_relevance\"  [attr-defined]"
      },
      {
        "line": 520,
        "type": "error",
        "message": "Name \"random\" is not defined  [name-defined]"
      },
      {
        "line": 524,
        "type": "error",
        "message": "Name \"random\" is not defined  [name-defined]"
      },
      {
        "line": 973,
        "type": "error",
        "message": "Name \"generate_treatment_recommendations\" already defined on line 289  [no-redef]"
      },
      {
        "line": 992,
        "type": "error",
        "message": "Name \"get_visualization_data\" already defined on line 450  [no-redef]"
      },
      {
        "line": 1001,
        "type": "error",
        "message": "Name \"compare_states\" already defined on line 642  [no-redef]"
      },
      {
        "line": 1014,
        "type": "error",
        "message": "Name \"generate_clinical_summary\" already defined on line 781  [no-redef]"
      },
      {
        "line": 1037,
        "type": "error",
        "message": "Name \"random\" is not defined  [name-defined]"
      },
      {
        "line": 1038,
        "type": "error",
        "message": "Name \"random\" is not defined  [name-defined]"
      },
      {
        "line": 1039,
        "type": "error",
        "message": "Name \"random\" is not defined  [name-defined]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_map_clinical_relevance\"  [attr-defined]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_map_clinical_relevance\"  [attr-defined]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwinState\"  [no-any-return]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Missing positional arguments \"include_genetic_data\", \"include_biomarkers\" in call to \"initialize_digital_twin\" of \"MockDigitalTwinCoreService\"  [call-arg]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_mentalllama_service\"  [attr-defined]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"version\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_insights\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_state\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_metrics\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_get_significance_factor\"  [attr-defined]"
      },
      {
        "line": 282,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 287,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwinState\"  [no-any-return]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_mentalllama_service\"  [attr-defined]"
      },
      {
        "line": 373,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_xgboost_service\"  [attr-defined]"
      },
      {
        "line": 482,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_xgboost_service\"  [attr-defined]"
      },
      {
        "line": 510,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_get_region_coordinates\"  [attr-defined]"
      },
      {
        "line": 512,
        "type": "error",
        "message": "\"Sequence[Any]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 526,
        "type": "error",
        "message": "\"Sequence[Any]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 568,
        "type": "error",
        "message": "Argument 1 to \"list\" has incompatible type \"dict_values[Any, dict[str, Any]]\"; expected \"Iterable[str]\"  [arg-type]"
      },
      {
        "line": 573,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 606,
        "type": "error",
        "message": "Missing positional arguments \"include_genetic_data\", \"include_biomarkers\" in call to \"initialize_digital_twin\" of \"MockDigitalTwinCoreService\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"version\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_insights\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_state\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_metrics\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 609,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 629,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 630,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 633,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_get_significance_factor\"  [attr-defined]"
      },
      {
        "line": 635,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 636,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]"
      },
      {
        "line": 640,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwinState\"  [no-any-return]"
      },
      {
        "line": 837,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_mentalllama_service\"  [attr-defined]"
      },
      {
        "line": 885,
        "type": "error",
        "message": "\"MockDigitalTwinCoreService\" has no attribute \"_mentalllama_service\"  [attr-defined]"
      }
    ],
    ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/enum.pyi": [
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      },
      {
        "line": 186,
        "type": "note",
        "message": "\"ClinicalInsight\" defined here"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/registry.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"registry\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/pat/models.py": [
      {
        "line": 207,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ValidationInfo\", variable has type \"dict[str, Any]\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_twin.py": [
      {
        "line": 165,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"Collection[str]\")  [assignment]"
      }
    ],
    "app/domain/entities/biometric_alert_rule.py": [
      {
        "line": 69,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"str\"  [call-overload]"
      },
      {
        "line": 69,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def get(self, BiometricMetricType, /) -> str | None"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def get(self, BiometricMetricType, str, /) -> str"
      },
      {
        "line": 69,
        "type": "note",
        "message": "def [_T] get(self, BiometricMetricType, _T, /) -> str | _T"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/xgboost/interface.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 18,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 39,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 60,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 85,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 97,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 116,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      },
      {
        "line": 137,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      },
      {
        "line": 137,
        "type": "note",
        "message": "If the method is meant to be abstract, use @abc.abstractmethod"
      }
    ],
    "app/core/interfaces/repositories/digital_twin_repository.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 19,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[DigitalTwin]\")  [assignment]"
      }
    ],
    "app/core/domain/entities/patient.py": [
      {
        "line": 73,
        "type": "error",
        "message": "Argument \"default_factory\" to \"Field\" has incompatible type \"type[ContactInfo]\"; expected \"Callable[[], Any] | None\"  [arg-type]"
      }
    ],
    "app/application/services/temporal_neurotransmitter_service.py": [
      {
        "line": 136,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 136,
        "type": "error",
        "message": "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 332,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"simulate_treatment_response\" of \"TemporalNeurotransmitterMapping\"  [call-arg]"
      },
      {
        "line": 393,
        "type": "error",
        "message": "\"NeurotransmitterVisualizationPreprocessor\" has no attribute \"precompute_temporal_sequence_visualization\"  [attr-defined]"
      },
      {
        "line": 424,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 446,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"predict_cascade_effect\" of \"TemporalNeurotransmitterMapping\"  [call-arg]"
      },
      {
        "line": 460,
        "type": "error",
        "message": "Need type annotation for \"nodes\" (hint: \"nodes: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 487,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]"
      },
      {
        "line": 497,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]"
      },
      {
        "line": 514,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 517,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"object\")  [operator]"
      },
      {
        "line": 525,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]"
      },
      {
        "line": 527,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]"
      },
      {
        "line": 548,
        "type": "error",
        "message": "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]"
      },
      {
        "line": 550,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 611,
        "type": "error",
        "message": "Need type annotation for \"event\"  [var-annotated]"
      },
      {
        "line": 637,
        "type": "error",
        "message": "Need type annotation for \"event\"  [var-annotated]"
      },
      {
        "line": 671,
        "type": "error",
        "message": "Need type annotation for \"event\"  [var-annotated]"
      },
      {
        "line": 727,
        "type": "error",
        "message": "Need type annotation for \"event\"  [var-annotated]"
      },
      {
        "line": 735,
        "type": "error",
        "message": "\"CorrelatedEvent[Any]\" has no attribute \"details\"  [attr-defined]"
      },
      {
        "line": 742,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 742,
        "type": "error",
        "message": "\"EventRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 742,
        "type": "note",
        "message": "Error code \"attr-defined\" not covered by \"type: ignore\" comment"
      },
      {
        "line": 754,
        "type": "error",
        "message": "Returning Any from function declared to return \"TemporalSequence[Any] | None\"  [no-any-return]"
      },
      {
        "line": 754,
        "type": "error",
        "message": "\"TemporalSequenceRepository\" has no attribute \"get_by_time_range\"  [attr-defined]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/mocks.py": [
      {
        "line": 124,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Return type \"dict[str, list[dict[str, Any]]]\" of \"list_endpoints\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"SageMakerServiceInterface\"  [override]"
      },
      {
        "line": 224,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"invoke_endpoint\" incompatible with return type \"dict[str, Any]\" in supertype \"SageMakerRuntimeServiceInterface\"  [override]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "Name \"uuid\" is not defined  [name-defined]"
      }
    ],
    "app/presentation/api/schemas/xgboost.py": [
      {
        "line": 116,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      }
    ],
    "app/presentation/api/schemas/digital_twin.py": [
      {
        "line": 102,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]"
      }
    ],
    "app/infrastructure/services/mock_biometric_alert_rule_service.py": [
      {
        "line": 77,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/services/mocks/mock_mentalllama_service.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "\"type[ClinicalSignificance]\" has no attribute \"MODERATE\"  [attr-defined]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"PREFRONTAL_CORTEX\"  [attr-defined]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"ANTERIOR_CINGULATE\"  [attr-defined]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "\"type[ClinicalSignificance]\" has no attribute \"MODERATE\"  [attr-defined]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"AMYGDALA\"  [attr-defined]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"ANTERIOR_CINGULATE\"  [attr-defined]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "\"type[ClinicalSignificance]\" has no attribute \"MODERATE\"  [attr-defined]"
      },
      {
        "line": 107,
        "type": "error",
        "message": "\"type[BrainRegion]\" has no attribute \"HYPOTHALAMUS\"  [attr-defined]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "\"type[Neurotransmitter]\" has no attribute \"MELATONIN\"  [attr-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]"
      },
      {
        "line": 130,
        "type": "error",
        "message": "\"type[ClinicalSignificance]\" has no attribute \"NONE\"  [attr-defined]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 288,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 289,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 298,
        "type": "error",
        "message": "No overload variant of \"max\" matches argument types \"object\", \"object\", \"object\"  [call-overload]"
      },
      {
        "line": 298,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [SupportsRichComparisonT] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [SupportsRichComparisonT] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [SupportsRichComparisonT, _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T"
      },
      {
        "line": 298,
        "type": "note",
        "message": "def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2"
      }
    ],
    "app/infrastructure/services/mocks/mock_enhanced_digital_twin_core_service.py": [
      {
        "line": 177,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, object]\", expected \"tuple[DigitalTwinState, TemporalKnowledgeGraph | None, BayesianBeliefNetwork | None]\")  [return-value]"
      },
      {
        "line": 253,
        "type": "error",
        "message": "Item \"EnhancedXGBoostService\" of \"EnhancedXGBoostService | MagicMock\" has no attribute \"integrate_pharmacogenomic_data\"  [union-attr]"
      },
      {
        "line": 567,
        "type": "error",
        "message": "Argument \"key\" to \"max\" has incompatible type overloaded function; expected \"Callable[[str], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 640,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 643,
        "type": "error",
        "message": "\"object\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 968,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 968,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 1151,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, float | str]]\", target has type \"list[dict[str, object]]\")  [assignment]"
      },
      {
        "line": 1152,
        "type": "error",
        "message": "List comprehension has incompatible type List[str | str | str | str | str | str | str | str | str | str | str | str]; expected List[dict[str, object]]  [misc]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "Incompatible default for argument \"time_range\" (default has type \"None\", argument has type \"tuple[Any, ...]\")  [assignment]"
      },
      {
        "line": 1222,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1222,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1368,
        "type": "error",
        "message": "Argument 2 of \"subscribe_to_events\" is incompatible with supertype \"EnhancedDigitalTwinCoreService\"; supertype defines the argument type as \"str\"  [override]"
      },
      {
        "line": 1368,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 1368,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 1457,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 1460,
        "type": "error",
        "message": "\"None\" not callable  [misc]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"version\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"created_at\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_regions\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitters\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_insights\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"biomarkers\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"predicted_states\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"treatment_responses\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"confidence_scores\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"active_treatments\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1501,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"DigitalTwinState\"  [call-arg]"
      },
      {
        "line": 1504,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"version\"  [attr-defined]"
      },
      {
        "line": 1505,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"created_at\"  [attr-defined]"
      },
      {
        "line": 1507,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 1508,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"neurotransmitters\"  [attr-defined]"
      },
      {
        "line": 1509,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"clinical_insights\"  [attr-defined]"
      },
      {
        "line": 1511,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"clinical_insights\"  [attr-defined]"
      },
      {
        "line": 1541,
        "type": "error",
        "message": "Returning Any from function declared to return \"DigitalTwinState\"  [no-any-return]"
      },
      {
        "line": 1607,
        "type": "error",
        "message": "Argument \"significance\" to \"ClinicalInsight\" has incompatible type \"app.domain.entities.digital_twin_enums.ClinicalSignificance\"; expected \"app.domain.entities.digital_twin_entity.ClinicalSignificance\"  [arg-type]"
      },
      {
        "line": 1608,
        "type": "error",
        "message": "Argument \"clinical_significance\" to \"ClinicalInsight\" has incompatible type \"app.domain.entities.digital_twin_enums.ClinicalSignificance\"; expected \"app.domain.entities.digital_twin_entity.ClinicalSignificance\"  [arg-type]"
      },
      {
        "line": 1612,
        "type": "error",
        "message": "List item 0 has incompatible type \"app.domain.entities.digital_twin_enums.BrainRegion\"; expected \"app.domain.entities.digital_twin_entity.BrainRegion\"  [list-item]"
      },
      {
        "line": 1613,
        "type": "error",
        "message": "List item 1 has incompatible type \"app.domain.entities.digital_twin_enums.BrainRegion\"; expected \"app.domain.entities.digital_twin_entity.BrainRegion\"  [list-item]"
      },
      {
        "line": 1616,
        "type": "error",
        "message": "List item 0 has incompatible type \"app.domain.entities.digital_twin_enums.Neurotransmitter\"; expected \"app.domain.entities.digital_twin_entity.Neurotransmitter\"  [list-item]"
      },
      {
        "line": 1617,
        "type": "error",
        "message": "List item 1 has incompatible type \"app.domain.entities.digital_twin_enums.Neurotransmitter\"; expected \"app.domain.entities.digital_twin_entity.Neurotransmitter\"  [list-item]"
      },
      {
        "line": 1683,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 1884,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"float\", target has type \"int\")  [assignment]"
      },
      {
        "line": 1895,
        "type": "error",
        "message": "Argument \"key\" to \"max\" has incompatible type \"Callable[[ClinicalSignificance], str | str | str | str | str | str | str | str | str | str | ClinicalSignificance]\"; expected \"Callable[[ClinicalSignificance], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 1895,
        "type": "error",
        "message": "Incompatible return value type (got \"str | str | str | str | str | str | str | str | str | str | ClinicalSignificance\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 1913,
        "type": "error",
        "message": "Name \"simulate_neurotransmitter_cascade\" already defined on line 1269  [no-redef]"
      },
      {
        "line": 1950,
        "type": "error",
        "message": "Need type annotation for \"steps_data\" (hint: \"steps_data: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1955,
        "type": "error",
        "message": "Need type annotation for \"most_affected_regions\" (hint: \"most_affected_regions: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1973,
        "type": "error",
        "message": "Name \"current_state\" is not defined  [name-defined]"
      },
      {
        "line": 1974,
        "type": "error",
        "message": "Name \"current_state\" is not defined  [name-defined]"
      },
      {
        "line": 2001,
        "type": "error",
        "message": "Name \"mapping\" is not defined  [name-defined]"
      },
      {
        "line": 2027,
        "type": "error",
        "message": "Name \"mapping\" is not defined  [name-defined]"
      },
      {
        "line": 2044,
        "type": "error",
        "message": "Name \"mapping\" is not defined  [name-defined]"
      },
      {
        "line": 2124,
        "type": "error",
        "message": "Need type annotation for \"timeline\" (hint: \"timeline: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/models/sqla/user.py": [
      {
        "line": 5,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Variable \"app.infrastructure.models.sqla.user.Base\" is not valid as a type  [valid-type]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Invalid base class \"Base\"  [misc]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "\"str\" has no attribute \"value\"  [attr-defined]"
      }
    ],
    "app/infrastructure/factories/mock_digital_twin_factory.py": [
      {
        "line": 71,
        "type": "error",
        "message": "Incompatible return value type (got \"MockDigitalTwinCoreService\", expected \"DigitalTwinCoreService\")  [return-value]"
      }
    ],
    "app/core/services/ml/xgboost/mock.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 46,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 46,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 46,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 46,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[Any, Any]]"
      },
      {
        "line": 204,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 204,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 204,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 261,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_simulate_processing_delay\"  [attr-defined]"
      },
      {
        "line": 286,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 286,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 286,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 286,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 286,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 435,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 526,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 537,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 537,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 537,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 537,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 537,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 682,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 694,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 694,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 694,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 694,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 694,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> dict[str, Any]"
      },
      {
        "line": 712,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 784,
        "type": "error",
        "message": "Name \"integrate_with_digital_twin\" already defined on line 46  [no-redef]"
      },
      {
        "line": 784,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 784,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 784,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 784,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 784,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> dict[str, Any]"
      },
      {
        "line": 802,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 865,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 877,
        "type": "error",
        "message": "Name \"get_model_info\" already defined on line 43  [no-redef]"
      },
      {
        "line": 877,
        "type": "error",
        "message": "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 877,
        "type": "error",
        "message": "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"MLServiceInterface\"  [override]"
      },
      {
        "line": 890,
        "type": "error",
        "message": "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]"
      },
      {
        "line": 993,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 993,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1001,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 1001,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1039,
        "type": "error",
        "message": "\"DataPrivacyError\" has no attribute \"pattern_types\"  [attr-defined]"
      },
      {
        "line": 1499,
        "type": "error",
        "message": "Need type annotation for \"risk_factors\"  [var-annotated]"
      },
      {
        "line": 1631,
        "type": "error",
        "message": "Need type annotation for \"side_effects\"  [var-annotated]"
      },
      {
        "line": 1823,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1828,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1833,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1843,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1848,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1853,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1863,
        "type": "error",
        "message": "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1868,
        "type": "error",
        "message": "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1873,
        "type": "error",
        "message": "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]"
      },
      {
        "line": 1884,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1887,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1889,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1890,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1892,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 1893,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      }
    ],
    "app/core/interfaces/services/ml/pat_interface.py": [
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible default for argument \"include_features\" (default has type \"None\", argument has type \"list[str]\")  [assignment]"
      },
      {
        "line": 79,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 79,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/interfaces/repositories/biometric_twin_repository.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 17,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricTwinState]\")  [assignment]"
      }
    ],
    "app/presentation/api/schemas/biometric.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Module \"app.presentation.api.schemas.xgboost\" does not explicitly export attribute \"BaseModelConfig\"  [attr-defined]"
      }
    ],
    "app/infrastructure/services/mock_biometric_alert_service.py": [
      {
        "line": 28,
        "type": "error",
        "message": "Signature of \"get_alerts\" incompatible with supertype \"AlertServiceInterface\"  [override]"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 28,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | UUID | None = ..., provider_id: str | UUID | None = ..., alert_type: str | None = ..., severity: AlertSeverity | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 28,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | None = ..., status: AlertStatus | None = ..., priority: AlertPriority | None = ..., alert_type: AlertType | None = ..., start_date: datetime | None = ..., end_date: datetime | None = ..., limit: int = ..., offset: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Argument 1 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 69,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 69,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 3 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"AlertSeverity\"  [override]"
      },
      {
        "line": 71,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 71,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 88,
        "type": "error",
        "message": "\"type[AlertStatus]\" has no attribute \"NEW\"  [attr-defined]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Signature of \"update_alert_status\" incompatible with supertype \"AlertServiceInterface\"  [override]"
      },
      {
        "line": 96,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 96,
        "type": "note",
        "message": "def update_alert_status(self, alert_id: str | UUID, status: str, resolution_notes: str | None = ..., resolved_by: str | UUID | None = ...) -> Coroutine[Any, Any, tuple[bool, str | None]]"
      },
      {
        "line": 96,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 96,
        "type": "note",
        "message": "def update_alert_status(self, alert_id: str, new_status: AlertStatus, updated_by: str) -> Coroutine[Any, Any, bool]"
      }
    ],
    "app/infrastructure/persistence/repositories/mock_audit_log_repository.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Invalid index type \"str | None\" for \"dict[str, AuditLog]\"; expected type \"str\"  [index]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]"
      }
    ],
    "app/infrastructure/ml/symptom_forecasting/xgboost_model.py": [
      {
        "line": 75,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MockOptuna\", target has type Module)  [assignment]"
      },
      {
        "line": 84,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MockXGB\", target has type Module)  [assignment]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"optuna\"  [import-not-found]"
      },
      {
        "line": 89,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"optuna.samplers\"  [import-not-found]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Need type annotation for \"models\" (hint: \"models: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Item \"float\" of \"float | Any\" has no attribute \"min\"  [union-attr]"
      },
      {
        "line": 267,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 385,
        "type": "error",
        "message": "Item \"None\" of \"list[str] | None\" has no attribute \"__iter__\" (not iterable)  [union-attr]"
      },
      {
        "line": 408,
        "type": "error",
        "message": "Argument 1 to \"len\" has incompatible type \"list[str] | None\"; expected \"Sized\"  [arg-type]"
      },
      {
        "line": 410,
        "type": "error",
        "message": "Argument 1 to \"enumerate\" has incompatible type \"list[str] | None\"; expected \"Iterable[str]\"  [arg-type]"
      }
    ],
    "app/infrastructure/messaging/secure_messaging_service.py": [
      {
        "line": 162,
        "type": "error",
        "message": "Item \"DHPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"DSAPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"EllipticCurvePublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"Ed25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"Ed448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"X25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Item \"X448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"DHPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"Ed25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"Ed448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"DSAPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"EllipticCurvePrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"X25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Item \"X448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]"
      },
      {
        "line": 409,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 441,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 515,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/services/biometric_event_processor.py": [
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 145,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 161,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 166,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 174,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 323,
        "type": "error",
        "message": "Incompatible default for argument \"acknowledge_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 323,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 323,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Incompatible default for argument \"resolution_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]"
      },
      {
        "line": 333,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 333,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 334,
        "type": "error",
        "message": "Incompatible default for argument \"resolution_note\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 334,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 334,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 396,
        "type": "error",
        "message": "Argument 1 to \"_get_recipient_for_patient\" of \"EmailAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 403,
        "type": "error",
        "message": "\"object\" has no attribute \"send_email\"  [attr-defined]"
      },
      {
        "line": 475,
        "type": "error",
        "message": "Argument 1 to \"_get_recipient_for_patient\" of \"SMSAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 481,
        "type": "error",
        "message": "\"object\" has no attribute \"send_sms\"  [attr-defined]"
      },
      {
        "line": 546,
        "type": "error",
        "message": "Argument 1 to \"_get_recipients_for_patient\" of \"InAppAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 550,
        "type": "error",
        "message": "\"object\" has no attribute \"send_notification\"  [attr-defined]"
      },
      {
        "line": 552,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 760,
        "type": "error",
        "message": "Incompatible default for argument \"template_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 760,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 760,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 792,
        "type": "error",
        "message": "Incompatible default for argument \"name\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 792,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 792,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 793,
        "type": "error",
        "message": "Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 793,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 793,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 794,
        "type": "error",
        "message": "Incompatible default for argument \"priority\" (default has type \"None\", argument has type \"AlertPriority\")  [assignment]"
      },
      {
        "line": 794,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 794,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 795,
        "type": "error",
        "message": "Incompatible default for argument \"parameters\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 795,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 795,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 796,
        "type": "error",
        "message": "Incompatible default for argument \"created_by\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 796,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 796,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/database_settings.py": [
      {
        "line": 48,
        "type": "error",
        "message": "Extra keys (\"env_file\", \"env_prefix\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 48,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      }
    ],
    "app/core/services/ml/xgboost/factory.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"str\": \"type[XGBoostService]\"; expected \"str\": \"type[XGBoostInterface]\"  [dict-item]"
      },
      {
        "line": 30,
        "type": "note",
        "message": "\"get_xgboost_service\" defined here"
      }
    ],
    "app/core/services/ml/xgboost/aws_service.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 65,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 65,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 126,
        "type": "error",
        "message": "Name \"aws_service_factory\" is not defined  [name-defined]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 209,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 244,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 244,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 244,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 244,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 244,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 244,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 244,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 244,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 265,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 291,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 293,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]"
      },
      {
        "line": 369,
        "type": "error",
        "message": "\"type[RiskLevel]\" has no attribute \"MEDIUM\"  [attr-defined]"
      },
      {
        "line": 373,
        "type": "error",
        "message": "\"type[RiskLevel]\" has no attribute \"UNKNOWN\"  [attr-defined]"
      },
      {
        "line": 398,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 489,
        "type": "note",
        "message": "\"_store_prediction\" of \"AWSXGBoostService\" defined here"
      },
      {
        "line": 523,
        "type": "error",
        "message": "\"Observer\" has no attribute \"on_event\"  [attr-defined]"
      },
      {
        "line": 533,
        "type": "error",
        "message": "\"Observer\" has no attribute \"on_event\"  [attr-defined]"
      },
      {
        "line": 560,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 560,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 563,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 566,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 577,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 580,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]"
      },
      {
        "line": 580,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]"
      },
      {
        "line": 581,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 582,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 585,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 585,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 586,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 587,
        "type": "error",
        "message": "Value of type \"Collection[str]\" is not indexable  [index]"
      },
      {
        "line": 598,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Collection[str]]\", expected \"list[dict[str, Any]]\")  [return-value]"
      },
      {
        "line": 603,
        "type": "error",
        "message": "Name \"get_available_models\" already defined on line 539  [no-redef]"
      },
      {
        "line": 614,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 619,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 626,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 689,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 707,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]"
      },
      {
        "line": 710,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 711,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 715,
        "type": "error",
        "message": "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]"
      },
      {
        "line": 724,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 731,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 733,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 733,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 733,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 733,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 733,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 733,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 733,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 733,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 733,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 785,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 803,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]"
      },
      {
        "line": 806,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 807,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 811,
        "type": "error",
        "message": "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]"
      },
      {
        "line": 820,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 827,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 829,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 829,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 829,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 829,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 829,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 829,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 829,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 829,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 829,
        "type": "note",
        "message": "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 860,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 860,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 862,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 872,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 876,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 879,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 879,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 891,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]"
      },
      {
        "line": 892,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 898,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 898,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 898,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 898,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 898,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 898,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 898,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 898,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 898,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 929,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 929,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]"
      },
      {
        "line": 931,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 954,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]"
      },
      {
        "line": 962,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]"
      },
      {
        "line": 1047,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1051,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1054,
        "type": "error",
        "message": "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 1054,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]"
      },
      {
        "line": 1107,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1107,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1108,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1112,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1118,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1118,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1119,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1121,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1127,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1130,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1141,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1145,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1148,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 1177,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1178,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1179,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 1182,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1183,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1184,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1187,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1188,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1189,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1192,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1193,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1194,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1199,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1200,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1201,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1211,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1222,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1223,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1223,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1224,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1224,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1225,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1225,
        "type": "error",
        "message": "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]"
      },
      {
        "line": 1243,
        "type": "error",
        "message": "Cannot determine type of \"_s3\"  [has-type]"
      },
      {
        "line": 1243,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1245,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1247,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 1252,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker\"  [has-type]"
      },
      {
        "line": 1261,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1288,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1291,
        "type": "error",
        "message": "Name \"ServiceInitializationError\" is not defined  [name-defined]"
      },
      {
        "line": 1297,
        "type": "error",
        "message": "Name \"predict_risk\" already defined on line 244  [no-redef]"
      },
      {
        "line": 1297,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 1297,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 1317,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1351,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1365,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 1365,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 1385,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 1436,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1437,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1447,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1448,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1458,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1459,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 1475,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1476,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1476,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1496,
        "type": "error",
        "message": "Name \"_store_prediction\" already defined on line 489  [no-redef]"
      },
      {
        "line": 1524,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1524,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1549,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1549,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 1554,
        "type": "error",
        "message": "Name \"predict_treatment_response\" already defined on line 646  [no-redef]"
      },
      {
        "line": 1580,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 1622,
        "type": "error",
        "message": "Cannot determine type of \"_sagemaker_runtime\"  [has-type]"
      },
      {
        "line": 1665,
        "type": "error",
        "message": "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]"
      },
      {
        "line": 1702,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1703,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 1703,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 1738,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1738,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 1762,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb\"  [has-type]"
      },
      {
        "line": 1762,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      }
    ],
    "app/core/services/ml/pat/mock.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Need type annotation for \"_config\" (hint: \"_config: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"_assessments\" (hint: \"_assessments: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Need type annotation for \"_form_templates\" (hint: \"_form_templates: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "Need type annotation for \"_analyses\" (hint: \"_analyses: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 48,
        "type": "error",
        "message": "Need type annotation for \"_patients_analyses\" (hint: \"_patients_analyses: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 49,
        "type": "error",
        "message": "Need type annotation for \"_embeddings\" (hint: \"_embeddings: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Need type annotation for \"_profiles\" (hint: \"_profiles: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 51,
        "type": "error",
        "message": "Need type annotation for \"_integrations\" (hint: \"_integrations: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "Cannot determine type of \"_force_init_error\"  [has-type]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "Need type annotation for \"assessment\"  [var-annotated]"
      },
      {
        "line": 383,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 384,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 387,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 389,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 390,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 489,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 705,
        "type": "error",
        "message": "Missing return statement  [return]"
      },
      {
        "line": 717,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int | float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 727,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 729,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 731,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 733,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 735,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 745,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int | float\", variable has type \"int\")  [assignment]"
      },
      {
        "line": 755,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 757,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 759,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 761,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]"
      },
      {
        "line": 864,
        "type": "error",
        "message": "Unsupported right operand type for in (\"Collection[str] | None\")  [operator]"
      },
      {
        "line": 865,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str] | None\")  [index]"
      },
      {
        "line": 865,
        "type": "error",
        "message": "Value of type \"Collection[str] | None\" is not indexable  [index]"
      },
      {
        "line": 898,
        "type": "error",
        "message": "\"type[MockPATService]\" has no attribute \"test_analyses\"  [attr-defined]"
      },
      {
        "line": 899,
        "type": "error",
        "message": "\"type[MockPATService]\" has no attribute \"test_analyses\"  [attr-defined]"
      },
      {
        "line": 1360,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[float]\"  [no-any-return]"
      },
      {
        "line": 1405,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 1407,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 1412,
        "type": "error",
        "message": "Signature of \"get_patient_analyses\" incompatible with supertype \"PATInterface\"  [override]"
      },
      {
        "line": 1412,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 1412,
        "type": "note",
        "message": "def get_patient_analyses(self, patient_id: str, limit: int = ..., offset: int = ..., analysis_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 1412,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 1412,
        "type": "note",
        "message": "def get_patient_analyses(self, patient_id: str, analysis_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., limit: int | None = ..., offset: int | None = ...) -> list[dict[str, Any]] | dict[str, Any]"
      },
      {
        "line": 1997,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Any] | None\", expected \"dict[Any, Any]\")  [return-value]"
      },
      {
        "line": 2128,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Sequence[str]]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 2140,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, object]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/core/services/ml/pat/bedrock.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Incompatible import of \"InitializationError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.InitializationError]\", local name has type \"type[app.core.exceptions.base_exceptions.InitializationError]\")  [assignment]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Incompatible import of \"ResourceNotFoundError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.ResourceNotFoundError]\", local name has type \"type[app.core.exceptions.base_exceptions.ResourceNotFoundError]\")  [assignment]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Incompatible import of \"ValidationError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.ValidationError]\", local name has type \"type[app.core.exceptions.base_exceptions.ValidationError]\")  [assignment]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Signature of \"initialize\" incompatible with supertype \"PATInterface\"  [override]"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "def initialize(self, config: dict[str, Any]) -> None"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "def initialize(self, config: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"BedrockRuntimeServiceInterface\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"DynamoDBServiceInterface\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"S3ServiceInterface\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"None\" has no attribute \"put_item\"  [attr-defined]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "Name \"StorageError\" is not defined  [name-defined]"
      },
      {
        "line": 384,
        "type": "error",
        "message": "Signature of \"analyze_actigraphy\" incompatible with supertype \"PATInterface\"  [override]"
      },
      {
        "line": 384,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 384,
        "type": "note",
        "message": "def analyze_actigraphy(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, device_info: dict[str, Any], analysis_types: list[str], **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 384,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 384,
        "type": "note",
        "message": "def analyze_actigraphy(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, device_info: dict[str, Any] | None = ..., analysis_types: list[str] | None = ..., **kwargs: Any) -> Coroutine[Any, Any, AnalysisResult]"
      },
      {
        "line": 442,
        "type": "error",
        "message": "\"object\" has no attribute \"__iter__\"; maybe \"__dir__\" or \"__str__\"? (not iterable)  [attr-defined]"
      },
      {
        "line": 453,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_model\"  [attr-defined]"
      },
      {
        "line": 521,
        "type": "error",
        "message": "\"None\" has no attribute \"put_item\"  [attr-defined]"
      },
      {
        "line": 567,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, AnalysisResult | None]\" of \"get_analysis_by_id\" incompatible with return type \"dict[str, Any]\" in supertype \"PATInterface\"  [override]"
      },
      {
        "line": 584,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 622,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[AnalysisResult]]\" of \"get_patient_analyses\" incompatible with return type \"dict[str, Any]\" in supertype \"PATInterface\"  [override]"
      },
      {
        "line": 667,
        "type": "error",
        "message": "\"None\" has no attribute \"query\"  [attr-defined]"
      },
      {
        "line": 692,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 713,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"upper\"  [union-attr]"
      },
      {
        "line": 714,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"upper\"  [union-attr]"
      },
      {
        "line": 715,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"lower\"  [union-attr]"
      },
      {
        "line": 770,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"PATInterface\"  [override]"
      },
      {
        "line": 770,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 770,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, analysis_id: str | None = ..., actigraphy_analysis: dict[str, Any] | None = ..., integration_types: list[str] | None = ..., metadata: dict[str, Any] | None = ..., **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 770,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 770,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, analysis_result: AnalysisResult, twin_profile: DigitalTwin | None = ...) -> Coroutine[Any, Any, DigitalTwin]"
      },
      {
        "line": 778,
        "type": "error",
        "message": "Name \"ConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 856,
        "type": "error",
        "message": "Name \"ConfigurationError\" is not defined  [name-defined]"
      },
      {
        "line": 910,
        "type": "error",
        "message": "Signature of \"get_actigraphy_embeddings\" incompatible with supertype \"PATInterface\"  [override]"
      },
      {
        "line": 910,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 910,
        "type": "note",
        "message": "def get_actigraphy_embeddings(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 910,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 910,
        "type": "note",
        "message": "def get_actigraphy_embeddings(self, patient_id: str, data: list[dict[Any, Any]]) -> Coroutine[Any, Any, list[float]]"
      },
      {
        "line": 935,
        "type": "error",
        "message": "\"None\" has no attribute \"invoke_model\"  [attr-defined]"
      }
    ],
    "app/core/interfaces/services/authentication_service.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 18,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      }
    ],
    "app/core/interfaces/repositories/biometric_alert_repository.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 12,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricAlert]\")  [assignment]"
      }
    ],
    "app/core/config/settings.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"typing\" has no attribute \"Self\"  [attr-defined]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "Use `from typing_extensions import Self` instead"
      },
      {
        "line": 13,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/runtime_troubles.html#using-new-additions-to-the-typing-module"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Extra keys (\"env_file\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"SecretStr\")  [assignment]"
      }
    ],
    "app/config/settings.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 27,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, str]\"  [no-any-return]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      },
      {
        "line": 254,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, list[str]] | None\"  [no-any-return]"
      },
      {
        "line": 291,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[str]\"  [no-any-return]"
      },
      {
        "line": 336,
        "type": "error",
        "message": "Name \"DATABASE_ECHO\" already defined on line 317  [no-redef]"
      },
      {
        "line": 339,
        "type": "error",
        "message": "Name \"DATABASE_SSL_MODE\" already defined on line 322  [no-redef]"
      },
      {
        "line": 342,
        "type": "error",
        "message": "Name \"DATABASE_SSL_CA\" already defined on line 325  [no-redef]"
      },
      {
        "line": 345,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Name \"DATABASE_SSL_VERIFY\" already defined on line 326  [no-redef]"
      },
      {
        "line": 453,
        "type": "error",
        "message": "Name \"TESTING\" already defined on line 204  [no-redef]"
      },
      {
        "line": 484,
        "type": "error",
        "message": "Argument \"port\" to \"build\" of \"MultiHostUrl\" has incompatible type \"str\"; expected \"int | None\"  [arg-type]"
      },
      {
        "line": 506,
        "type": "error",
        "message": "Extra keys (\"case_sensitive\", \"env_file_encoding\", \"env_nested_delimiter\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]"
      },
      {
        "line": 506,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]"
      }
    ],
    "app/application/services/biometric_alert_rule_service.py": [
      {
        "line": 77,
        "type": "error",
        "message": "\"BiometricAlertTemplateRepository\" has no attribute \"get_by_id\"  [attr-defined]"
      },
      {
        "line": 302,
        "type": "error",
        "message": "Unexpected keyword argument \"patient_id\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]"
      },
      {
        "line": 302,
        "type": "error",
        "message": "Unexpected keyword argument \"is_active\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]"
      },
      {
        "line": 513,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 516,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/domain/repositories/biometric_alert_rule_repository.py": [
      {
        "line": 182,
        "type": "note",
        "message": "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here"
      },
      {
        "line": 182,
        "type": "note",
        "message": "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here"
      }
    ],
    "app/application/services/alert_rule_template_service.py": [
      {
        "line": 79,
        "type": "error",
        "message": "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 111,
        "type": "error",
        "message": "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 284,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 287,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/security/phi/sanitizer.py": [
      {
        "line": 20,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 20,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 20,
        "type": "note",
        "message": "def get_settings() -> Settings"
      },
      {
        "line": 20,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 20,
        "type": "note",
        "message": "def get_settings() -> Any"
      },
      {
        "line": 464,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 470,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 490,
        "type": "error",
        "message": "\"PHISanitizer\" has no attribute \"_is_path_whitelisted\"; maybe \"_is_whitelisted\" or \"is_whitelisted\"?  [attr-defined]"
      },
      {
        "line": 498,
        "type": "error",
        "message": "Argument 2 to \"_is_whitelisted\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 740,
        "type": "error",
        "message": "Item \"None\" of \"Match[str] | None\" has no attribute \"group\"  [union-attr]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 780,
        "type": "error",
        "message": "\"str\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 796,
        "type": "error",
        "message": "Argument \"path\" to \"contains_phi\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 965,
        "type": "error",
        "message": "Incompatible return value type (got \"Logger\", expected \"PHISafeLogger\")  [return-value]"
      }
    ],
    "app/infrastructure/security/password/password_handler.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Library stubs not installed for \"passlib.context\"  [import-untyped]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Library stubs not installed for \"zxcvbn\"  [import-untyped]"
      },
      {
        "line": 15,
        "type": "note",
        "message": "Hint: \"python3 -m pip install types-zxcvbn\""
      },
      {
        "line": 78,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 111,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Incompatible return value type (got \"tuple[bool, None]\", expected \"tuple[bool, str]\")  [return-value]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_uppercase\"  [attr-defined]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_lowercase\"  [attr-defined]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_digit\"  [attr-defined]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "\"PasswordHandler\" has no attribute \"require_special\"  [attr-defined]"
      }
    ],
    "app/infrastructure/security/auth/mfa_service.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Skipping analyzing \"qrcode\": module is installed, but missing library stubs or py.typed marker  [import-untyped]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_SECRET_KEY\"  [union-attr]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_ISSUER_NAME\"  [union-attr]"
      },
      {
        "line": 227,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type Module)  [assignment]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 251,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      }
    ],
    "app/infrastructure/security/audit/audit.py": [
      {
        "line": 177,
        "type": "error",
        "message": "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 177,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 177,
        "type": "note",
        "message": "def log_security_event(self, event_type: str, description: str = ..., user_id: str | None = ..., actor_id: str | None = ..., severity: AuditSeverity = ..., details: str | None = ..., status: str | None = ..., metadata: dict[str, Any] | None = ..., ip_address: str | None = ...) -> None"
      },
      {
        "line": 177,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 177,
        "type": "note",
        "message": "def log_security_event(self, description: str, actor_id: str | None = ..., status: str | None = ..., severity: AuditSeverity = ..., details: dict[str, Any] | None = ..., request: Any | None = ...) -> str"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Missing return statement  [return]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 212,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 212,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str | None = ..., resource_id: str | None = ..., data_accessed: str | None = ..., resource_type: str | None = ..., access_reason: str | None = ..., action: str | None = ..., ip_address: str | None = ..., details: str | None = ..., metadata: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 212,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 212,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str, resource_type: str, action: str, status: str, phi_fields: list[str] | None = ..., reason: str | None = ..., request: Any | None = ..., request_context: dict[str, Any] | None = ...) -> str"
      },
      {
        "line": 269,
        "type": "error",
        "message": "Signature of \"log_auth_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 269,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 269,
        "type": "note",
        "message": "def log_auth_event(self, event_type: str, user_id: str, success: bool, description: str, ip_address: str | None = ..., metadata: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 269,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 269,
        "type": "note",
        "message": "def log_auth_event(self, event_type: str, user_id: str | None = ..., success: bool = ..., details: dict[str, Any] | None = ..., actor_id: str | None = ...) -> str"
      },
      {
        "line": 310,
        "type": "error",
        "message": "Signature of \"log_system_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 310,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 310,
        "type": "note",
        "message": "def log_system_event(self, event_type: str, description: str, severity: AuditSeverity = ..., metadata: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 310,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 310,
        "type": "note",
        "message": "def log_system_event(self, event_type: str, description: str, details: dict[str, Any] | None = ..., user_id: str | None = ..., actor_id: str | None = ...) -> str"
      },
      {
        "line": 351,
        "type": "error",
        "message": "Signature of \"get_audit_trail\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 351,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 351,
        "type": "note",
        "message": "def get_audit_trail(self, user_id: str | None = ..., patient_id: str | None = ..., event_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., limit: int | None = ..., offset: int | None = ...) -> list[dict[str, Any]]"
      },
      {
        "line": 351,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 351,
        "type": "note",
        "message": "def get_audit_trail(self, filters: dict[str, Any] | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., offset: int = ...) -> list[dict[str, Any]]"
      },
      {
        "line": 482,
        "type": "error",
        "message": "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 482,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 482,
        "type": "note",
        "message": "def log_security_event(self, event_type: str, description: str = ..., user_id: str | None = ..., actor_id: str | None = ..., severity: AuditSeverity = ..., details: str | None = ..., status: str | None = ..., metadata: dict[str, Any] | None = ..., ip_address: str | None = ...) -> None"
      },
      {
        "line": 482,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 482,
        "type": "note",
        "message": "def log_security_event(self, description: str, actor_id: str | None = ..., status: str | None = ..., severity: AuditSeverity = ..., details: dict[str, Any] | None = ..., request: Any | None = ...) -> str"
      },
      {
        "line": 494,
        "type": "error",
        "message": "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 494,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 494,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str | None = ..., resource_id: str | None = ..., data_accessed: str | None = ..., resource_type: str | None = ..., access_reason: str | None = ..., action: str | None = ..., ip_address: str | None = ..., details: str | None = ..., metadata: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 494,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 494,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str, resource_type: str, action: str, status: str, phi_fields: list[str] | None = ..., reason: str | None = ..., request: Any | None = ..., request_context: dict[str, Any] | None = ...) -> str"
      },
      {
        "line": 509,
        "type": "error",
        "message": "Signature of \"get_audit_trail\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 509,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 509,
        "type": "note",
        "message": "def get_audit_trail(self, user_id: str | None = ..., patient_id: str | None = ..., event_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., limit: int | None = ..., offset: int | None = ...) -> list[dict[str, Any]]"
      },
      {
        "line": 509,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 509,
        "type": "note",
        "message": "def get_audit_trail(self, filters: dict[str, Any] | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., offset: int = ...) -> list[dict[str, Any]]"
      },
      {
        "line": 544,
        "type": "error",
        "message": "Cannot instantiate abstract class \"DummyAuditLogger\" with abstract attributes \"log_auth_event\" and \"log_system_event\"  [abstract]"
      },
      {
        "line": 544,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"DummyAuditLogger\", variable has type \"AuditLogger\")  [assignment]"
      }
    ],
    "app/infrastructure/ml/pat/service.py": [
      {
        "line": 83,
        "type": "error",
        "message": "\"Settings\" has no attribute \"ml\"  [attr-defined]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "\"Settings\" has no attribute \"ml\"  [attr-defined]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "\"Settings\" has no attribute \"ml\"  [attr-defined]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "\"None\" not callable  [misc]"
      },
      {
        "line": 294,
        "type": "error",
        "message": "Need type annotation for \"results\"  [var-annotated]"
      }
    ],
    "app/infrastructure/ml/pat/repository.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Module \"app.core.exceptions.ml_exceptions\" has no attribute \"RepositoryError\"  [attr-defined]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "\"Settings\" has no attribute \"ml\"  [attr-defined]"
      }
    ],
    "app/infrastructure/logging/audit_logger.py": [
      {
        "line": 30,
        "type": "error",
        "message": "\"Settings\" has no attribute \"DATABASE_AUDIT_ENABLED\"  [attr-defined]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"StreamHandler[TextIO]\", variable has type \"FileHandler\")  [assignment]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 142,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 142,
        "type": "note",
        "message": "def log_phi_access(self, actor_id: str, patient_id: str | None = ..., resource_id: str | None = ..., data_accessed: str | None = ..., resource_type: str | None = ..., access_reason: str | None = ..., action: str | None = ..., ip_address: str | None = ..., details: str | None = ..., metadata: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 142,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 142,
        "type": "note",
        "message": "@classmethod"
      },
      {
        "line": 142,
        "type": "note",
        "message": "def log_phi_access(cls, user_id: str, patient_id: str, action: str, details: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "def log_security_event(self, event_type: str, description: str = ..., user_id: str | None = ..., actor_id: str | None = ..., severity: AuditSeverity = ..., details: str | None = ..., status: str | None = ..., metadata: dict[str, Any] | None = ..., ip_address: str | None = ...) -> None"
      },
      {
        "line": 169,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 169,
        "type": "note",
        "message": "@classmethod"
      },
      {
        "line": 169,
        "type": "note",
        "message": "def log_security_event(cls, event_type: str, user_id: str | None = ..., details: dict[str, Any] | None = ...) -> None"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      },
      {
        "line": 169,
        "type": "note",
        "message": "\"log_security_event\" of \"AuditLogger\" defined here"
      }
    ],
    "app/infrastructure/factories/enhanced_mock_digital_twin_factory.py": [
      {
        "line": 167,
        "type": "error",
        "message": "Signature of \"predict_treatment_response\" incompatible with supertype \"EnhancedXGBoostService\"  [override]"
      },
      {
        "line": 167,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 167,
        "type": "note",
        "message": "def predict_treatment_response(self, patient_id: UUID, brain_region: BrainRegion, neurotransmitter: Neurotransmitter, treatment_effect: float, baseline_data: dict[str, float] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 167,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 167,
        "type": "note",
        "message": "def predict_treatment_response(self, *args: Any, **kwargs: Any) -> Coroutine[Any, Any, dict[Any, Any]]"
      }
    ],
    "app/domain/services/clinical_rule_engine.py": [
      {
        "line": 52,
        "type": "error",
        "message": "Incompatible default for argument \"provider_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 52,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 52,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 263,
        "type": "error",
        "message": "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 263,
        "type": "error",
        "message": "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"int | None\"  [arg-type]"
      },
      {
        "line": 322,
        "type": "error",
        "message": "Argument 1 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"list[RuleCondition]\"; expected \"list[dict[Any, Any]]\"  [arg-type]"
      },
      {
        "line": 322,
        "type": "error",
        "message": "Argument 2 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"str | LogicalOperator | None\"; expected \"LogicalOperator | None\"  [arg-type]"
      },
      {
        "line": 358,
        "type": "error",
        "message": "\"BiometricRule\" has no attribute \"updated_at\"  [attr-defined]"
      },
      {
        "line": 385,
        "type": "error",
        "message": "Need type annotation for \"created_rules\" (hint: \"created_rules: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 474,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 475,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 476,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 477,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 478,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/infrastructure/security/encryption/base_encryption_service.py": [
      {
        "line": 50,
        "type": "error",
        "message": "Incompatible default for argument \"key\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 50,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 50,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Incompatible default for argument \"key\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 66,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 66,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Incompatible return value type (got \"str | bytes | None\", expected \"str\")  [return-value]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "Module has no attribute \"binascii\"  [attr-defined]"
      },
      {
        "line": 468,
        "type": "error",
        "message": "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 545,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[<nothing>]\", target has type \"dict[str, Any] | str | None\")  [assignment]"
      },
      {
        "line": 552,
        "type": "error",
        "message": "Item \"dict[str, Any]\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 552,
        "type": "error",
        "message": "Item \"str\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 552,
        "type": "error",
        "message": "Item \"None\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 554,
        "type": "error",
        "message": "Item \"dict[str, Any]\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 554,
        "type": "error",
        "message": "Item \"str\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 554,
        "type": "error",
        "message": "Item \"None\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]"
      },
      {
        "line": 559,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, Any] | str | Any | None]\", target has type \"dict[str, Any] | str | None\")  [assignment]"
      },
      {
        "line": 602,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any] | None\"  [no-any-return]"
      },
      {
        "line": 606,
        "type": "error",
        "message": "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 620,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[Any, Any] | str | Any | None]\", target has type \"dict[Any, Any] | None\")  [assignment]"
      },
      {
        "line": 630,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any] | None\")  [assignment]"
      }
    ],
    "app/core/utils/logging.py": [
      {
        "line": 214,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "Argument 3 to \"_create_logged_method\" has incompatible type \"str\"; expected \"int\"  [arg-type]"
      }
    ],
    "app/infrastructure/security/encryption/ml_encryption_service.py": [
      {
        "line": 58,
        "type": "error",
        "message": "\"Logger\" has no attribute \"initialized_for_ml\"  [attr-defined]"
      },
      {
        "line": 161,
        "type": "error",
        "message": "Incompatible return value type (got \"str | bytes | None\", expected \"bytes | None\")  [return-value]"
      },
      {
        "line": 285,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, str | None]\", expected \"dict[str, str]\")  [return-value]"
      },
      {
        "line": 365,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", target has type \"dict[Any, str | None]\")  [assignment]"
      },
      {
        "line": 389,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, str | None]\")  [assignment]"
      },
      {
        "line": 405,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", target has type \"dict[Any, str | None]\")  [assignment]"
      },
      {
        "line": 478,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ndarray[Any, dtype[Any]]\", target has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 485,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 488,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 492,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 668,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 678,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any] | str | None\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 681,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 713,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 731,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 735,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 738,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", target has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 778,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]"
      },
      {
        "line": 814,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[float]\"  [no-any-return]"
      },
      {
        "line": 830,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[float]\"  [no-any-return]"
      },
      {
        "line": 927,
        "type": "error",
        "message": "Argument 1 to \"sha256\" has incompatible type \"bytes | None\"; expected \"Buffer\"  [arg-type]"
      },
      {
        "line": 931,
        "type": "error",
        "message": "Incompatible return value type (got \"tuple[bytes | None, Any]\", expected \"tuple[bytes, dict[str, Any]]\")  [return-value]"
      },
      {
        "line": 961,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]"
      }
    ],
    "app/infrastructure/security/encryption/field_encryptor.py": [
      {
        "line": 326,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Any] | list[Any]\", expected \"dict[str, Any]\")  [return-value]"
      },
      {
        "line": 340,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Any] | list[Any]\", expected \"dict[str, Any]\")  [return-value]"
      }
    ],
    "app/core/utils/data_transformation.py": [
      {
        "line": 70,
        "type": "error",
        "message": "Too many arguments for \"generate_hash\" of \"BaseEncryptionService\"  [call-arg]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Unsupported right operand type for in (\"str | datetime\")  [operator]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | datetime\", target has type \"str\")  [assignment]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "Returning Any from function declared to return \"ndarray[Any, Any]\"  [no-any-return]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Returning Any from function declared to return \"ndarray[Any, Any]\"  [no-any-return]"
      },
      {
        "line": 432,
        "type": "error",
        "message": "Need type annotation for \"y\"  [var-annotated]"
      },
      {
        "line": 442,
        "type": "error",
        "message": "Item \"None\" of \"list[Any] | None\" has no attribute \"append\"  [union-attr]"
      }
    ],
    "app/infrastructure/security/encryption/__init__.py": [
      {
        "line": 58,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 83,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 181,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[str, Any] | str | None\", expected \"dict[str, Any] | str\")  [return-value]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | str\"  [no-any-return]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Name \"encrypt_value\" is not defined  [name-defined]"
      },
      {
        "line": 199,
        "type": "error",
        "message": "Incompatible return value type (got \"dict[Any, Any] | None\", expected \"dict[str, Any] | str\")  [return-value]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any] | str\"  [no-any-return]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "Name \"decrypt_value\" is not defined  [name-defined]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Name \"encrypt_value\" is not defined  [name-defined]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Name \"decrypt_value\" is not defined  [name-defined]"
      }
    ],
    "app/core/services/ml/xgboost/aws_compatibility.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Argument \"aws_service_factory\" to \"AWSXGBoostService\" has incompatible type \"AWSServiceFactory\"; expected \"AWSServiceFactoryInterface | None\"  [arg-type]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Name \"AWSXGBoostService\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]"
      },
      {
        "line": 44,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 44,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 78,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 78,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 78,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 78,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 78,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 78,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 78,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 78,
        "type": "note",
        "message": "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 121,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 121,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 129,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 129,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 129,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 129,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 158,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 158,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 158,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 158,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 158,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 158,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 158,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 158,
        "type": "note",
        "message": "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 195,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 195,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 218,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 218,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 218,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 218,
        "type": "note",
        "message": "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 232,
        "type": "error",
        "message": "Cannot determine type of \"_impl\"  [has-type]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]"
      },
      {
        "line": 254,
        "type": "error",
        "message": "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]"
      }
    ],
    "app/core/services/ml/xgboost/__init__.py": [
      {
        "line": 45,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Name \"PrivacyLevel\" is not defined  [name-defined]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Name \"PrivacyLevel\" is not defined  [name-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Unexpected keyword argument \"implementation_name\" for \"get_xgboost_service\"  [call-arg]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/tests/utils/quantum_db_fix.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 35,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.passwords\"  [import-not-found]"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.database.base\"  [import-not-found]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "\"Settings\" has no attribute \"SQLALCHEMY_TEST_DATABASE_URI\"  [attr-defined]"
      }
    ],
    "app/tests/utils/debug_db.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/tests/unit/core/services/ml/pat/test_pat_factory.py": [
      {
        "line": 91,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]"
      }
    ],
    "app/tests/security/utils/test_mocks.py": [
      {
        "line": 278,
        "type": "error",
        "message": "Need type annotation for \"findings\"  [var-annotated]"
      },
      {
        "line": 437,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", variable has type \"dict[Any, Any]\")  [assignment]"
      }
    ],
    "app/tests/security/utils/test_address_helper.py": [
      {
        "line": 55,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 55,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 55,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 55,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 56,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 56,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 56,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 70,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 70,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 70,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 71,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 71,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 71,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      }
    ],
    "app/tests/mocks/mock_encryption_service.py": [
      {
        "line": 64,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MockCipher\", variable has type \"Fernet\")  [assignment]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Argument 1 of \"encrypt\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"str | bytes | None\"  [override]"
      },
      {
        "line": 68,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 68,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Argument 1 of \"decrypt\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"str | bytes | None\"  [override]"
      },
      {
        "line": 97,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 97,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Argument 2 of \"encrypt_dict\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"bool\"  [override]"
      },
      {
        "line": 142,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 142,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 181,
        "type": "error",
        "message": "Signature of \"decrypt_dict\" incompatible with supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 181,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 181,
        "type": "note",
        "message": "def decrypt_dict(self, encrypted_data: dict[str, Any] | str | None) -> dict[Any, Any] | None"
      },
      {
        "line": 181,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 181,
        "type": "note",
        "message": "def decrypt_dict(self, data: dict[str, Any], decrypt_keys: list[str] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "Argument 1 to \"startswith\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | tuple[Buffer, ...]\"  [arg-type]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "Argument 1 to \"endswith\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | tuple[Buffer, ...]\"  [arg-type]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Return type \"str\" of \"generate_hash\" incompatible with return type \"tuple[str, str]\" in supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "Signature of \"verify_hash\" incompatible with supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 240,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 240,
        "type": "note",
        "message": "def verify_hash(self, data: str, salt_hex: str, hash_to_verify_hex: str) -> bool"
      },
      {
        "line": 240,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 240,
        "type": "note",
        "message": "def verify_hash(self, data: str, hash_value: str) -> bool"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Return type \"str\" of \"generate_hmac\" incompatible with return type \"tuple[str, str]\" in supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Signature of \"verify_hmac\" incompatible with supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 248,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 248,
        "type": "note",
        "message": "def verify_hmac(self, data: str, salt_hex: str, key_hex_to_verify: str) -> bool"
      },
      {
        "line": 248,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 248,
        "type": "note",
        "message": "def verify_hmac(self, data: str, hmac_value: str) -> bool"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Return type \"str | None\" of \"decrypt_string\" incompatible with return type \"str\" in supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Signature of \"encrypt_string\" incompatible with supertype \"BaseEncryptionService\"  [override]"
      },
      {
        "line": 278,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 278,
        "type": "note",
        "message": "def encrypt_string(self, value: str | Any, is_phi: bool = ...) -> str | None"
      },
      {
        "line": 278,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 278,
        "type": "note",
        "message": "def encrypt_string(self, value: str) -> str"
      }
    ],
    "app/infrastructure/security/phi/code_analyzer.py": [
      {
        "line": 492,
        "type": "error",
        "message": "\"type[PHICodeAnalyzer]\" has no attribute \"PHI_MODEL_NAMES\"  [attr-defined]"
      },
      {
        "line": 568,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 672,
        "type": "error",
        "message": "Argument 1 to \"_check_config_dict\" of \"PHICodeAnalyzer\" has incompatible type \"dict[Any, Any] | list[Any]\"; expected \"dict[Any, Any]\"  [arg-type]"
      },
      {
        "line": 727,
        "type": "error",
        "message": "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 1029,
        "type": "error",
        "message": "Need type annotation for \"config_files\" (hint: \"config_files: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/repositories/sqlalchemy/biometric_alert_repository.py": [
      {
        "line": 10,
        "type": "error",
        "message": "Module \"app.domain.entities.biometric_alert\" does not explicitly export attribute \"AlertPriority\"  [attr-defined]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.biometric_alert.BiometricAlert]\" of \"save\" incompatible with return type \"Coroutine[Any, Any, app.domain.services.biometric_event_processor.BiometricAlert]\" in supertype \"BiometricAlertRepository\"  [override]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Argument 1 of \"save\" is incompatible with supertype \"BiometricAlertRepository\"; supertype defines the argument type as \"BiometricAlert\"  [override]"
      },
      {
        "line": 29,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 29,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 37,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.domain.entities.biometric_alert.BiometricAlert | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.domain.services.biometric_event_processor.BiometricAlert | None]\" in supertype \"BiometricAlertRepository\"  [override]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[app.domain.entities.biometric_alert.BiometricAlert]]\" of \"get_by_patient_id\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.services.biometric_event_processor.BiometricAlert]]\" in supertype \"BiometricAlertRepository\"  [override]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[app.domain.entities.biometric_alert.BiometricAlert]]\" of \"get_unacknowledged_alerts\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.services.biometric_event_processor.BiometricAlert]]\" in supertype \"BiometricAlertRepository\"  [override]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Argument 1 of \"get_unacknowledged_alerts\" is incompatible with supertype \"BiometricAlertRepository\"; supertype defines the argument type as \"AlertPriority | None\"  [override]"
      },
      {
        "line": 61,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 61,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      }
    ],
    "app/infrastructure/repositories/memory/biometric_alert_template_repository_mock.py": [
      {
        "line": 25,
        "type": "error",
        "message": "Incompatible default for argument \"session\" (default has type \"None\", argument has type \"AsyncSession\")  [assignment]"
      },
      {
        "line": 25,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 25,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/session.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Argument 1 to \"create_async_engine\" has incompatible type \"str | None\"; expected \"str | URL\"  [arg-type]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/unit_of_work/async_unit_of_work.py": [
      {
        "line": 204,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IUserRepository\"  [call-arg]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "Returning Any from function declared to return \"IUserRepository\"  [no-any-return]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IPatientRepository\"  [call-arg]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Returning Any from function declared to return \"IPatientRepository\"  [no-any-return]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IDigitalTwinRepository\"  [call-arg]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Returning Any from function declared to return \"IDigitalTwinRepository\"  [no-any-return]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IBiometricRuleRepository\"  [call-arg]"
      },
      {
        "line": 286,
        "type": "error",
        "message": "Returning Any from function declared to return \"IBiometricRuleRepository\"  [no-any-return]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IBiometricAlertRepository\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Returning Any from function declared to return \"IBiometricAlertRepository\"  [no-any-return]"
      },
      {
        "line": 330,
        "type": "error",
        "message": "Unexpected keyword argument \"uow_session\" for \"IBiometricTwinRepository\"  [call-arg]"
      },
      {
        "line": 338,
        "type": "error",
        "message": "Returning Any from function declared to return \"IBiometricTwinRepository\"  [no-any-return]"
      }
    ],
    ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/builtins.pyi": [
      {
        "line": 99,
        "type": "note",
        "message": "\"IUserRepository\" defined here"
      },
      {
        "line": 99,
        "type": "note",
        "message": "\"IPatientRepository\" defined here"
      },
      {
        "line": 99,
        "type": "note",
        "message": "\"IDigitalTwinRepository\" defined here"
      },
      {
        "line": 99,
        "type": "note",
        "message": "\"IBiometricRuleRepository\" defined here"
      },
      {
        "line": 99,
        "type": "note",
        "message": "\"IBiometricAlertRepository\" defined here"
      },
      {
        "line": 99,
        "type": "note",
        "message": "\"IBiometricTwinRepository\" defined here"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/types/encrypted_types.py": [
      {
        "line": 51,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible default for argument \"target_cls\" (default has type \"None\", argument has type \"type[PydanticModel]\")  [assignment]"
      },
      {
        "line": 86,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 86,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Argument 1 of \"process_result_value\" is incompatible with supertype \"TypeDecorator\"; supertype defines the argument type as \"Any | None\"  [override]"
      },
      {
        "line": 246,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 246,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 348,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 398,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 446,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 515,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      },
      {
        "line": 551,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any] | list[Any]\"  [no-any-return]"
      },
      {
        "line": 556,
        "type": "error",
        "message": "Argument 1 to \"strip\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | None\"  [arg-type]"
      },
      {
        "line": 557,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[Any, Any] | list[Any]\"  [no-any-return]"
      },
      {
        "line": 587,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"str\")  [return-value]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/appointment_repository.py": [
      {
        "line": 52,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "\"AsyncSession\" has no attribute \"_last_executed_query\"  [attr-defined]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "\"AsyncSession\" has no attribute \"_last_executed_query\"  [attr-defined]"
      },
      {
        "line": 117,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 119,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment | None\"  [no-any-return]"
      },
      {
        "line": 126,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 126,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 129,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 130,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/base.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Variable \"app.infrastructure.persistence.sqlalchemy.models.base.Base\" is not valid as a type  [valid-type]"
      },
      {
        "line": 39,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Invalid base class \"Base\"  [misc]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Name \"TimestampMixin\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Name \"AuditMixin\" already defined (possibly by an import)  [no-redef]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/config/base.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Variable \"app.infrastructure.persistence.sqlalchemy.config.base.Base\" is not valid as a type  [valid-type]"
      },
      {
        "line": 36,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Invalid base class \"Base\"  [misc]"
      }
    ],
    "app/infrastructure/ml/symptom_forecasting/service.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.exceptions.ml_exceptions\"  [import-not-found]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Unexpected keyword argument \"audit_action\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Unexpected keyword argument \"audit_details\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Unexpected keyword argument \"audit_action\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_id\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"resource_type\" for \"info\" of \"Logger\"  [call-arg]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Unexpected keyword argument \"audit_action\" for \"info\" of \"Logger\"  [call-arg]"
      }
    ],
    ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/logging/__init__.pyi": [
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      },
      {
        "line": 131,
        "type": "note",
        "message": "\"info\" of \"Logger\" defined here"
      }
    ],
    "app/infrastructure/ml/phi_detection/service.py": [
      {
        "line": 234,
        "type": "error",
        "message": "Need type annotation for \"results\" (hint: \"results: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/ml/phi/mock.py": [
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Signature of \"detect_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 94,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 94,
        "type": "note",
        "message": "def detect_phi(self, text: str) -> list[dict[str, Any]]"
      },
      {
        "line": 94,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 94,
        "type": "note",
        "message": "def detect_phi(self, text: str, detection_level: str | None = ..., **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 161,
        "type": "error",
        "message": "Signature of \"redact_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 161,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 161,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ...) -> str"
      },
      {
        "line": 161,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 161,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ..., redaction_marker: str | None = ..., detection_level: str | None = ..., **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/phi/aws_comprehend_medical.py": [
      {
        "line": 74,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Item \"None\" of \"ComprehendMedicalServiceInterface | None\" has no attribute \"detect_phi\"  [union-attr]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Need type annotation for \"entities_list\" (hint: \"entities_list: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/ml/digital_twin/mock.py": [
      {
        "line": 89,
        "type": "error",
        "message": "Signature of \"create_digital_twin\" incompatible with supertype \"DigitalTwinInterface\"  [override]"
      },
      {
        "line": 89,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 89,
        "type": "note",
        "message": "def create_digital_twin(self, patient_id: str, initial_data: dict[str, Any]) -> dict[str, Any]"
      },
      {
        "line": 89,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 89,
        "type": "note",
        "message": "def create_digital_twin(self, patient_data: dict[str, Any]) -> dict[str, Any]"
      },
      {
        "line": 175,
        "type": "error",
        "message": "Incompatible default for argument \"context\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 175,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 175,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 493,
        "type": "error",
        "message": "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]"
      },
      {
        "line": 493,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 493,
        "type": "note",
        "message": "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]"
      },
      {
        "line": 493,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 493,
        "type": "note",
        "message": "def get_insights(self, twin_id: str, insight_type: str = ..., time_period: str = ..., insight_types: list[str] = ...) -> dict[str, Any]"
      },
      {
        "line": 496,
        "type": "error",
        "message": "Incompatible default for argument \"insight_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 496,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 496,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 498,
        "type": "error",
        "message": "Incompatible default for argument \"insight_types\" (default has type \"None\", argument has type \"list[str]\")  [assignment]"
      },
      {
        "line": 498,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 498,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/infrastructure/database/session.py": [
      {
        "line": 17,
        "type": "error",
        "message": "\"sessionmaker\" expects no type arguments, but 1 given  [type-arg]"
      }
    ],
    "app/domain/value_objects/contact_info.py": [
      {
        "line": 277,
        "type": "error",
        "message": "Argument \"email\" to \"ContactInfo\" has incompatible type \"str | bytes | None\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Argument \"phone\" to \"ContactInfo\" has incompatible type \"str | bytes | None\"; expected \"str | None\"  [arg-type]"
      }
    ],
    "app/domain/services/biometric_alert_notification_service.py": [
      {
        "line": 69,
        "type": "error",
        "message": "Argument 1 to \"_get_channels_for_priority\" of \"BiometricAlertNotificationService\" has incompatible type \"Any | None\"; expected \"AlertPriority\"  [arg-type]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 259,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      }
    ],
    "app/domain/services/biometric_alert_audit_service.py": [
      {
        "line": 115,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]"
      },
      {
        "line": 189,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]"
      },
      {
        "line": 192,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      }
    ],
    "app/domain/entities/patient.py": [
      {
        "line": 200,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Logger\", variable has type Module)  [assignment]"
      },
      {
        "line": 326,
        "type": "error",
        "message": "Incompatible default for argument \"update\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]"
      },
      {
        "line": 326,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 326,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 454,
        "type": "error",
        "message": "\"type[Patient]\" has no attribute \"contact_info\"  [attr-defined]"
      },
      {
        "line": 367,
        "type": "note",
        "message": "\"model_dump\" of \"Patient\" defined here"
      },
      {
        "line": 367,
        "type": "note",
        "message": "\"model_dump\" of \"Patient\" defined here"
      }
    ],
    "app/demo/enhanced_digital_twin_demo.py": [
      {
        "line": 116,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"brain_regions\"  [attr-defined]"
      },
      {
        "line": 119,
        "type": "error",
        "message": "Item \"None\" of \"TemporalKnowledgeGraph | None\" has no attribute \"nodes\"  [union-attr]"
      },
      {
        "line": 119,
        "type": "error",
        "message": "Item \"None\" of \"TemporalKnowledgeGraph | None\" has no attribute \"edges\"  [union-attr]"
      },
      {
        "line": 121,
        "type": "error",
        "message": "Item \"None\" of \"BayesianBeliefNetwork | None\" has no attribute \"variables\"  [union-attr]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "\"DigitalTwinState\" has no attribute \"clinical_insights\"  [attr-defined]"
      }
    ],
    "app/core/services/ml/providers/openai.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Need type annotation for \"_system_prompts\" (hint: \"_system_prompts: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 134,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      }
    ],
    "app/core/services/ml/providers/mock_pat.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 224,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      }
    ],
    "app/core/services/ml/providers/mock.py": [
      {
        "line": 327,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 574,
        "type": "error",
        "message": "Incompatible default for argument \"model\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 574,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 574,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      }
    ],
    "app/core/services/ml/providers/bedrock_pat.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"list_foundation_models\"  [union-attr]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"head_bucket\"  [union-attr]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"describe_table\"  [union-attr]"
      },
      {
        "line": 148,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"put_object\"  [union-attr]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"invoke_model\"  [union-attr]"
      },
      {
        "line": 259,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 263,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"object\")  [index]"
      },
      {
        "line": 271,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"put_item\"  [union-attr]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"query\"  [union-attr]"
      },
      {
        "line": 329,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 373,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"query\"  [union-attr]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]"
      },
      {
        "line": 450,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"invoke_model\"  [union-attr]"
      },
      {
        "line": 510,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"invoke_model\"  [union-attr]"
      },
      {
        "line": 571,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"invoke_model\"  [union-attr]"
      }
    ],
    "app/core/services/ml/providers/aws_bedrock.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Module \"app.infrastructure.ml.mentallama.service\" has no attribute \"MentaLLaMA\"; maybe \"MockMentaLLaMA\"?  [attr-defined]"
      },
      {
        "line": 356,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 392,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 403,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 405,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 407,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      }
    ],
    "app/core/services/ml/phi/phi.py": [
      {
        "line": 38,
        "type": "error",
        "message": "Need type annotation for \"_patterns\" (hint: \"_patterns: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 174,
        "type": "error",
        "message": "Need type annotation for \"_compiled_patterns\" (hint: \"_compiled_patterns: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Signature of \"detect_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 198,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 198,
        "type": "note",
        "message": "def detect_phi(self, text: str) -> list[dict[str, Any]]"
      },
      {
        "line": 198,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 198,
        "type": "note",
        "message": "def detect_phi(self, text: str, detection_level: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "Need type annotation for \"positions_seen\" (hint: \"positions_seen: Set[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 265,
        "type": "error",
        "message": "Signature of \"redact_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 265,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 265,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ...) -> str"
      },
      {
        "line": 265,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 265,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ..., detection_level: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 369,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 372,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 412,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 430,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 432,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 447,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 467,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 476,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 483,
        "type": "error",
        "message": "Signature of \"detect_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 483,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 483,
        "type": "note",
        "message": "def detect_phi(self, text: str) -> list[dict[str, Any]]"
      },
      {
        "line": 483,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 483,
        "type": "note",
        "message": "def detect_phi(self, text: str, detection_level: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 483,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 483,
        "type": "note",
        "message": "def detect_phi(self, text: str) -> list[dict[str, Any]]"
      },
      {
        "line": 483,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 483,
        "type": "note",
        "message": "def detect_phi(self, text: str, detection_level: str | None = ...) -> dict[str, Any]"
      },
      {
        "line": 521,
        "type": "error",
        "message": "\"None\" has no attribute \"get\"  [attr-defined]"
      },
      {
        "line": 523,
        "type": "error",
        "message": "Cannot determine type of \"_client\"  [has-type]"
      },
      {
        "line": 553,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 613,
        "type": "error",
        "message": "Signature of \"redact_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]"
      },
      {
        "line": 613,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 613,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ...) -> str"
      },
      {
        "line": 613,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 613,
        "type": "note",
        "message": "def redact_phi(self, text: str, replacement: str = ..., detection_level: str | None = ...) -> dict[str, Any]"
      }
    ],
    "app/core/services/ml/digital_twin/mock.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Need type annotation for \"_patient_sessions\" (hint: \"_patient_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 59,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 370,
        "type": "error",
        "message": "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]"
      },
      {
        "line": 370,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 370,
        "type": "note",
        "message": "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]"
      },
      {
        "line": 370,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 370,
        "type": "note",
        "message": "def get_insights(self, patient_id: str, insight_type: str | None = ..., time_period: str | None = ..., **kwargs: Any) -> dict[str, Any]"
      },
      {
        "line": 510,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 511,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 518,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 579,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 580,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 588,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 648,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 649,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 657,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 660,
        "type": "error",
        "message": "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]"
      },
      {
        "line": 700,
        "type": "error",
        "message": "Unsupported target for indexed assignment (\"Collection[str]\")  [index]"
      },
      {
        "line": 715,
        "type": "error",
        "message": "Generator has incompatible item type \"int\"; expected \"bool\"  [misc]"
      },
      {
        "line": 715,
        "type": "error",
        "message": "\"Collection[str]\" has no attribute \"items\"  [attr-defined]"
      }
    ],
    "app/core/dependencies/database.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int\", target has type \"bool\")  [assignment]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"int\", target has type \"bool\")  [assignment]"
      }
    ],
    "app/application/use_cases/analytics/retrieve_aggregated_analytics.py": [
      {
        "line": 87,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[AnalyticsAggregate]\"  [no-any-return]"
      },
      {
        "line": 119,
        "type": "error",
        "message": "Unexpected keyword argument \"ttl\" for \"set\" of \"CacheService\"  [call-arg]"
      }
    ],
    "app/application/interfaces/services/cache_service.py": [
      {
        "line": 36,
        "type": "note",
        "message": "\"set\" of \"CacheService\" defined here"
      },
      {
        "line": 77,
        "type": "note",
        "message": "\"increment\" of \"CacheService\" defined here"
      }
    ],
    "app/application/services/biometric_alert_service.py": [
      {
        "line": 32,
        "type": "error",
        "message": "Signature of \"get_alerts\" incompatible with supertype \"AlertServiceInterface\"  [override]"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | UUID | None = ..., provider_id: str | UUID | None = ..., alert_type: str | None = ..., severity: AlertSeverity | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]"
      },
      {
        "line": 32,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 32,
        "type": "note",
        "message": "def get_alerts(self, patient_id: str | None = ..., alert_type: str | None = ..., severity: AlertPriority | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[Alert]]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Argument 1 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 112,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 112,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Argument 4 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID | None\"  [override]"
      },
      {
        "line": 115,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 115,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Argument 1 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 143,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 143,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 145,
        "type": "error",
        "message": "Argument 3 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"AlertSeverity\"  [override]"
      },
      {
        "line": 145,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 145,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Argument 5 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]"
      },
      {
        "line": 147,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 147,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Incompatible default for argument \"source_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 147,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 147,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 148,
        "type": "error",
        "message": "Argument 6 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]"
      },
      {
        "line": 148,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 148,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 148,
        "type": "error",
        "message": "Incompatible default for argument \"metadata\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 148,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 148,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Argument 1 of \"get_alert_summary\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]"
      },
      {
        "line": 180,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 180,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 213,
        "type": "error",
        "message": "\"type[AlertType]\" has no attribute \"MEDICATION\"  [attr-defined]"
      }
    ],
    "app/tests/utils/repository_factory.py": [
      {
        "line": 77,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 130,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 134,
        "type": "error",
        "message": "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Property \"users\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockUserRepository\" with abstract attributes \"count\", \"create\", \"get_by_email\" and \"get_by_username\"  [abstract]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Property \"patients\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockPatientRepository\" with abstract attributes \"find_by_criteria\" and \"get_all\"  [abstract]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Property \"digital_twins\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockDigitalTwinRepository\" with abstract attributes \"create\", \"create_session\", ... and \"update_twin_state\" (3 methods suppressed)  [abstract]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Property \"biometric_rules\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"get_by_patient_id\"  [abstract]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Property \"biometric_alerts\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricAlertRepository\" with abstract attributes \"create\" and \"get_by_patient_id\"  [abstract]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "Property \"biometric_twins\" defined in \"IUnitOfWork\" is read-only  [misc]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricTwinRepository\" with abstract attributes \"add_data_point\", \"create\", \"get_by_patient_id\", \"get_data_history\" and \"get_latest_data\"  [abstract]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost_prediction.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.aws_service\" does not explicitly export attribute \"PrivacyLevel\"  [attr-defined]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost_core.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.aws_service\" does not explicitly export attribute \"PrivacyLevel\"  [attr-defined]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 51,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Cannot determine type of \"_privacy_level\"  [has-type]"
      },
      {
        "line": 57,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 151,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "Name \"test_initialization_missing_region\" already defined on line 80  [no-redef]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Name \"test_initialization_missing_endpoint_name\" already defined on line 108  [no-redef]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.aws_service\" does not explicitly export attribute \"PrivacyLevel\"  [attr-defined]"
      },
      {
        "line": 51,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Cannot determine type of \"_dynamodb_table_name\"  [has-type]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Cannot determine type of \"_audit_table_name\"  [has-type]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Cannot determine type of \"_model_mappings\"  [has-type]"
      },
      {
        "line": 57,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Cannot determine type of \"_region_name\"  [has-type]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Cannot determine type of \"_endpoint_prefix\"  [has-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Cannot determine type of \"_bucket_name\"  [has-type]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Cannot determine type of \"_initialized\"  [has-type]"
      }
    ],
    "app/tests/unit/services/ml/xgboost_service/conftest.py": [
      {
        "line": 26,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"type[MockYamlModule]\", target has type Module)  [assignment]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost.aws_service\" does not explicitly export attribute \"PrivacyLevel\"  [attr-defined]"
      }
    ],
    "app/tests/unit/services/ml/pat/test_mock_pat_service.py": [
      {
        "line": 363,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 364,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 386,
        "type": "error",
        "message": "Invalid index type \"int\" for \"list[dict[str, Any]] | dict[str, Any]\"; expected type \"str\"  [index]"
      },
      {
        "line": 556,
        "type": "error",
        "message": "Name \"test_integration_validation_error_empty_patient_id\" already defined on line 494  [no-redef]"
      },
      {
        "line": 567,
        "type": "error",
        "message": "Name \"test_integration_validation_error_empty_analysis_id\" already defined on line 505  [no-redef]"
      },
      {
        "line": 578,
        "type": "error",
        "message": "Name \"test_integration_validation_error_empty_profile_id\" already defined on line 516  [no-redef]"
      }
    ],
    "app/tests/unit/services/ml/pat/test_bedrock_pat.py": [
      {
        "line": 361,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"_comprehend_medical_service\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/test_appointment_migrated.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Argument \"id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 29,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "Argument \"appointment_type\" to \"Appointment\" has incompatible type \"str\"; expected \"AppointmentType\"  [arg-type]"
      },
      {
        "line": 33,
        "type": "error",
        "message": "Argument \"status\" to \"Appointment\" has incompatible type \"str\"; expected \"AppointmentStatus\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/test_appointment.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Missing positional argument \"patient_id\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 166,
        "type": "error",
        "message": "Missing positional argument \"provider_id\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 175,
        "type": "error",
        "message": "Missing positional argument \"start_time\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Missing positional argument \"end_time\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Missing positional argument \"appointment_type\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 195,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 354,
        "type": "error",
        "message": "Argument 1 to \"UUID\" has incompatible type \"UUID\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 366,
        "type": "error",
        "message": "Argument 1 to \"UUID\" has incompatible type \"UUID\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 378,
        "type": "error",
        "message": "Argument 1 to \"UUID\" has incompatible type \"UUID\"; expected \"str | None\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_password_handler.py": [
      {
        "line": 74,
        "type": "error",
        "message": "Argument 1 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Argument 2 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Argument 1 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Argument 2 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_mfa_service.py": [
      {
        "line": 150,
        "type": "error",
        "message": "Argument 3 to \"verify_code\" of \"MFAService\" has incompatible type \"float\"; expected \"int\"  [arg-type]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Argument 3 to \"verify_code\" of \"MFAService\" has incompatible type \"float\"; expected \"int\"  [arg-type]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Argument 3 to \"verify_code\" of \"MFAService\" has incompatible type \"float\"; expected \"int\"  [arg-type]"
      },
      {
        "line": 233,
        "type": "error",
        "message": "Argument 1 to \"create_strategy\" of \"MFAStrategyFactory\" has incompatible type \"str\"; expected \"MFAType\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_encryption_enhanced.py": [
      {
        "line": 164,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 164,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Value of type \"int | Collection[Collection[str]] | None\" is not indexable  [index]"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 179,
        "type": "error",
        "message": "Value of type \"int | Collection[Collection[str]] | None\" is not indexable  [index]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "Value of type \"int | Collection[Collection[str]] | None\" is not indexable  [index]"
      },
      {
        "line": 181,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 181,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 182,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 182,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 187,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 187,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"startswith\"  [union-attr]"
      }
    ],
    "app/tests/unit/infrastructure/security/conftest.py": [
      {
        "line": 33,
        "type": "error",
        "message": "Argument \"SECRET_KEY\" to \"Settings\" has incompatible type \"str\"; expected \"SecretStr\"  [arg-type]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "\"Settings\" has no attribute \"JWT_ISSUER\"  [attr-defined]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "\"Settings\" has no attribute \"JWT_AUDIENCE\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/test_database_enhanced.py": [
      {
        "line": 6,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Variable \"app.tests.unit.infrastructure.persistence.sqlalchemy.test_database_enhanced.TestBase\" is not valid as a type  [valid-type]"
      },
      {
        "line": 13,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 13,
        "type": "error",
        "message": "Invalid base class \"TestBase\"  [misc]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "\"Select\" has no attribute \"filter_by\"  [attr-defined]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "\"Select\" has no attribute \"filter_by\"  [attr-defined]"
      },
      {
        "line": 117,
        "type": "error",
        "message": "\"Select\" has no attribute \"filter_by\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/repositories/test_biometric_alert_repository_infra.py": [
      {
        "line": 476,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"SQLAlchemyBiometricAlertRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 497,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"SQLAlchemyBiometricAlertRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 526,
        "type": "error",
        "message": "Argument 1 to \"get_by_patient_id\" of \"SQLAlchemyBiometricAlertRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/ml/test_phi_detection_infra.py": [
      {
        "line": 46,
        "type": "error",
        "message": "\"PHIDetectionService\" has no attribute \"_original_contains_phi\"  [attr-defined]"
      },
      {
        "line": 47,
        "type": "error",
        "message": "\"PHIDetectionService\" has no attribute \"_original_detect_phi\"  [attr-defined]"
      },
      {
        "line": 48,
        "type": "error",
        "message": "\"PHIDetectionService\" has no attribute \"_original_redact_phi\"  [attr-defined]"
      },
      {
        "line": 49,
        "type": "error",
        "message": "\"PHIDetectionService\" has no attribute \"_original_anonymize_phi\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/ml/biometric_correlation/test_model_service.py": [
      {
        "line": 84,
        "type": "error",
        "message": "\"BiometricCorrelationService\" has no attribute \"model_initialized\"  [attr-defined]"
      },
      {
        "line": 182,
        "type": "error",
        "message": "Need type annotation for \"empty_data\" (hint: \"empty_data: Dict[<type>, <type>] = ...\")  [var-annotated]"
      }
    ],
    "app/tests/unit/infrastructure/ml/biometric_correlation/test_lstm_model.py": [
      {
        "line": 31,
        "type": "error",
        "message": "\"BiometricCorrelationModel\" has no attribute \"_initialize_model\"; maybe \"is_initialized\"?  [attr-defined]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "\"BiometricCorrelationModel\" has no attribute \"_load_model\"  [attr-defined]"
      },
      {
        "line": 35,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MagicMock\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 37,
        "type": "error",
        "message": "\"None\" has no attribute \"predict\"  [attr-defined]"
      }
    ],
    "app/tests/unit/domain/value_objects/test_contact_info.py": [
      {
        "line": 397,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"startswith\"  [union-attr]"
      },
      {
        "line": 399,
        "type": "error",
        "message": "Item \"None\" of \"str | None\" has no attribute \"startswith\"  [union-attr]"
      },
      {
        "line": 472,
        "type": "error",
        "message": "\"dict[Any, Any]\" has no attribute \"email\"  [attr-defined]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "\"dict[Any, Any]\" has no attribute \"phone\"  [attr-defined]"
      },
      {
        "line": 496,
        "type": "error",
        "message": "\"PatientWithDescriptor\" has no attribute \"_contact_info\"; maybe \"contact_info\"?  [attr-defined]"
      },
      {
        "line": 501,
        "type": "error",
        "message": "\"dict[Any, Any]\" has no attribute \"email\"  [attr-defined]"
      },
      {
        "line": 505,
        "type": "error",
        "message": "\"tuple[str, str]\" has no attribute \"email\"  [attr-defined]"
      },
      {
        "line": 506,
        "type": "error",
        "message": "\"tuple[str, str]\" has no attribute \"phone\"  [attr-defined]"
      }
    ],
    "app/tests/unit/domain/entities/test_patient_entity.py": [
      {
        "line": 26,
        "type": "error",
        "message": "\"type[Patient]\" has no attribute \"contact_info\"  [attr-defined]"
      },
      {
        "line": 136,
        "type": "error",
        "message": "\"Patient\" has no attribute \"contact_info\"; maybe \"_contact_info\" or \"update_contact_info\"?  [attr-defined]"
      }
    ],
    "app/tests/unit/domain/entities/test_patient_contact_info.py": [
      {
        "line": 21,
        "type": "error",
        "message": "\"type[Patient]\" has no attribute \"contact_info\"  [attr-defined]"
      }
    ],
    "app/tests/unit/domain/entities/test_biometric_twin.py": [
      {
        "line": 198,
        "type": "error",
        "message": "Item \"None\" of \"PhysiologicalRange | None\" has no attribute \"min\"  [union-attr]"
      }
    ],
    "app/tests/unit/domain/entities/test_appointment.py": [
      {
        "line": 72,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Missing positional argument \"patient_id\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Missing positional argument \"provider_id\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "Missing positional argument \"start_time\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Missing positional argument \"end_time\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 126,
        "type": "error",
        "message": "Missing positional argument \"appointment_type\" in call to \"Appointment\"  [call-arg]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 156,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      },
      {
        "line": 227,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]"
      }
    ],
    "app/tests/unit/domain/entities/digital_twin/test_digital_twin_entity.py": [
      {
        "line": 110,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 206,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 225,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 248,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      }
    ],
    "app/tests/unit/core/test_standalone_biometric_processor.py": [
      {
        "line": 114,
        "type": "error",
        "message": "Argument \"value\" to \"BiometricDataPoint\" has incompatible type \"Any | None\"; expected \"float | int | dict[str, Any]\"  [arg-type]"
      },
      {
        "line": 206,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"float | int | dict[str, Any]\")  [assignment]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Unsupported operand types for < (\"float\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Unsupported operand types for < (\"int\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 214,
        "type": "note",
        "message": "Both left and right operands are unions"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Unsupported operand types for <= (\"float\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 216,
        "type": "note",
        "message": "Both left and right operands are unions"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Unsupported operand types for > (\"float\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Unsupported operand types for > (\"int\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Both left and right operands are unions"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Unsupported operand types for >= (\"float\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Unsupported operand types for >= (\"int\" and \"dict[str, Any]\")  [operator]"
      },
      {
        "line": 220,
        "type": "note",
        "message": "Both left and right operands are unions"
      },
      {
        "line": 965,
        "type": "error",
        "message": "Cannot infer type argument 1 of \"assertAlmostEqual\" of \"TestCase\"  [misc]"
      },
      {
        "line": 965,
        "type": "error",
        "message": "Argument 1 to \"assertAlmostEqual\" of \"TestCase\" has incompatible type \"float | int | dict[str, Any]\"; expected \"SupportsSub[Any, SupportsAbs[SupportsRound[object]]]\"  [arg-type]"
      }
    ],
    "app/tests/unit/core/test_biometric_processor.py": [
      {
        "line": 340,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 341,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/tests/unit/core/test_biometric_event_processor.py": [
      {
        "line": 415,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      },
      {
        "line": 416,
        "type": "error",
        "message": "Value of type \"object\" is not indexable  [index]"
      }
    ],
    "app/tests/unit/core/services/ml/test_mock_mentallama.py": [
      {
        "line": 83,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 128,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 128,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 148,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 148,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 174,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 174,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 179,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 180,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 197,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 225,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]"
      }
    ],
    "app/tests/unit/core/services/ml/test_mock_dt.py": [
      {
        "line": 68,
        "type": "error",
        "message": "Argument 1 to \"initialize\" of \"MockDigitalTwinService\" has incompatible type \"str\"; expected \"dict[str, Any]\"  [arg-type]"
      }
    ],
    "app/tests/unit/core/services/ml/test_mock_digital_twin.py": [
      {
        "line": 108,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 121,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 121,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 145,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 145,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"sample_message\"  [attr-defined]"
      },
      {
        "line": 182,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"sample_message\"  [attr-defined]"
      },
      {
        "line": 189,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"sample_message\"  [attr-defined]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 209,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"sample_message\"  [attr-defined]"
      },
      {
        "line": 229,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 265,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 275,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 298,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 298,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]"
      }
    ],
    "app/tests/unit/core/services/ml/pat/test_mock_pat.py": [
      {
        "line": 210,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"str\": \"str\"; expected \"str\": \"float\"  [dict-item]"
      }
    ],
    "app/tests/unit/application/use_cases/analytics/test_retrieve_aggregated_analytics.py": [
      {
        "line": 380,
        "type": "error",
        "message": "Need type annotation for \"dimensions\" (hint: \"dimensions: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/tests/security/utils/base_test.py": [
      {
        "line": 140,
        "type": "error",
        "message": "Module has no attribute \"ANY\"  [attr-defined]"
      }
    ],
    "app/tests/security/phi/test_phi_code_patterns.py": [
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"analyze_file\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Argument 1 to \"analyze_file\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 158,
        "type": "error",
        "message": "Argument 1 to \"analyze_file\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "Argument 1 to \"analyze_file\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "Argument 1 to \"analyze_directory\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 328,
        "type": "error",
        "message": "Argument 1 to \"analyze_directory\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 342,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 445,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"PHIFinding\", variable has type \"TextIOWrapper\")  [assignment]"
      },
      {
        "line": 446,
        "type": "error",
        "message": "\"TextIOWrapper\" has no attribute \"message\"  [attr-defined]"
      }
    ],
    "app/tests/security/encryption/test_ml_encryption.py": [
      {
        "line": 194,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"ndarray[Any, Any]\", variable has type \"list[float]\")  [assignment]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Argument 1 to \"decrypt_string\" of \"BaseEncryptionService\" has incompatible type \"str | None\"; expected \"str | bytes\"  [arg-type]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 264,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"bytes\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 429,
        "type": "error",
        "message": "Item \"dict[str, Any]\" of \"dict[str, Any] | str | None\" has no attribute \"startswith\"  [union-attr]"
      },
      {
        "line": 429,
        "type": "error",
        "message": "Item \"None\" of \"dict[str, Any] | str | None\" has no attribute \"startswith\"  [union-attr]"
      },
      {
        "line": 430,
        "type": "error",
        "message": "Unsupported right operand type for in (\"dict[str, Any] | str | None\")  [operator]"
      },
      {
        "line": 452,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 453,
        "type": "error",
        "message": "Argument 1 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 453,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 585,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 592,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 597,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 601,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 610,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 616,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 625,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 631,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 637,
        "type": "error",
        "message": "\"Callable[[], str]\" has no attribute \"return_value\"  [attr-defined]"
      },
      {
        "line": 640,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      }
    ],
    "app/tests/security/encryption/test_encryption.py": [
      {
        "line": 98,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 98,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 98,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 98,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 99,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 99,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 99,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 100,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 100,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 100,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 102,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 102,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 102,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 106,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 106,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 106,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 107,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 107,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 107,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 107,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 114,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 114,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 114,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 118,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 118,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 118,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "No overload variant of \"__setitem__\" of \"list\" matches argument types \"str\", \"int\"  [call-overload]"
      },
      {
        "line": 120,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 120,
        "type": "note",
        "message": "def __setitem__(self, SupportsIndex, Any, /) -> None"
      },
      {
        "line": 120,
        "type": "note",
        "message": "def __setitem__(self, slice, Iterable[Any], /) -> None"
      },
      {
        "line": 120,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 120,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 120,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 123,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 123,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 123,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 124,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 124,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 124,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 125,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 125,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 125,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 125,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 127,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 127,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 127,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 127,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 129,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 129,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 130,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 130,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 130,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 130,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 143,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 143,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 143,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 152,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 152,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 152,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 188,
        "type": "error",
        "message": "Name \"EncryptionError\" is not defined  [name-defined]"
      },
      {
        "line": 208,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 208,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 208,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 208,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 210,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 210,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 210,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]"
      },
      {
        "line": 213,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 213,
        "type": "note",
        "message": "def __getitem__(self, SupportsIndex, /) -> Any"
      },
      {
        "line": 213,
        "type": "note",
        "message": "def __getitem__(self, slice, /) -> list[Any]"
      }
    ],
    "app/tests/security/audit/test_phi_audit.py": [
      {
        "line": 323,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 325,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 332,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 333,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      }
    ],
    "app/tests/integration/infrastructure/persistence/test_database_docker_connection.py": [
      {
        "line": 83,
        "type": "error",
        "message": "Item \"None\" of \"AsyncEngine | None\" has no attribute \"connect\"  [union-attr]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Need type annotation for \"result\"  [var-annotated]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "Item \"None\" of \"AsyncEngine | None\" has no attribute \"begin\"  [union-attr]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"Table\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 144,
        "type": "error",
        "message": "Need type annotation for \"result\"  [var-annotated]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Item \"None\" of \"AsyncEngine | None\" has no attribute \"begin\"  [union-attr]"
      }
    ],
    "app/tests/infrastructure/aws/conftest_aws.py": [
      {
        "line": 51,
        "type": "error",
        "message": "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Returning Any from function declared to return \"InMemoryDynamoDBService\"  [no-any-return]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "\"InMemoryS3Service\" has no attribute \"objects\"  [attr-defined]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "\"InMemoryS3Service\" has no attribute \"bucket_exists\"; maybe \"check_bucket_exists\"?  [attr-defined]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Returning Any from function declared to return \"InMemoryS3Service\"  [no-any-return]"
      },
      {
        "line": 78,
        "type": "error",
        "message": "Returning Any from function declared to return \"InMemorySageMakerService\"  [no-any-return]"
      }
    ],
    "app/tests/fixtures/mock_db_fixture.py": [
      {
        "line": 112,
        "type": "error",
        "message": "Function \"builtins.callable\" is not valid as a type  [valid-type]"
      },
      {
        "line": 112,
        "type": "note",
        "message": "Perhaps you meant \"typing.Callable\" instead of \"callable\"?"
      }
    ],
    "app/tests/domain/entities/test_temporal_neurotransmitter.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Need type annotation for \"root_event\"  [var-annotated]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Need type annotation for \"event1\"  [var-annotated]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"time_points\"  [attr-defined]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"time_unit\"  [attr-defined]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"get_time_point\"  [attr-defined]"
      },
      {
        "line": 151,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"get_data_series\"  [attr-defined]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"interpolate_at_time\"  [attr-defined]"
      },
      {
        "line": 209,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 209,
        "type": "error",
        "message": "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 218,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 228,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"add_temporal_sequence\"; maybe \"temporal_sequences\" or \"generate_temporal_sequence\"?  [attr-defined]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"calculate_receptor_response\"  [attr-defined]"
      },
      {
        "line": 252,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"add_neurotransmitter_connection\"  [attr-defined]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 266,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 273,
        "type": "error",
        "message": "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]"
      },
      {
        "line": 282,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"add_temporal_sequence\"; maybe \"temporal_sequences\" or \"generate_temporal_sequence\"?  [attr-defined]"
      },
      {
        "line": 285,
        "type": "error",
        "message": "\"TemporalNeurotransmitterMapping\" has no attribute \"simulate_cascade_effects\"  [attr-defined]"
      }
    ],
    "app/tests/core/services/ml/xgboost/test_aws_xgboost_service.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost\" does not explicitly export attribute \"ModelType\"  [attr-defined]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Module \"app.core.services.ml.xgboost\" has no attribute \"PrivacyLevel\"  [attr-defined]"
      }
    ],
    "app/tests/application/services/test_temporal_neurotransmitter_service.py": [
      {
        "line": 136,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"TemporalEvent\"  [call-arg]"
      },
      {
        "line": 136,
        "type": "error",
        "message": "Unexpected keyword argument \"details\" for \"TemporalEvent\"  [call-arg]"
      },
      {
        "line": 136,
        "type": "error",
        "message": "Unexpected keyword argument \"created_at\" for \"TemporalEvent\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"id\" for \"EventChain\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"neurotransmitter\" for \"EventChain\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"brain_region\" for \"EventChain\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"start_time\" for \"EventChain\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"end_time\" for \"EventChain\"  [call-arg]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Unexpected keyword argument \"clinical_significance\" for \"EventChain\"  [call-arg]"
      }
    ],
    "app/infrastructure/security/audit_logger.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Incompatible default for argument \"store_path\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 41,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 41,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Cannot determine type of \"_hmac_key\"  [has-type]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 181,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Collection[str]\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 241,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Sequence[str]\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 287,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 550,
        "type": "error",
        "message": "Need type annotation for \"all_fields\" (hint: \"all_fields: Set[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/types/__init__.py": [
      {
        "line": 62,
        "type": "error",
        "message": "Incompatible return value type (got \"str | UUID\", expected \"str | None\")  [return-value]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/base_repository.py": [
      {
        "line": 86,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"type[ModelT]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 86,
        "type": "error",
        "message": "\"type[ModelT]\" has no attribute \"id\"  [attr-defined]"
      },
      {
        "line": 109,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"type[ModelT]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[ModelT]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "\"type[ModelT]\" has no attribute \"id\"  [attr-defined]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Argument 1 to \"select_from\" of \"Select\" has incompatible type \"type[ModelT]\"; expected \"FromClause\"  [arg-type]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/medication.py": [
      {
        "line": 10,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Need type annotation for \"prescriptions\"  [var-annotated]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Need type annotation for \"medication_id\"  [var-annotated]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Need type annotation for \"provider_id\"  [var-annotated]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Need type annotation for \"medication_catalog_item\"  [var-annotated]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Need type annotation for \"prescribing_provider\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/digital_twin.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Need type annotation for \"timeseries_id\"  [var-annotated]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Need type annotation for \"timeseries\"  [var-annotated]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Name \"value\" already defined on line 58  [no-redef]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Name \"metadata_dict\" already defined on line 68  [no-redef]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Need type annotation for \"twin_id\"  [var-annotated]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Need type annotation for \"twin\"  [var-annotated]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Need type annotation for \"data_points\"  [var-annotated]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Name \"physiological_range\" already defined on line 109  [no-redef]"
      },
      {
        "line": 135,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Need type annotation for \"timeseries\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/clinical_note.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Need type annotation for \"provider_id\"  [var-annotated]"
      },
      {
        "line": 56,
        "type": "error",
        "message": "Need type annotation for \"appointment_id\"  [var-annotated]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Need type annotation for \"parent_note_id\"  [var-annotated]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Need type annotation for \"provider\"  [var-annotated]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Need type annotation for \"appointment\"  [var-annotated]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Need type annotation for \"parent_note\"  [var-annotated]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "\"ClinicalNote\" has no attribute \"redacted_content\"; maybe \"update_content\"?  [attr-defined]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "\"ClinicalNote\" has no attribute \"title\"  [attr-defined]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "\"ClinicalNote\" has no attribute \"parent_note_id\"  [attr-defined]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Unexpected keyword argument \"redacted_content\" for \"ClinicalNote\"  [call-arg]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Unexpected keyword argument \"title\" for \"ClinicalNote\"  [call-arg]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Unexpected keyword argument \"parent_note_id\" for \"ClinicalNote\"  [call-arg]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Argument \"note_type\" to \"ClinicalNote\" has incompatible type \"NoteType | None\"; expected \"NoteType\"  [arg-type]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/biometric_twin_model.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Need type annotation for \"data_points\"  [var-annotated]"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Need type annotation for \"timeseries_data\"  [var-annotated]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Need type annotation for \"twin_id\"  [var-annotated]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Need type annotation for \"twin\"  [var-annotated]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "Need type annotation for \"biometric_twin_id\"  [var-annotated]"
      },
      {
        "line": 128,
        "type": "error",
        "message": "Need type annotation for \"biometric_twin\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/biometric_rule.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 62,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 68,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "Need type annotation for \"provider_id\"  [var-annotated]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Need type annotation for \"rule_id\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/biometric_alert_model.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Need type annotation for \"rule_id\"  [var-annotated]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Need type annotation for \"acknowledged_by_user_id\"  [var-annotated]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "Need type annotation for \"resolved_by_user_id\"  [var-annotated]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Need type annotation for \"rule\"  [var-annotated]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Need type annotation for \"acknowledged_by_user\"  [var-annotated]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Need type annotation for \"resolved_by_user\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/appointment.py": [
      {
        "line": 12,
        "type": "error",
        "message": "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]"
      },
      {
        "line": 46,
        "type": "error",
        "message": "Need type annotation for \"patient_id\"  [var-annotated]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Need type annotation for \"provider_id\"  [var-annotated]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Need type annotation for \"patient\"  [var-annotated]"
      },
      {
        "line": 75,
        "type": "error",
        "message": "Need type annotation for \"provider\"  [var-annotated]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Need type annotation for \"clinical_notes\"  [var-annotated]"
      },
      {
        "line": 104,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"virtual\"  [attr-defined]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "Unexpected keyword argument \"virtual\" for \"Appointment\"  [call-arg]"
      },
      {
        "line": 127,
        "type": "error",
        "message": "Argument \"status\" to \"Appointment\" has incompatible type \"str\"; expected \"AppointmentStatus\"  [arg-type]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/analytics.py": [
      {
        "line": 47,
        "type": "error",
        "message": "Need type annotation for \"user\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/config/database.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Module \"sqlalchemy.pool\" has no attribute \"FallbackAsyncAdaptedQueuePool\"  [attr-defined]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Dict entry 1 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Dict entry 2 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Dict entry 3 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Dict entry 4 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Dict entry 5 has incompatible type \"str\": \"bool\"; expected \"str\": \"type[NullPool]\"  [dict-item]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      }
    ],
    "app/infrastructure/persistence/repositories/user_repository.py": [
      {
        "line": 36,
        "type": "error",
        "message": "Cannot instantiate abstract class \"UserRepository\" with abstract attributes \"count\" and \"list_all\"  [abstract]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 150,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 155,
        "type": "error",
        "message": "Argument 1 of \"create\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]"
      },
      {
        "line": 155,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 155,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 177,
        "type": "error",
        "message": "Argument 1 of \"update\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]"
      },
      {
        "line": 177,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 177,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, None]\" of \"delete\" incompatible with return type \"Coroutine[Any, Any, bool]\" in supertype \"IUserRepository\"  [override]"
      }
    ],
    "app/infrastructure/persistence/repositories/token_blacklist_repository.py": [
      {
        "line": 96,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 175,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/utils/validation.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Name \"ValidationError\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 689,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 691,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/infrastructure/ml/base/base_model.py": [
      {
        "line": 47,
        "type": "error",
        "message": "Need type annotation for \"metrics\" (hint: \"metrics: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 247,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"str\")  [assignment]"
      }
    ],
    "app/infrastructure/database/models.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Variable \"app.infrastructure.database.models.Base\" is not valid as a type  [valid-type]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Invalid base class \"Base\"  [misc]"
      },
      {
        "line": 115,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      }
    ],
    "app/domain/services/mocks/digital_twin_service.py": [
      {
        "line": 27,
        "type": "error",
        "message": "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      }
    ],
    "app/demo/run_digital_twin_demo.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Module \"app.domain.entities.patient\" has no attribute \"Diagnosis\"  [attr-defined]"
      },
      {
        "line": 16,
        "type": "error",
        "message": "Module \"app.domain.entities.patient\" has no attribute \"DiagnosisStatus\"  [attr-defined]"
      },
      {
        "line": 16,
        "type": "error",
        "message": "Module \"app.domain.entities.patient\" has no attribute \"Gender\"  [attr-defined]"
      },
      {
        "line": 16,
        "type": "error",
        "message": "Module \"app.domain.entities.patient\" has no attribute \"Medication\"  [attr-defined]"
      },
      {
        "line": 16,
        "type": "error",
        "message": "Module \"app.domain.entities.patient\" has no attribute \"MedicationStatus\"  [attr-defined]"
      },
      {
        "line": 36,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 314,
        "type": "error",
        "message": "Name \"UUID\" is not defined  [name-defined]"
      }
    ],
    "app/core/services/ml/factory.py": [
      {
        "line": 112,
        "type": "error",
        "message": "\"MLServiceFactory\" has no attribute \"_mental_llama_instances\"  [attr-defined]"
      },
      {
        "line": 120,
        "type": "error",
        "message": "\"MLServiceFactory\" has no attribute \"_mental_llama_instances\"  [attr-defined]"
      }
    ],
    "app/infrastructure/security/jwt/jwt_service.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 28,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 28,
        "type": "note",
        "message": "def encode(claims: dict[str, Any], key: str, algorithm: str = ..., headers: dict[str, Any] | None = ..., access_token: bool = ...) -> str"
      },
      {
        "line": 28,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 28,
        "type": "note",
        "message": "def jwt_encode(claims: Any, key: Any, algorithm: Any = ..., **kwargs: Any) -> Any"
      },
      {
        "line": 31,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 31,
        "type": "note",
        "message": "def decode(token: str, key: str = ..., algorithms: list[str] | None = ..., audience: str | None = ..., issuer: str | None = ..., subject: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 31,
        "type": "note",
        "message": "def jwt_decode(token: Any, key: Any, algorithms: Any = ..., **kwargs: Any) -> Any"
      },
      {
        "line": 45,
        "type": "error",
        "message": "Name \"TokenType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Name \"AuthenticationError\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[ITokenBlacklistRepository]\")  [assignment]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[Settings]\")  [assignment]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Name \"TokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Name \"InvalidTokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 113,
        "type": "error",
        "message": "Name \"TokenExpiredException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Name \"RevokedTokenException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Name \"TokenGenerationException\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 138,
        "type": "error",
        "message": "Name \"TokenType\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 327,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, Any]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 335,
        "type": "error",
        "message": "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"dict[Any, Any]\"  [arg-type]"
      },
      {
        "line": 338,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"list[dict[Any, Any]]\", target has type \"str\")  [assignment]"
      },
      {
        "line": 343,
        "type": "error",
        "message": "Signature of \"create_access_token\" incompatible with supertype \"IJwtService\"  [override]"
      },
      {
        "line": 343,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 343,
        "type": "note",
        "message": "def create_access_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str"
      },
      {
        "line": 343,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 343,
        "type": "note",
        "message": "def create_access_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., jti: str | None = ...) -> str"
      },
      {
        "line": 377,
        "type": "error",
        "message": "Signature of \"create_refresh_token\" incompatible with supertype \"IJwtService\"  [override]"
      },
      {
        "line": 377,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 377,
        "type": "note",
        "message": "def create_refresh_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str"
      },
      {
        "line": 377,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 377,
        "type": "note",
        "message": "def create_refresh_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., parent_token_jti: str | None = ..., family_id: str | None = ...) -> str"
      },
      {
        "line": 527,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 527,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 563,
        "type": "error",
        "message": "Argument \"days\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 567,
        "type": "error",
        "message": "Argument \"minutes\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 576,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 576,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 579,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 579,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 641,
        "type": "error",
        "message": "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 736,
        "type": "error",
        "message": "Unexpected keyword argument \"algorithm\" for \"decode\"; did you mean \"algorithms\"?  [call-arg]"
      },
      {
        "line": 737,
        "type": "error",
        "message": "Argument 5 to \"decode\" has incompatible type \"**dict[str, str]\"; expected \"list[str] | None\"  [arg-type]"
      },
      {
        "line": 778,
        "type": "error",
        "message": "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]"
      },
      {
        "line": 851,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 912,
        "type": "error",
        "message": "Returning Any from function declared to return \"User | None\"  [no-any-return]"
      },
      {
        "line": 962,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 1000,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 1060,
        "type": "error",
        "message": "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 1060,
        "type": "error",
        "message": "Argument 2 to \"add_to_blacklist\" of \"ITokenBlacklistRepository\" has incompatible type \"datetime\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 1090,
        "type": "error",
        "message": "Incompatible return value type (got \"Coroutine[Any, Any, bool]\", expected \"bool\")  [return-value]"
      },
      {
        "line": 1090,
        "type": "note",
        "message": "Maybe you forgot to use \"await\"?"
      },
      {
        "line": 1099,
        "type": "error",
        "message": "Incompatible default for argument \"resource_owner_id\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 1099,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 1099,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 1165,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 1170,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | None\"  [no-any-return]"
      },
      {
        "line": 343,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 343,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 343,
        "type": "note",
        "message": "\"create_access_token\" of \"JWTService\" defined here"
      },
      {
        "line": 377,
        "type": "note",
        "message": "\"create_refresh_token\" of \"JWTService\" defined here"
      }
    ],
    "app/infrastructure/security/jwt/jose_adapter.py": [
      {
        "line": 49,
        "type": "note",
        "message": "\"decode\" defined here"
      }
    ],
    "app/core/interfaces/services/jwt_service.py": [
      {
        "line": 15,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 15,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"object\", variable has type \"type[TokenPayload]\")  [assignment]"
      },
      {
        "line": 31,
        "type": "note",
        "message": "\"create_access_token\" of \"IJwtService\" defined here"
      },
      {
        "line": 31,
        "type": "note",
        "message": "\"create_access_token\" of \"IJwtService\" defined here"
      },
      {
        "line": 41,
        "type": "note",
        "message": "\"create_refresh_token\" of \"IJwtService\" defined here"
      }
    ],
    "app/application/use_cases/analytics/batch_process_analytics.py": [
      {
        "line": 133,
        "type": "error",
        "message": "Need type annotation for \"tasks\" (hint: \"tasks: List[<type>] = ...\")  [var-annotated]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "Unexpected keyword argument \"increment\" for \"increment\" of \"CacheService\"  [call-arg]"
      }
    ],
    "app/tests/conftest_repositories.py": [
      {
        "line": 66,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockUnitOfWork\" with abstract attributes \"biometric_alerts\", \"biometric_rules\", ... and \"users\" (3 methods suppressed)  [abstract]"
      },
      {
        "line": 82,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockUserRepository\" with abstract attributes \"count\", \"create\", \"get_by_email\" and \"get_by_username\"  [abstract]"
      },
      {
        "line": 98,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockPatientRepository\" with abstract attributes \"find_by_criteria\" and \"get_all\"  [abstract]"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockDigitalTwinRepository\" with abstract attributes \"create\", \"create_session\", ... and \"update_twin_state\" (3 methods suppressed)  [abstract]"
      },
      {
        "line": 114,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"get_by_patient_id\"  [abstract]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricAlertRepository\" with abstract attributes \"create\" and \"get_by_patient_id\"  [abstract]"
      },
      {
        "line": 130,
        "type": "error",
        "message": "Cannot instantiate abstract class \"MockBiometricTwinRepository\" with abstract attributes \"add_data_point\", \"create\", \"get_by_patient_id\", \"get_data_history\" and \"get_latest_data\"  [abstract]"
      }
    ],
    "app/tests/utils/jwt_helpers.py": [
      {
        "line": 7,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      }
    ],
    "app/tests/unit/presentation/api/v1/endpoints/conftest.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_jwt_service_unit.py": [
      {
        "line": 21,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 21,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 21,
        "type": "note",
        "message": "def freeze_time(time_to_freeze: str | datetime | date | timedelta | FunctionType | Callable[[], str | datetime | date | timedelta] | Iterator[datetime] | None = ..., tz_offset: int | timedelta = ..., ignore: list[str] | None = ..., tick: bool = ..., as_arg: bool = ..., as_kwarg: str = ..., auto_tick_seconds: float = ..., real_asyncio: bool = ...) -> _freeze_time"
      },
      {
        "line": 21,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 21,
        "type": "note",
        "message": "def freeze_time(time_str: Any) -> Any"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"timezone\", variable has type \"ZoneInfo\")  [assignment]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_jwt_service_enhanced.py": [
      {
        "line": 25,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 25,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 25,
        "type": "note",
        "message": "def freeze_time(time_to_freeze: str | datetime | date | timedelta | FunctionType | Callable[[], str | datetime | date | timedelta] | Iterator[datetime] | None = ..., tz_offset: int | timedelta = ..., ignore: list[str] | None = ..., tick: bool = ..., as_arg: bool = ..., as_kwarg: str = ..., auto_tick_seconds: float = ..., real_asyncio: bool = ...) -> _freeze_time"
      },
      {
        "line": 25,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 25,
        "type": "note",
        "message": "def freeze_time(time_str: Any) -> Any"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"timezone\", variable has type \"ZoneInfo\")  [assignment]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 168,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 189,
        "type": "error",
        "message": "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]"
      },
      {
        "line": 205,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 205,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 234,
        "type": "error",
        "message": "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]"
      },
      {
        "line": 272,
        "type": "error",
        "message": "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 483,
        "type": "error",
        "message": "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 512,
        "type": "error",
        "message": "Function \"is_expired\" could always be true in boolean context  [truthy-function]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_jwt_handler.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      },
      {
        "line": 24,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"timezone\", variable has type \"ZoneInfo\")  [assignment]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "\"TokenPayload\" has no attribute \"custom_key\"  [attr-defined]"
      },
      {
        "line": 117,
        "type": "error",
        "message": "\"TokenPayload\" has no attribute \"numeric\"  [attr-defined]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Argument 1 to \"decode_token\" of \"JWTService\" has incompatible type \"bytes\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 266,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 266,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 275,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 275,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 291,
        "type": "error",
        "message": "\"TokenPayload\" has no attribute \"session_id\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/security/jwt/test_jwt_service.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 17,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      },
      {
        "line": 57,
        "type": "error",
        "message": "Returning Any from function declared to return \"User | None\"  [no-any-return]"
      },
      {
        "line": 176,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"InvalidTokenException\"  [attr-defined]"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"InvalidTokenException\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/types/test_json_encoded_dict.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"registry\"  [attr-defined]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "\"Session\" has no attribute \"__enter__\"; maybe \"__iter__\"?  [attr-defined]"
      },
      {
        "line": 40,
        "type": "error",
        "message": "\"Session\" has no attribute \"__exit__\"  [attr-defined]"
      }
    ],
    "app/tests/unit/examples/test_modern_asyncio.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Need type annotation for \"result\"  [var-annotated]"
      }
    ],
    "app/tests/unit/domain/test_digital_twin.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 50,
        "type": "error",
        "message": "Argument \"id\" to \"Medication\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Medication\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "\"Medication\" has no attribute \"medication_class\"  [attr-defined]"
      }
    ],
    "app/tests/unit/core/services/ml/test_factory.py": [
      {
        "line": 72,
        "type": "error",
        "message": "Name \"AWSComprehendMedicalPHIDetection\" is not defined  [name-defined]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Name \"MentaLLaMAService\" is not defined  [name-defined]"
      },
      {
        "line": 123,
        "type": "error",
        "message": "Name \"MockMentaLLaMAService\" is not defined  [name-defined]"
      },
      {
        "line": 142,
        "type": "error",
        "message": "Name \"MentaLLaMAService\" is not defined  [name-defined]"
      }
    ],
    "app/tests/unit/application/use_cases/analytics/test_batch_process_analytics.py": [
      {
        "line": 110,
        "type": "error",
        "message": "Need type annotation for \"events\" (hint: \"events: List[<type>] = ...\")  [var-annotated]"
      }
    ],
    "app/tests/security/phi/test_phi_audit_logic.py": [
      {
        "line": 21,
        "type": "error",
        "message": "Incompatible import of \"PHIAuditor\" (imported name has type \"type[MockPHIAuditor]\", local name has type \"type[PHIAuditor]\")  [assignment]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Incompatible import of \"PHIAuditResult\" (imported name has type \"type[MockPHIAuditResult]\", local name has type \"type[PHIAuditResult]\")  [assignment]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "\"PHIAuditResult\" has no attribute \"has_phi\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"PHIAuditResult\" has no attribute \"has_phi\"  [attr-defined]"
      }
    ],
    "app/tests/security/jwt/test_jwt_service.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      },
      {
        "line": 104,
        "type": "error",
        "message": "Unsupported operand types for * (\"None\" and \"int\")  [operator]"
      },
      {
        "line": 104,
        "type": "note",
        "message": "Left operand is of type \"int | Any | None\""
      },
      {
        "line": 161,
        "type": "error",
        "message": "Argument 1 to \"decode_token\" of \"JWTService\" has incompatible type \"bytes\"; expected \"str\"  [arg-type]"
      }
    ],
    "app/tests/security/auth/test_auth_hipaa_compliance.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 21,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.security.auth_middleware\"  [import-not-found]"
      },
      {
        "line": 22,
        "type": "error",
        "message": "Module \"app.infrastructure.security.rbac.role_manager\" has no attribute \"RoleManager\"  [attr-defined]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Name \"JWTService\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Name \"AuthMiddleware\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Item \"JWTService\" of \"Any | JWTService\" has no attribute \"verify_token\"  [union-attr]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Name \"RoleManager\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 88,
        "type": "error",
        "message": "Unsupported right operand type for in (\"object\")  [operator]"
      }
    ],
    "app/tests/integration/infrastructure/security/test_security_boundary.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      },
      {
        "line": 32,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      }
    ],
    "app/tests/fixtures/test_mock_db.py": [
      {
        "line": 10,
        "type": "error",
        "message": "Cannot assign multiple types to name \"select\" without an explicit \"Type[...]\" annotation  [misc]"
      },
      {
        "line": 10,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Callable[[Iterable[ColumnElement[Any] | FromClause | int] | None, str | bool | Visitable | None, str | Selectable | Iterable[str | Selectable] | None, int | str | Visitable | Iterable[int | str | Visitable] | None, str | bool | Visitable | None, int | str | Visitable | Iterable[int | str | Visitable] | None, bool, bool, int | None, int | None, bool, bool, Engine | Connection, Any | None, Any | None, KwArg(Any)], str]\", variable has type \"type[Select]\")  [assignment]"
      },
      {
        "line": 57,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"type[object]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      }
    ],
    "app/infrastructure/services/security/jwt_token_service.py": [
      {
        "line": 58,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "\"User\" has no attribute \"role\"  [attr-defined]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 84,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 207,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 218,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 218,
        "type": "note",
        "message": "Are you missing an await?"
      }
    ],
    "app/infrastructure/services/redis/redis_service.py": [
      {
        "line": 100,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[int] | int\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 238,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[set[Any]] | set[Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 258,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 258,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[int] | int\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 279,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 279,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[int] | int\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[str | None] | str | None\", expected type \"Awaitable[Any]\")  [misc]"
      }
    ],
    "app/infrastructure/services/redis/redis_cache_service.py": [
      {
        "line": 136,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 138,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 186,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Awaitable[dict[Any, Any]] | dict[Any, Any]\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 307,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 328,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      }
    ],
    "app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py": [
      {
        "line": 124,
        "type": "error",
        "message": "Signature of \"check_rate_limit\" incompatible with supertype \"RateLimiter\"  [override]"
      },
      {
        "line": 124,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 124,
        "type": "note",
        "message": "def check_rate_limit(self, key: str, config: Any = ..., user_id: str | None = ...) -> Any"
      },
      {
        "line": 124,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 124,
        "type": "note",
        "message": "def check_rate_limit(self, key: str, config: RateLimitConfig) -> bool"
      },
      {
        "line": 271,
        "type": "error",
        "message": "Unsupported operand types for <= (\"int\" and \"Awaitable[Any]\")  [operator]"
      },
      {
        "line": 271,
        "type": "note",
        "message": "Left operand is of type \"Awaitable[Any] | Any\""
      },
      {
        "line": 327,
        "type": "error",
        "message": "Item \"None\" of \"Redis | None\" has no attribute \"pipeline\"  [union-attr]"
      },
      {
        "line": 327,
        "type": "error",
        "message": "Item \"Pipeline\" of \"Pipeline | Any\" has no attribute \"__aenter__\"  [union-attr]"
      },
      {
        "line": 327,
        "type": "error",
        "message": "Item \"Pipeline\" of \"Pipeline | Any\" has no attribute \"__aexit__\"  [union-attr]"
      },
      {
        "line": 329,
        "type": "error",
        "message": "Item \"None\" of \"RateLimitConfig | None\" has no attribute \"period_seconds\"  [union-attr]"
      },
      {
        "line": 342,
        "type": "error",
        "message": "Item \"None\" of \"RateLimitConfig | None\" has no attribute \"requests_per_period\"  [union-attr]"
      },
      {
        "line": 345,
        "type": "error",
        "message": "Item \"None\" of \"RateLimitConfig | None\" has no attribute \"period_seconds\"  [union-attr]"
      },
      {
        "line": 383,
        "type": "error",
        "message": "Incompatible default for argument \"limiter_type\" (default has type \"None\", argument has type \"str\")  [assignment]"
      },
      {
        "line": 383,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 383,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 383,
        "type": "error",
        "message": "Incompatible default for argument \"redis_client\" (default has type \"None\", argument has type \"Redis\")  [assignment]"
      }
    ],
    "app/infrastructure/security/jwt/__init__.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"IJwtService\"  [attr-defined]"
      },
      {
        "line": 8,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/digital_twin_repository.py": [
      {
        "line": 54,
        "type": "error",
        "message": "Argument 1 to \"_deserialize_config\" of \"DigitalTwinRepositoryImpl\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[Any, Any] | None\"  [arg-type]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Argument 1 to \"_deserialize_state\" of \"DigitalTwinRepositoryImpl\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[Any, Any] | None\"  [arg-type]"
      },
      {
        "line": 93,
        "type": "error",
        "message": "Name \"datetime\" is not defined  [name-defined]"
      },
      {
        "line": 138,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      },
      {
        "line": 163,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/biometric_twin_repository.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Return type \"BiometricTwinState | None\" of \"get_by_id\" incompatible with return type \"BiometricTwin | None\" in supertype \"BiometricTwinRepository\"  [override]"
      },
      {
        "line": 60,
        "type": "error",
        "message": "Return type \"BiometricTwinState | None\" of \"get_by_patient_id\" incompatible with return type \"BiometricTwin | None\" in supertype \"BiometricTwinRepository\"  [override]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Return type \"BiometricTwinState\" of \"save\" incompatible with return type \"BiometricTwin\" in supertype \"BiometricTwinRepository\"  [override]"
      },
      {
        "line": 81,
        "type": "error",
        "message": "Argument 1 of \"save\" is incompatible with supertype \"BiometricTwinRepository\"; supertype defines the argument type as \"BiometricTwin\"  [override]"
      },
      {
        "line": 81,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 81,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 96,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "Return type \"list[BiometricTwinState]\" of \"list_by_connected_device\" incompatible with return type \"list[BiometricTwin]\" in supertype \"BiometricTwinRepository\"  [override]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Return type \"list[BiometricTwinState]\" of \"list_all\" incompatible with return type \"list[BiometricTwin]\" in supertype \"BiometricTwinRepository\"  [override]"
      },
      {
        "line": 196,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unexpected keyword argument \"twin_id\" for \"BiometricTwinState\"  [call-arg]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unexpected keyword argument \"created_at\" for \"BiometricTwinState\"  [call-arg]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"BiometricTwinState\"  [call-arg]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unexpected keyword argument \"baseline_established\" for \"BiometricTwinState\"  [call-arg]"
      },
      {
        "line": 219,
        "type": "error",
        "message": "Unexpected keyword argument \"connected_devices\" for \"BiometricTwinState\"  [call-arg]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Argument \"data_points\" to \"BiometricTwinState\" has incompatible type \"list[BiometricDataPoint]\"; expected \"dict[str, list[BiometricDataPoint]]\"  [arg-type]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"created_at\"  [attr-defined]"
      },
      {
        "line": 243,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"updated_at\"  [attr-defined]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"baseline_established\"  [attr-defined]"
      },
      {
        "line": 245,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"connected_devices\"  [attr-defined]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"updated_at\"  [attr-defined]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"baseline_established\"  [attr-defined]"
      },
      {
        "line": 258,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"connected_devices\"  [attr-defined]"
      },
      {
        "line": 270,
        "type": "error",
        "message": "Missing named argument \"patient_id\" for \"BiometricDataPoint\"  [call-arg]"
      },
      {
        "line": 272,
        "type": "error",
        "message": "Argument \"value\" to \"BiometricDataPoint\" has incompatible type \"str | float | int | dict[Any, Any]\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 275,
        "type": "error",
        "message": "Argument \"metadata\" to \"BiometricDataPoint\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Argument \"confidence\" to \"BiometricDataPoint\" has incompatible type \"Decimal\"; expected \"float | None\"  [arg-type]"
      },
      {
        "line": 318,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "\"str\" has no attribute \"data_id\"  [attr-defined]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "Argument 1 to \"_map_data_point_to_model\" of \"SQLAlchemyBiometricTwinRepository\" has incompatible type \"str\"; expected \"BiometricDataPoint\"  [arg-type]"
      },
      {
        "line": 331,
        "type": "error",
        "message": "\"BiometricTwinState\" has no attribute \"twin_id\"  [attr-defined]"
      },
      {
        "line": 379,
        "type": "error",
        "message": "Returning Any from function declared to return \"str | float | int | dict[Any, Any]\"  [no-any-return]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/biometric_alert_repository.py": [
      {
        "line": 85,
        "type": "error",
        "message": "\"commit\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 89,
        "type": "error",
        "message": "\"rollback\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "\"rollback\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 347,
        "type": "error",
        "message": "\"commit\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 355,
        "type": "error",
        "message": "\"rollback\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 376,
        "type": "error",
        "message": "Too many arguments for \"where\" of \"Select\"  [call-arg]"
      },
      {
        "line": 388,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 415,
        "type": "error",
        "message": "\"commit\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 418,
        "type": "error",
        "message": "\"rollback\" of \"Session\" does not return a value  [func-returns-value]"
      },
      {
        "line": 451,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 511,
        "type": "error",
        "message": "Name \"uuid4\" is not defined  [name-defined]"
      },
      {
        "line": 528,
        "type": "error",
        "message": "Name \"timezone\" is not defined  [name-defined]"
      },
      {
        "line": 584,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 590,
        "type": "error",
        "message": "Name \"timezone\" is not defined  [name-defined]"
      },
      {
        "line": 617,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]"
      },
      {
        "line": 629,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"datetime\")  [assignment]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/user.py": [
      {
        "line": 32,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declared_attr\"  [attr-defined]"
      },
      {
        "line": 195,
        "type": "error",
        "message": "Need type annotation for \"provider\"  [var-annotated]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "Need type annotation for \"patients\"  [var-annotated]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Need type annotation for \"analytics_events\"  [var-annotated]"
      },
      {
        "line": 262,
        "type": "error",
        "message": "\"str\" has no attribute \"value\"  [attr-defined]"
      },
      {
        "line": 290,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"datetime\")  [assignment]"
      },
      {
        "line": 316,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"datetime\")  [assignment]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/temporal_sequence_model.py": [
      {
        "line": 39,
        "type": "error",
        "message": "Need type annotation for \"data_points\"  [var-annotated]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Need type annotation for \"sequence\"  [var-annotated]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/patient.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Name \"inspect\" already defined (by an import)  [no-redef]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Need type annotation for \"user\"  [var-annotated]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Need type annotation for \"appointments\"  [var-annotated]"
      },
      {
        "line": 200,
        "type": "error",
        "message": "Need type annotation for \"clinical_notes\"  [var-annotated]"
      },
      {
        "line": 210,
        "type": "error",
        "message": "Need type annotation for \"prescriptions\"  [var-annotated]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Need type annotation for \"biometric_rules\"  [var-annotated]"
      },
      {
        "line": 230,
        "type": "error",
        "message": "Need type annotation for \"biometric_twin\"  [var-annotated]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"datetime\")  [assignment]"
      },
      {
        "line": 318,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"datetime\")  [assignment]"
      },
      {
        "line": 381,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 383,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 389,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 390,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 391,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 392,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 393,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 396,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 398,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 399,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 400,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 406,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 407,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 408,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 505,
        "type": "error",
        "message": "Module not callable  [operator]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/mappers/biometric_rule_mapper.py": [
      {
        "line": 47,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 69,
        "type": "error",
        "message": "\"BiometricRule\" has no attribute \"metadata\"  [attr-defined]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Item \"str\" of \"str | Any\" has no attribute \"get\"  [union-attr]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Item \"str\" of \"str | Any\" has no attribute \"get\"  [union-attr]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "Item \"str\" of \"str | Any\" has no attribute \"get\"  [union-attr]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "Item \"str\" of \"str | Any\" has no attribute \"get\"  [union-attr]"
      }
    ],
    "app/infrastructure/persistence/repositories/digital_twin_repository.py": [
      {
        "line": 23,
        "type": "error",
        "message": "Module \"app.infrastructure.persistence.sqlalchemy.models.digital_twin\" has no attribute \"BiometricDataPointModel\"  [attr-defined]"
      },
      {
        "line": 295,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      }
    ],
    "app/infrastructure/persistence/repositories/analytics_repository.py": [
      {
        "line": 386,
        "type": "error",
        "message": "Dict entry 0 has incompatible type \"str\": \"datetime | None\"; expected \"str\": \"datetime\"  [dict-item]"
      },
      {
        "line": 386,
        "type": "error",
        "message": "Dict entry 1 has incompatible type \"str\": \"datetime | None\"; expected \"str\": \"datetime\"  [dict-item]"
      }
    ],
    "app/infrastructure/models/temporal_sequence_model.py": [
      {
        "line": 7,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      }
    ],
    "app/infrastructure/ml/pharmacogenomics/gene_medication_model.py": [
      {
        "line": 97,
        "type": "error",
        "message": "Need type annotation for \"interaction_db\" (hint: \"interaction_db: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 315,
        "type": "error",
        "message": "\"None\" has no attribute \"predict_proba\"  [attr-defined]"
      },
      {
        "line": 318,
        "type": "error",
        "message": "\"None\" has no attribute \"predict_proba\"  [attr-defined]"
      },
      {
        "line": 480,
        "type": "error",
        "message": "Need type annotation for \"recommendations\"  [var-annotated]"
      },
      {
        "line": 722,
        "type": "error",
        "message": "\"None\" has no attribute \"fit\"  [attr-defined]"
      },
      {
        "line": 728,
        "type": "error",
        "message": "\"None\" has no attribute \"fit\"  [attr-defined]"
      },
      {
        "line": 737,
        "type": "error",
        "message": "\"None\" has no attribute \"fit\"  [attr-defined]"
      },
      {
        "line": 747,
        "type": "error",
        "message": "\"None\" has no attribute \"score\"  [attr-defined]"
      },
      {
        "line": 751,
        "type": "error",
        "message": "\"None\" has no attribute \"score\"  [attr-defined]"
      },
      {
        "line": 760,
        "type": "error",
        "message": "\"None\" has no attribute \"score\"  [attr-defined]"
      },
      {
        "line": 761,
        "type": "error",
        "message": "\"None\" has no attribute \"score\"  [attr-defined]"
      },
      {
        "line": 772,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str\", variable has type \"None\")  [assignment]"
      }
    ],
    "app/infrastructure/logging/audit.py": [
      {
        "line": 395,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]"
      },
      {
        "line": 395,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"get_audit_trail\"  [attr-defined]"
      }
    ],
    "app/infrastructure/cache/redis_cache.py": [
      {
        "line": 28,
        "type": "error",
        "message": "Unused \"type: ignore\" comment  [unused-ignore]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "Argument 3 of \"set\" is incompatible with supertype \"CacheService\"; supertype defines the argument type as \"int | None\"  [override]"
      },
      {
        "line": 153,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 153,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 259,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Returning Any from function declared to return \"int | None\"  [no-any-return]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 345,
        "type": "error",
        "message": "Returning Any from function declared to return \"int | None\"  [no-any-return]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 398,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 443,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 449,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      },
      {
        "line": 461,
        "type": "error",
        "message": "Name \"time\" is not defined  [name-defined]"
      }
    ],
    "app/domain/services/provider_service.py": [
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.domain.entities.provider\" has no attribute \"AvailabilitySlot\"  [attr-defined]"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.domain.entities.provider\" has no attribute \"Credential\"  [attr-defined]"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.domain.entities.provider\" has no attribute \"ProviderRole\"; maybe \"Provider\"?  [attr-defined]"
      },
      {
        "line": 11,
        "type": "error",
        "message": "Module \"app.domain.entities.provider\" has no attribute \"ProviderSpecialty\"  [attr-defined]"
      },
      {
        "line": 18,
        "type": "error",
        "message": "Module \"app.domain.exceptions\" has no attribute \"PatientLimitExceededError\"  [attr-defined]"
      },
      {
        "line": 85,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"get_by_npi\"; maybe \"get_by_id\"?  [attr-defined]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Unexpected keyword argument \"role\" for \"Provider\"  [call-arg]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Unexpected keyword argument \"dea_number\" for \"Provider\"  [call-arg]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Unexpected keyword argument \"is_active\" for \"Provider\"  [call-arg]"
      },
      {
        "line": 96,
        "type": "error",
        "message": "Unexpected keyword argument \"accepts_new_patients\" for \"Provider\"  [call-arg]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Argument \"specialties\" to \"Provider\" has incompatible type \"set[Any]\"; expected \"list[str] | None\"  [arg-type]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Returning Any from function declared to return \"Provider\"  [no-any-return]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"create\"  [attr-defined]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "Returning Any from function declared to return \"Provider\"  [no-any-return]"
      },
      {
        "line": 165,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"update\"  [attr-defined]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Returning Any from function declared to return \"Provider\"  [no-any-return]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"update\"  [attr-defined]"
      },
      {
        "line": 227,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"get_available_on_day\"  [attr-defined]"
      },
      {
        "line": 294,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Provider]\"  [no-any-return]"
      },
      {
        "line": 304,
        "type": "error",
        "message": "\"ProviderRepository\" has no attribute \"get_prescribers\"  [attr-defined]"
      },
      {
        "line": 309,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Provider]\"  [no-any-return]"
      },
      {
        "line": 325,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 367,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      }
    ],
    "app/domain/services/patient_service.py": [
      {
        "line": 54,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"PatientRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Argument 1 to \"create\" of \"PatientRepository\" has incompatible type \"dict[Any, Any]\"; expected \"Patient\"  [arg-type]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Incompatible return value type (got \"Patient | None\", expected \"Patient\")  [return-value]"
      },
      {
        "line": 66,
        "type": "error",
        "message": "Argument 1 to \"update\" of \"PatientRepository\" has incompatible type \"dict[Any, Any]\"; expected \"Patient\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"delete\" of \"PatientRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 117,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 128,
        "type": "error",
        "message": "Unexpected keyword argument \"contact_info\" for \"Patient\"; did you mean \"_contact_info\"?  [call-arg]"
      },
      {
        "line": 131,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, Any]\", variable has type \"EmergencyContact | None\")  [assignment]"
      },
      {
        "line": 143,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[Any, Any]\", variable has type \"list[str]\")  [assignment]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "\"Patient\" has no attribute \"preferred_provider_id\"  [attr-defined]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Incompatible return value type (got \"Patient | None\", expected \"Patient\")  [return-value]"
      },
      {
        "line": 199,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_by_patient\"; maybe \"list_by_patient_id\"?  [attr-defined]"
      },
      {
        "line": 204,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_upcoming_by_patient\"  [attr-defined]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 225,
        "type": "error",
        "message": "Item \"str\" of \"datetime | str\" has no attribute \"isoformat\"  [union-attr]"
      },
      {
        "line": 226,
        "type": "error",
        "message": "Argument 1 to \"_calculate_age\" of \"PatientService\" has incompatible type \"datetime | str\"; expected \"date\"  [arg-type]"
      },
      {
        "line": 292,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 297,
        "type": "error",
        "message": "\"Patient\" has no attribute \"preferred_provider_id\"  [attr-defined]"
      },
      {
        "line": 300,
        "type": "error",
        "message": "Incompatible return value type (got \"Patient | None\", expected \"Patient\")  [return-value]"
      },
      {
        "line": 343,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, str | None]], str | None]\"; expected \"Callable[[dict[str, str | None]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 343,
        "type": "error",
        "message": "Incompatible return value type (got \"str | None\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 385,
        "type": "error",
        "message": "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 385,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Patient]\"  [no-any-return]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "\"PatientRepository\" has no attribute \"search\"  [attr-defined]"
      },
      {
        "line": 418,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_by_date_range\"  [attr-defined]"
      },
      {
        "line": 421,
        "type": "error",
        "message": "Need type annotation for \"patient_appointments\" (hint: \"patient_appointments: Dict[<type>, <type>] = ...\")  [var-annotated]"
      },
      {
        "line": 448,
        "type": "error",
        "message": "Item \"str\" of \"datetime | str\" has no attribute \"isoformat\"  [union-attr]"
      },
      {
        "line": 481,
        "type": "error",
        "message": "\"Patient\" has no attribute \"is_active\"; maybe \"active\"?  [attr-defined]"
      }
    ],
    "app/domain/services/digital_twin_service.py": [
      {
        "line": 70,
        "type": "error",
        "message": "Incompatible default for argument \"initial_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]"
      },
      {
        "line": 70,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 70,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Unexpected keyword argument \"creation_date\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 105,
        "type": "error",
        "message": "Unexpected keyword argument \"metadata\" for \"DigitalTwin\"  [call-arg]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "Incompatible return value type (got \"DigitalTwin | None\", expected \"DigitalTwin\")  [return-value]"
      },
      {
        "line": 636,
        "type": "error",
        "message": "Unexpected keyword argument \"diagnosis\" for \"TherapeuticPlan\"  [call-arg]"
      },
      {
        "line": 636,
        "type": "error",
        "message": "Unexpected keyword argument \"created_at\" for \"TherapeuticPlan\"  [call-arg]"
      },
      {
        "line": 636,
        "type": "error",
        "message": "Unexpected keyword argument \"updated_at\" for \"TherapeuticPlan\"  [call-arg]"
      },
      {
        "line": 639,
        "type": "error",
        "message": "Argument \"goals\" to \"TherapeuticPlan\" has incompatible type \"list[dict[str, str]]\"; expected \"list[TreatmentGoal]\"  [arg-type]"
      },
      {
        "line": 640,
        "type": "error",
        "message": "Argument \"interventions\" to \"TherapeuticPlan\" has incompatible type \"list[dict[str, Any]]\"; expected \"list[TherapeuticIntervention]\"  [arg-type]"
      }
    ],
    "app/domain/services/appointment_service.py": [
      {
        "line": 82,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"IAppointmentRepository\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 87,
        "type": "error",
        "message": "Incompatible return value type (got \"Coroutine[Any, Any, Appointment | None]\", expected \"Appointment\")  [return-value]"
      },
      {
        "line": 112,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"PatientRepository\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Appointment]\"  [no-any-return]"
      },
      {
        "line": 122,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"get_by_patient_id\"; maybe \"list_by_patient_id\"?  [attr-defined]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Appointment]\"  [no-any-return]"
      },
      {
        "line": 159,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"get_by_provider_id\"; maybe \"list_by_provider_id\"?  [attr-defined]"
      },
      {
        "line": 198,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"PatientRepository\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 225,
        "type": "error",
        "message": "Argument \"appointment_type\" to \"Appointment\" has incompatible type \"AppointmentType | str\"; expected \"AppointmentType\"  [arg-type]"
      },
      {
        "line": 227,
        "type": "error",
        "message": "Argument \"priority\" to \"Appointment\" has incompatible type \"AppointmentPriority | str\"; expected \"AppointmentPriority\"  [arg-type]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 234,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"UUID | str\")  [assignment]"
      },
      {
        "line": 242,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 242,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Too many arguments for \"reschedule\" of \"Appointment\"  [call-arg]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 310,
        "type": "error",
        "message": "Argument 1 to \"cancel\" of \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 336,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 336,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 356,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"check_in\"  [attr-defined]"
      },
      {
        "line": 359,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 359,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 379,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"start\"  [attr-defined]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 405,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 405,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 428,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 428,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 483,
        "type": "error",
        "message": "Unexpected keyword argument \"previous_appointment_id\" for \"Appointment\"  [call-arg]"
      },
      {
        "line": 488,
        "type": "error",
        "message": "Argument \"appointment_type\" to \"Appointment\" has incompatible type \"AppointmentType | str\"; expected \"AppointmentType\"  [arg-type]"
      },
      {
        "line": 490,
        "type": "error",
        "message": "Argument \"priority\" to \"Appointment\" has incompatible type \"AppointmentPriority | str\"; expected \"AppointmentPriority\"  [arg-type]"
      },
      {
        "line": 498,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 501,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"schedule_follow_up\"  [attr-defined]"
      },
      {
        "line": 502,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 523,
        "type": "error",
        "message": "\"Appointment\" has no attribute \"send_reminder\"  [attr-defined]"
      },
      {
        "line": 526,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 526,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 549,
        "type": "error",
        "message": "Returning Any from function declared to return \"Appointment\"  [no-any-return]"
      },
      {
        "line": 549,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]"
      },
      {
        "line": 574,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"get_by_provider_id\"; maybe \"list_by_provider_id\"?  [attr-defined]"
      },
      {
        "line": 623,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"get_by_provider_id\"; maybe \"list_by_provider_id\"?  [attr-defined]"
      }
    ],
    "app/domain/services/analytics_service.py": [
      {
        "line": 90,
        "type": "error",
        "message": "\"ClinicalNoteRepository\" has no attribute \"list_by_patient_date_range\"; maybe \"list_by_date_range\"?  [attr-defined]"
      },
      {
        "line": 95,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_by_patient_date_range\"; maybe \"list_by_patient_id\"?  [attr-defined]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "\"MedicationRepository\" has no attribute \"list_by_patient_date_range\"  [attr-defined]"
      },
      {
        "line": 153,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_by_provider_date_range\"; maybe \"list_by_provider_id\"?  [attr-defined]"
      },
      {
        "line": 157,
        "type": "error",
        "message": "\"IAppointmentRepository\" has no attribute \"list_by_date_range\"  [attr-defined]"
      },
      {
        "line": 373,
        "type": "error",
        "message": "Argument \"key\" to \"max\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 373,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 377,
        "type": "error",
        "message": "Argument \"key\" to \"min\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 377,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 379,
        "type": "error",
        "message": "Argument \"key\" to \"max\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 379,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Argument \"key\" to \"min\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]"
      },
      {
        "line": 382,
        "type": "error",
        "message": "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]"
      }
    ],
    "app/application/use_cases/digital_twin/generate_digital_twin.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      }
    ],
    "app/application/use_cases/appointment/create_appointment.py": [
      {
        "line": 25,
        "type": "error",
        "message": "Missing return statement  [empty-body]"
      }
    ],
    "app/application/services/patient_service.py": [
      {
        "line": 57,
        "type": "error",
        "message": "Incompatible return value type (got \"None\", expected \"dict[str, str]\")  [return-value]"
      },
      {
        "line": 61,
        "type": "error",
        "message": "Dict entry 1 has incompatible type \"str\": \"str | None\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Dict entry 1 has incompatible type \"str\": \"str | None\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 72,
        "type": "error",
        "message": "Dict entry 1 has incompatible type \"str\": \"str | None\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 132,
        "type": "error",
        "message": "\"PatientCreateRequest\" has no attribute \"name\"  [attr-defined]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "\"PatientCreateRequest\" has no attribute \"name\"  [attr-defined]"
      }
    ],
    "app/application/security/jwt_service.py": [
      {
        "line": 35,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.exceptions.auth\"  [import-not-found]"
      },
      {
        "line": 76,
        "type": "error",
        "message": "Incompatible default for argument \"settings\" (default has type \"None\", argument has type \"Settings\")  [assignment]"
      },
      {
        "line": 76,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 76,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 90,
        "type": "error",
        "message": "Property \"settings\" defined in \"JWTService\" is read-only  [misc]"
      },
      {
        "line": 94,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 129,
        "type": "error",
        "message": "\"Settings\" has no attribute \"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\"; maybe \"ACCESS_TOKEN_EXPIRE_MINUTES\"?  [attr-defined]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 217,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]"
      },
      {
        "line": 257,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 281,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 283,
        "type": "error",
        "message": "\"type[AuditSeverity]\" has no attribute \"MEDIUM\"  [attr-defined]"
      },
      {
        "line": 290,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]"
      },
      {
        "line": 321,
        "type": "error",
        "message": "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 325,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLISTED\"  [attr-defined]"
      },
      {
        "line": 334,
        "type": "error",
        "message": "Missing positional arguments \"jti\", \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]"
      },
      {
        "line": 338,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLIST_FAILURE\"  [attr-defined]"
      },
      {
        "line": 363,
        "type": "error",
        "message": "\"type[AuditEventType]\" has no attribute \"SESSION_TOKENS_BLACKLISTED\"  [attr-defined]"
      }
    ],
    "app/application/security/authentication_service.py": [
      {
        "line": 22,
        "type": "error",
        "message": "Module \"app.domain.exceptions\" has no attribute \"UserNotFoundError\"; maybe \"DataNotFoundError\"?  [attr-defined]"
      },
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.domain.interfaces.user_repository\"  [import-not-found]"
      },
      {
        "line": 34,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.security.password.password_service\"  [import-not-found]"
      },
      {
        "line": 34,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports"
      },
      {
        "line": 99,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 109,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 147,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 154,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_successful_login\"  [attr-defined]"
      },
      {
        "line": 187,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]"
      },
      {
        "line": 231,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 242,
        "type": "error",
        "message": "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]"
      },
      {
        "line": 274,
        "type": "error",
        "message": "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 278,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 280,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 299,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 301,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 326,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 326,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 342,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 343,
        "type": "error",
        "message": "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 354,
        "type": "error",
        "message": "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]"
      },
      {
        "line": 354,
        "type": "note",
        "message": "Are you missing an await?"
      },
      {
        "line": 357,
        "type": "error",
        "message": "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 357,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 357,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 369,
        "type": "error",
        "message": "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 369,
        "type": "error",
        "message": "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]"
      },
      {
        "line": 371,
        "type": "error",
        "message": "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 401,
        "type": "error",
        "message": "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]"
      },
      {
        "line": 421,
        "type": "error",
        "message": "Returning Any from function declared to return \"User\"  [no-any-return]"
      },
      {
        "line": 447,
        "type": "error",
        "message": "\"User\" has no attribute \"permissions\"  [attr-defined]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 475,
        "type": "error",
        "message": "\"User\" has no attribute \"permissions\"  [attr-defined]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "Unexpected keyword argument \"permissions\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 473,
        "type": "error",
        "message": "Unexpected keyword argument \"additional_data\" for \"create_access_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 480,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"create_refresh_token\" of \"JWTService\"  [call-arg]"
      },
      {
        "line": 491,
        "type": "error",
        "message": "\"type[UUID]\" has no attribute \"uuid4\"  [attr-defined]"
      }
    ],
    "app/tests/unit/services/ml/pat/test_pat_service.py": [
      {
        "line": 22,
        "type": "error",
        "message": "All conditional function variants must have identical signatures  [misc]"
      },
      {
        "line": 22,
        "type": "note",
        "message": "Original:"
      },
      {
        "line": 22,
        "type": "note",
        "message": "def freeze_time(time_to_freeze: str | datetime | date | timedelta | FunctionType | Callable[[], str | datetime | date | timedelta] | Iterator[datetime] | None = ..., tz_offset: int | timedelta = ..., ignore: list[str] | None = ..., tick: bool = ..., as_arg: bool = ..., as_kwarg: str = ..., auto_tick_seconds: float = ..., real_asyncio: bool = ...) -> _freeze_time"
      },
      {
        "line": 22,
        "type": "note",
        "message": "Redefinition:"
      },
      {
        "line": 22,
        "type": "note",
        "message": "def freeze_time(time_str: Any) -> Any"
      },
      {
        "line": 131,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 200,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 250,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 275,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 288,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 296,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 324,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 374,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 390,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 392,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 394,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 397,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 412,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 415,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 425,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 427,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"AnalysisTypeEnum\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"datetime\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"float\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"dict[str, Any]\"  [arg-type]"
      },
      {
        "line": 462,
        "type": "note",
        "message": "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance"
      },
      {
        "line": 462,
        "type": "note",
        "message": "Consider using \"Mapping\" instead, which is covariant in the value type"
      },
      {
        "line": 462,
        "type": "error",
        "message": "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"list[str]\"  [arg-type]"
      },
      {
        "line": 493,
        "type": "error",
        "message": "\"None\" has no attribute \"get_item\"  [attr-defined]"
      },
      {
        "line": 502,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 521,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      },
      {
        "line": 586,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MagicMock\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 587,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MagicMock\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 588,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"MagicMock\", variable has type \"None\")  [assignment]"
      },
      {
        "line": 603,
        "type": "error",
        "message": "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]"
      }
    ],
    "app/tests/unit/infrastructure/security/test_rate_limiter.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"timezone\", variable has type \"ZoneInfo\")  [assignment]"
      },
      {
        "line": 151,
        "type": "error",
        "message": "List item 0 has incompatible type \"float\"; expected \"datetime\"  [list-item]"
      },
      {
        "line": 316,
        "type": "error",
        "message": "Name \"redis_rate_limiter\" already defined on line 74  [no-redef]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/models/test_patient_encryption.py": [
      {
        "line": 170,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 194,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "Argument 1 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 256,
        "type": "error",
        "message": "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]"
      }
    ],
    "app/tests/unit/infrastructure/ml/pharmacogenomics/test_model_service_pgx.py": [
      {
        "line": 78,
        "type": "error",
        "message": "Name \"PharmacogenomicsModel\" is not defined  [name-defined]"
      }
    ],
    "app/tests/unit/infrastructure/ml/pharmacogenomics/test_gene_medication_model.py": [
      {
        "line": 34,
        "type": "error",
        "message": "Name \"mock_open\" is not defined  [name-defined]"
      },
      {
        "line": 144,
        "type": "error",
        "message": "Name \"mock_open\" is not defined  [name-defined]"
      }
    ],
    "app/tests/unit/infrastructure/cache/test_redis_cache.py": [
      {
        "line": 119,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"dict[str, None]\", target has type \"None\")  [assignment]"
      }
    ],
    "app/tests/unit/domain/services/test_patient_service.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Missing positional arguments \"appointment_repository\", \"clinical_note_repository\" in call to \"PatientService\"  [call-arg]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"EmergencyContact | None\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"dict[str, Any] | None\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "note",
        "message": "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance"
      },
      {
        "line": 71,
        "type": "note",
        "message": "Consider using \"Mapping\" instead, which is covariant in the value type"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"bool\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"list[str]\"  [arg-type]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"list[dict[str, Any]]\"  [arg-type]"
      }
    ],
    "app/tests/unit/domain/services/test_appointment_service.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      },
      {
        "line": 140,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 141,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      }
    ],
    "app/tests/unit/core/test_mock_digital_twin.py": [
      {
        "line": 28,
        "type": "error",
        "message": "Name \"DigitalTwinService\" already defined (possibly by an import)  [no-redef]"
      }
    ],
    "app/tests/unit/application/use_cases/patient/test_create_patient_use_case.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      }
    ],
    "app/tests/mocks/mock_redis_service.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Name \"RedisService\" already defined (possibly by an import)  [no-redef]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Signature of \"set\" incompatible with supertype \"RedisService\"  [override]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def set(self, name: str, value: str, expire: int | None = ..., set_if_not_exists: bool | None = ..., set_if_exists: bool | None = ...) -> Coroutine[Any, Any, bool | None]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def set(self, key: str, value: Any, ttl: int | None = ...) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Signature of \"set\" incompatible with supertype \"IRedisService\"  [override]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def set(self, name: str, value: str, expire: int | None = ..., set_if_not_exists: bool | None = ..., set_if_exists: bool | None = ...) -> Coroutine[Any, Any, bool | None]"
      },
      {
        "line": 74,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 74,
        "type": "note",
        "message": "def set(self, key: str, value: Any, ttl: int | None = ...) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Signature of \"delete\" incompatible with supertype \"RedisService\"  [override]"
      },
      {
        "line": 92,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 92,
        "type": "note",
        "message": "def delete(self, *names: str) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 92,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 92,
        "type": "note",
        "message": "def delete(self, key: str) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 92,
        "type": "error",
        "message": "Signature of \"delete\" incompatible with supertype \"IRedisService\"  [override]"
      },
      {
        "line": 92,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 92,
        "type": "note",
        "message": "def delete(self, *names: str) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 92,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 92,
        "type": "note",
        "message": "def delete(self, key: str) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "Signature of \"exists\" incompatible with supertype \"RedisService\"  [override]"
      },
      {
        "line": 110,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 110,
        "type": "note",
        "message": "def exists(self, *names: str) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 110,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 110,
        "type": "note",
        "message": "def exists(self, key: str) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 110,
        "type": "error",
        "message": "Signature of \"exists\" incompatible with supertype \"IRedisService\"  [override]"
      },
      {
        "line": 110,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 110,
        "type": "note",
        "message": "def exists(self, *names: str) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 110,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 110,
        "type": "note",
        "message": "def exists(self, key: str) -> Coroutine[Any, Any, bool]"
      },
      {
        "line": 171,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 189,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 191,
        "type": "error",
        "message": "Signature of \"hset\" incompatible with supertype \"RedisService\"  [override]"
      },
      {
        "line": 191,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 191,
        "type": "note",
        "message": "def hset(self, name: str, key: str, value: Any) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 191,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 191,
        "type": "note",
        "message": "def hset(self, key: str, field: str, value: Any) -> Coroutine[Any, Any, int]"
      },
      {
        "line": 212,
        "type": "error",
        "message": "Signature of \"hget\" incompatible with supertype \"RedisService\"  [override]"
      },
      {
        "line": 212,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 212,
        "type": "note",
        "message": "def hget(self, name: str, key: str) -> Coroutine[Any, Any, str | None]"
      },
      {
        "line": 212,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 212,
        "type": "note",
        "message": "def hget(self, key: str, field: str) -> Coroutine[Any, Any, Any]"
      }
    ],
    "app/tests/integration/infrastructure/persistence/repositories/test_repository.py": [
      {
        "line": 113,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[Patient]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 118,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 263,
        "type": "error",
        "message": "Missing named argument \"middle_name\" for \"Name\"  [call-arg]"
      },
      {
        "line": 317,
        "type": "error",
        "message": "Unexpected keyword argument \"contact_info\" for \"Patient\"; did you mean \"_contact_info\"?  [call-arg]"
      },
      {
        "line": 319,
        "type": "error",
        "message": "Argument \"name\" to \"Patient\" has incompatible type \"Name\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 322,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date | None\"; expected \"datetime | str\"  [arg-type]"
      }
    ],
    "app/tests/integration/infrastructure/persistence/repositories/test_patient_repository_int.py": [
      {
        "line": 19,
        "type": "error",
        "message": "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Variable \"app.tests.integration.infrastructure.persistence.repositories.test_patient_repository_int.TestBase\" is not valid as a type  [valid-type]"
      },
      {
        "line": 39,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 39,
        "type": "error",
        "message": "Invalid base class \"TestBase\"  [misc]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Need type annotation for \"patients\"  [var-annotated]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Variable \"app.tests.integration.infrastructure.persistence.repositories.test_patient_repository_int.TestBase\" is not valid as a type  [valid-type]"
      },
      {
        "line": 58,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Invalid base class \"TestBase\"  [misc]"
      },
      {
        "line": 71,
        "type": "error",
        "message": "Need type annotation for \"user\"  [var-annotated]"
      }
    ],
    "app/tests/enhanced/test_neurotransmitter_mapping_integration.py": [
      {
        "line": 87,
        "type": "error",
        "message": "Incompatible return value type (got \"tuple[DigitalTwinState, TemporalKnowledgeGraph | None, BayesianBeliefNetwork | None]\", expected \"DigitalTwinState\")  [return-value]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"add_receptor_profile\"; maybe \"update_receptor_profiles\"?  [attr-defined]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"get_neurotransmitter_mapping\"; maybe \"initialize_neurotransmitter_mapping\"?  [attr-defined]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Unexpected keyword argument \"time_resolution_hours\" for \"simulate_neurotransmitter_cascade\" of \"EnhancedDigitalTwinCoreService\"  [call-arg]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]"
      },
      {
        "line": 284,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"predict_medication_effects\"  [attr-defined]"
      },
      {
        "line": 328,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_temporal_response\"  [attr-defined]"
      },
      {
        "line": 376,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"generate_clinical_insights\"  [attr-defined]"
      },
      {
        "line": 419,
        "type": "error",
        "message": "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_regional_effects\"  [attr-defined]"
      }
    ],
    "app/domain/services/enhanced_digital_twin_core_service.py": [
      {
        "line": 381,
        "type": "note",
        "message": "\"simulate_neurotransmitter_cascade\" of \"EnhancedDigitalTwinCoreService\" defined here"
      }
    ],
    "app/infrastructure/repositories/temporal_sequence_repository.py": [
      {
        "line": 43,
        "type": "error",
        "message": "\"TemporalSequence[Any]\" has no attribute \"created_by\"; maybe \"created_at\"?  [attr-defined]"
      },
      {
        "line": 54,
        "type": "error",
        "message": "Name \"logger\" is not defined  [name-defined]"
      },
      {
        "line": 183,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[TemporalDataPointModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 190,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[TemporalSequenceModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 193,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 211,
        "type": "error",
        "message": "Too many arguments for \"where\" of \"Select\"  [call-arg]"
      }
    ],
    "app/infrastructure/repositories/temporal_event_repository.py": [
      {
        "line": 150,
        "type": "error",
        "message": "No overload variant of \"execute\" of \"AsyncSession\" matches argument types \"Select\", \"str | None\", \"str\"  [call-overload]"
      },
      {
        "line": 150,
        "type": "note",
        "message": "Possible overload variants:"
      },
      {
        "line": 150,
        "type": "note",
        "message": "def [_T] execute(self, statement: Any, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]"
      },
      {
        "line": 150,
        "type": "note",
        "message": "def execute(self, statement: UpdateBase, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]"
      },
      {
        "line": 150,
        "type": "note",
        "message": "def execute(self, statement: Executable, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]"
      },
      {
        "line": 167,
        "type": "error",
        "message": "Argument \"event_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 168,
        "type": "error",
        "message": "Argument \"correlation_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Argument \"parent_event_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 170,
        "type": "error",
        "message": "Argument \"patient_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/unit_of_work/unit_of_work.py": [
      {
        "line": 89,
        "type": "error",
        "message": "Item \"None\" of \"Session | None\" has no attribute \"begin\"  [union-attr]"
      },
      {
        "line": 260,
        "type": "error",
        "message": "Argument 1 to \"contextmanager\" has incompatible type \"Callable[[SQLAlchemyUnitOfWork], AbstractContextManager[SQLAlchemyUnitOfWork]]\"; expected \"Callable[[SQLAlchemyUnitOfWork], Iterator[<nothing>]]\"  [arg-type]"
      },
      {
        "line": 261,
        "type": "error",
        "message": "The return type of a generator function should be \"Generator\" or one of its supertypes  [misc]"
      },
      {
        "line": 267,
        "type": "error",
        "message": "Argument 1 to \"contextmanager\" has incompatible type \"Callable[[SQLAlchemyUnitOfWork], AbstractContextManager[SQLAlchemyUnitOfWork]]\"; expected \"Callable[[SQLAlchemyUnitOfWork], Iterator[<nothing>]]\"  [arg-type]"
      },
      {
        "line": 268,
        "type": "error",
        "message": "The return type of a generator function should be \"Generator\" or one of its supertypes  [misc]"
      },
      {
        "line": 509,
        "type": "error",
        "message": "Too many arguments for \"ABC\"  [call-arg]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/temporal_sequence_repository.py": [
      {
        "line": 55,
        "type": "error",
        "message": "\"TemporalSequence[Any]\" has no attribute \"time_points\"  [attr-defined]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Unexpected keyword argument \"time_points\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Unexpected keyword argument \"time_points\" for \"TemporalSequence\"  [call-arg]"
      },
      {
        "line": 162,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[TemporalDataPointModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 169,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[TemporalSequenceModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 172,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Unexpected keyword argument \"time_points\" for \"TemporalSequence\"  [call-arg]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/patient_repository.py": [
      {
        "line": 189,
        "type": "error",
        "message": "Argument 1 to \"from_domain\" of \"Patient\" has incompatible type \"app.domain.entities.patient.Patient\"; expected \"app.core.domain.entities.patient.Patient\"  [arg-type]"
      },
      {
        "line": 216,
        "type": "error",
        "message": "Value of type \"str | None\" is not indexable  [index]"
      },
      {
        "line": 235,
        "type": "error",
        "message": "Incompatible return value type (got \"app.core.domain.entities.patient.Patient\", expected \"app.domain.entities.patient.Patient | None\")  [return-value]"
      },
      {
        "line": 266,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 301,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 325,
        "type": "error",
        "message": "Returning Any from function declared to return \"list[Patient]\"  [no-any-return]"
      },
      {
        "line": 330,
        "type": "error",
        "message": "Incompatible default for argument \"patient_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]"
      },
      {
        "line": 330,
        "type": "note",
        "message": "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True"
      },
      {
        "line": 330,
        "type": "note",
        "message": "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase"
      },
      {
        "line": 349,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"<subclass of \"Patient\" and \"str\"> | <subclass of \"Patient\" and \"UUID\">\", variable has type \"UUID\")  [assignment]"
      },
      {
        "line": 370,
        "type": "error",
        "message": "Unexpected keyword argument \"exclude_unset\" for \"model_dump\" of \"Patient\"; did you mean \"exclude_none\"?  [call-arg]"
      },
      {
        "line": 706,
        "type": "error",
        "message": "Name \"PatientRepositoryFactory\" already defined on line 85  [no-redef]"
      },
      {
        "line": 370,
        "type": "error",
        "message": "Unexpected keyword argument \"exclude_unset\" for \"model_dump\" of \"Patient\"; did you mean \"exclude_none\"?  [call-arg]"
      },
      {
        "line": 499,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 533,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 536,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 546,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 549,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 568,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 571,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 581,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 584,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 602,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 634,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      },
      {
        "line": 654,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 681,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      },
      {
        "line": 703,
        "type": "error",
        "message": "Returning Any from function declared to return \"Patient | None\"  [no-any-return]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/biometric_rule_repository.py": [
      {
        "line": 50,
        "type": "error",
        "message": "Argument 1 to \"map_rule_entity_to_model\" has incompatible type \"BiometricAlertRule\"; expected \"BiometricRule\"  [arg-type]"
      },
      {
        "line": 55,
        "type": "error",
        "message": "Incompatible return value type (got \"BiometricRule\", expected \"BiometricAlertRule\")  [return-value]"
      },
      {
        "line": 65,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, BiometricAlertRule | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, BiometricRule | None]\" in supertype \"IBiometricRuleRepository\"  [override]"
      },
      {
        "line": 73,
        "type": "error",
        "message": "Incompatible return value type (got \"BiometricRule\", expected \"BiometricAlertRule | None\")  [return-value]"
      },
      {
        "line": 89,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, BiometricAlertRule]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, BiometricRule]\" in supertype \"IBiometricRuleRepository\"  [override]"
      },
      {
        "line": 97,
        "type": "error",
        "message": "Argument 1 of \"update\" is incompatible with supertype \"IBiometricRuleRepository\"; supertype defines the argument type as \"BiometricRule\"  [override]"
      },
      {
        "line": 97,
        "type": "note",
        "message": "This violates the Liskov substitution principle"
      },
      {
        "line": 97,
        "type": "note",
        "message": "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides"
      },
      {
        "line": 106,
        "type": "error",
        "message": "Argument 1 to \"map_rule_entity_to_model\" has incompatible type \"BiometricAlertRule\"; expected \"BiometricRule\"  [arg-type]"
      },
      {
        "line": 108,
        "type": "error",
        "message": "Argument 1 to \"Update\" has incompatible type \"type[BiometricRuleModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 138,
        "type": "error",
        "message": "Argument 1 to \"Delete\" has incompatible type \"type[BiometricRuleModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 160,
        "type": "error",
        "message": "Signature of \"get_by_patient_id\" incompatible with supertype \"IBiometricRuleRepository\"  [override]"
      },
      {
        "line": 160,
        "type": "note",
        "message": "Superclass:"
      },
      {
        "line": 160,
        "type": "note",
        "message": "def get_by_patient_id(self, patient_id: UUID, limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[BiometricRule]]"
      },
      {
        "line": 160,
        "type": "note",
        "message": "Subclass:"
      },
      {
        "line": 160,
        "type": "note",
        "message": "def get_by_patient_id(self, patient_id: UUID) -> Coroutine[Any, Any, list[BiometricAlertRule]]"
      },
      {
        "line": 166,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      },
      {
        "line": 202,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      },
      {
        "line": 215,
        "type": "error",
        "message": "Too many arguments for \"where\" of \"Select\"  [call-arg]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      },
      {
        "line": 244,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"UUID\")  [assignment]"
      },
      {
        "line": 255,
        "type": "error",
        "message": "Too many arguments for \"where\" of \"Select\"  [call-arg]"
      },
      {
        "line": 277,
        "type": "error",
        "message": "Argument 1 to \"Update\" has incompatible type \"type[BiometricRuleModel]\"; expected \"str | Selectable\"  [arg-type]"
      },
      {
        "line": 308,
        "type": "error",
        "message": "Cannot instantiate abstract class \"SQLAlchemyBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"list_all\"  [abstract]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/provider.py": [
      {
        "line": 55,
        "type": "error",
        "message": "Need type annotation for \"user\"  [var-annotated]"
      },
      {
        "line": 67,
        "type": "error",
        "message": "Need type annotation for \"appointments\"  [var-annotated]"
      },
      {
        "line": 74,
        "type": "error",
        "message": "Need type annotation for \"prescriptions_made\"  [var-annotated]"
      },
      {
        "line": 79,
        "type": "error",
        "message": "Need type annotation for \"clinical_notes\"  [var-annotated]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "\"Provider\" has no attribute \"user\"  [attr-defined]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Argument 1 to \"UUID\" has incompatible type \"UUID | str\"; expected \"str | None\"  [arg-type]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "\"Provider\" has no attribute \"specialty\"; maybe \"add_specialty\" or \"specialties\"?  [attr-defined]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "\"Provider\" has no attribute \"npi\"  [attr-defined]"
      },
      {
        "line": 116,
        "type": "error",
        "message": "Module \"app.domain.entities.provider\" has no attribute \"Specialty\"  [attr-defined]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Unexpected keyword argument \"user_id\" for \"Provider\"  [call-arg]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Unexpected keyword argument \"specialty\" for \"Provider\"; did you mean \"specialties\"?  [call-arg]"
      },
      {
        "line": 124,
        "type": "error",
        "message": "Unexpected keyword argument \"active\" for \"Provider\"  [call-arg]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/mappers/user_mapper.py": [
      {
        "line": 196,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 240,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"UserRole\", variable has type \"str\")  [assignment]"
      }
    ],
    "app/infrastructure/persistence/repositories/redis_token_blacklist_repository.py": [
      {
        "line": 10,
        "type": "error",
        "message": "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]"
      }
    ],
    "app/infrastructure/persistence/repositories/audit_log_repository.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Incompatible import of \"select\" (imported name has type overloaded function, local name has type \"type[Select]\")  [assignment]"
      },
      {
        "line": 207,
        "type": "error",
        "message": "Argument 1 to \"where\" of \"Select\" has incompatible type \"object\"; expected \"str | bool | Visitable\"  [arg-type]"
      },
      {
        "line": 213,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"Column[Any]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 214,
        "type": "error",
        "message": "Argument 1 to \"where\" of \"Select\" has incompatible type \"object\"; expected \"str | bool | Visitable\"  [arg-type]"
      },
      {
        "line": 222,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"Column[Any]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "Argument 1 to \"where\" of \"Select\" has incompatible type \"object\"; expected \"str | bool | Visitable\"  [arg-type]"
      },
      {
        "line": 236,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"Column[Any]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 237,
        "type": "error",
        "message": "Argument 2 has incompatible type \"object\"; expected \"ClauseElement | str | bool\"  [arg-type]"
      }
    ],
    "app/infrastructure/models/user_model.py": [
      {
        "line": 25,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[Any]\")  [assignment]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/repositories/test_patient_repository.py": [
      {
        "line": 289,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 418,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 422,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 430,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 461,
        "type": "error",
        "message": "Item \"None\" of \"Any | None\" has no attribute \"isoformat\"  [union-attr]"
      },
      {
        "line": 478,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 558,
        "type": "error",
        "message": "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]"
      },
      {
        "line": 591,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      },
      {
        "line": 608,
        "type": "error",
        "message": "Cannot assign to a method  [method-assign]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/sqlalchemy/models/test_model_validation.py": [
      {
        "line": 23,
        "type": "error",
        "message": "Function \"DomainUser\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 24,
        "type": "error",
        "message": "Function \"UserModel\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Function \"LegacyUserModel\" could always be true in boolean context  [truthy-function]"
      },
      {
        "line": 26,
        "type": "error",
        "message": "Function \"UserMapper\" could always be true in boolean context  [truthy-function]"
      }
    ],
    "app/tests/unit/infrastructure/persistence/repositories/test_redis_token_blacklist_repository.py": [
      {
        "line": 38,
        "type": "error",
        "message": "Argument \"redis_service\" to \"RedisTokenBlacklistRepository\" has incompatible type \"IRedisService\"; expected \"RedisCacheService\"  [arg-type]"
      }
    ],
    "app/tests/unit/application/use_cases/patient/test_update_patient_use_case.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      }
    ],
    "app/tests/unit/application/use_cases/patient/test_get_patient_by_id_use_case.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      }
    ],
    "app/tests/security/db/test_repository_security.py": [
      {
        "line": 143,
        "type": "error",
        "message": "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]"
      },
      {
        "line": 444,
        "type": "error",
        "message": "Name \"test_phi_never_appears_in_exceptions\" already defined on line 362  [no-redef]"
      }
    ],
    "app/tests/security/db/test_db_phi_protection.py": [
      {
        "line": 90,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 99,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 100,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 102,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 103,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 104,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Argument \"patient_repository_cls\" to \"AsyncSQLAlchemyUnitOfWork\" has incompatible type \"type[PatientRepository]\"; expected \"type[IPatientRepository]\"  [arg-type]"
      },
      {
        "line": 518,
        "type": "error",
        "message": "\"IPatientRepository\" has no attribute \"create\"  [attr-defined]"
      },
      {
        "line": 635,
        "type": "error",
        "message": "Argument \"patient_repository_cls\" to \"AsyncSQLAlchemyUnitOfWork\" has incompatible type \"type[PatientRepository]\"; expected \"type[IPatientRepository]\"  [arg-type]"
      },
      {
        "line": 656,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"IPatientRepository\" has incompatible type \"UUID\"; expected \"str\"  [arg-type]"
      }
    ],
    "app/tests/integration/infrastructure/persistence/test_patient_encryption_integration.py": [
      {
        "line": 98,
        "type": "error",
        "message": "Item \"None\" of \"BaseEncryptionService | None\" has no attribute \"_direct_key\"  [union-attr]"
      },
      {
        "line": 101,
        "type": "error",
        "message": "Item \"None\" of \"BaseEncryptionService | None\" has no attribute \"_direct_key\"  [union-attr]"
      },
      {
        "line": 262,
        "type": "error",
        "message": "Missing named argument \"email\" for \"ContactInfo\"  [call-arg]"
      },
      {
        "line": 355,
        "type": "error",
        "message": "Argument 1 to \"create\" of \"PatientRepository\" has incompatible type \"app.core.domain.entities.patient.Patient\"; expected \"app.domain.entities.patient.Patient\"  [arg-type]"
      },
      {
        "line": 415,
        "type": "error",
        "message": "Item \"None\" of \"BaseEncryptionService | None\" has no attribute \"decrypt_string\"  [union-attr]"
      },
      {
        "line": 439,
        "type": "error",
        "message": "Argument 1 to \"create\" of \"PatientRepository\" has incompatible type \"app.core.domain.entities.patient.Patient\"; expected \"app.domain.entities.patient.Patient\"  [arg-type]"
      }
    ],
    "app/tests/infrastructure/repositories/test_temporal_event_repository.py": [
      {
        "line": 43,
        "type": "error",
        "message": "Need type annotation for \"event\"  [var-annotated]"
      },
      {
        "line": 63,
        "type": "error",
        "message": "Need type annotation for \"child_event\"  [var-annotated]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "\"Callable[[UUID], Coroutine[Any, Any, list[CorrelatedEvent[Any]]]]\" has no attribute \"assert_called_once_with\"  [attr-defined]"
      }
    ],
    "app/infrastructure/security/auth/authentication_service.py": [
      {
        "line": 29,
        "type": "error",
        "message": "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"IJwtService\"  [attr-defined]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"UUID\", variable has type \"str\")  [assignment]"
      },
      {
        "line": 139,
        "type": "error",
        "message": "Argument 1 to \"get_by_id\" of \"UserRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]"
      },
      {
        "line": 146,
        "type": "error",
        "message": "Argument 1 to \"_map_user_model_to_domain\" of \"AuthenticationService\" has incompatible type \"User\"; expected \"UserModelProxy\"  [arg-type]"
      },
      {
        "line": 178,
        "type": "error",
        "message": "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"Role\"  [arg-type]"
      },
      {
        "line": 184,
        "type": "error",
        "message": "\"UserModelProxy\" has no attribute \"id\"  [attr-defined]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Unexpected keyword argument \"subject\" for \"create_access_token\" of \"IJwtService\"  [call-arg]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Unexpected keyword argument \"additional_claims\" for \"create_access_token\" of \"IJwtService\"  [call-arg]"
      },
      {
        "line": 220,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"str\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 223,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 245,
        "type": "error",
        "message": "Unexpected keyword argument \"subject\" for \"create_refresh_token\" of \"IJwtService\"  [call-arg]"
      },
      {
        "line": 245,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"str\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 246,
        "type": "error",
        "message": "Returning Any from function declared to return \"str\"  [no-any-return]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Dict entry 3 has incompatible type \"str\": \"Any | int\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 313,
        "type": "error",
        "message": "Dict entry 4 has incompatible type \"str\": \"UUID | str\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 314,
        "type": "error",
        "message": "Dict entry 5 has incompatible type \"str\": \"list[UserRole] | set[UserRole] | list[str] | set[str]\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 334,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"TokenPayload\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 357,
        "type": "error",
        "message": "Dict entry 3 has incompatible type \"str\": \"Any | int\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 358,
        "type": "error",
        "message": "Dict entry 4 has incompatible type \"str\": \"UUID | str\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 359,
        "type": "error",
        "message": "Dict entry 5 has incompatible type \"str\": \"list[UserRole] | set[UserRole] | list[str] | set[str]\"; expected \"str\": \"str\"  [dict-item]"
      },
      {
        "line": 437,
        "type": "error",
        "message": "Incompatible types in \"await\" (actual type \"TokenPayload\", expected type \"Awaitable[Any]\")  [misc]"
      },
      {
        "line": 479,
        "type": "error",
        "message": "\"IJwtService\" has no attribute \"logout\"  [attr-defined]"
      },
      {
        "line": 547,
        "type": "error",
        "message": "\"IJwtService\" has no attribute \"blacklist_session\"  [attr-defined]"
      }
    ],
    "app/infrastructure/repositories/alert_repository.py": [
      {
        "line": 67,
        "type": "error",
        "message": "\"IEncryptionService\" has no attribute \"encrypt_json\"  [attr-defined]"
      },
      {
        "line": 149,
        "type": "error",
        "message": "\"IEncryptionService\" has no attribute \"encrypt_json\"  [attr-defined]"
      },
      {
        "line": 185,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, Sequence[Alert]]\" of \"get_alerts\" incompatible with return type \"Coroutine[Any, Any, list[Alert]]\" in supertype \"IAlertRepository\"  [override]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"type[UserModelProxy]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 276,
        "type": "error",
        "message": "\"type[UserModelProxy]\" has no attribute \"id\"  [attr-defined]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "Argument 1 to \"Select\" has incompatible type \"type[UserModelProxy]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]"
      },
      {
        "line": 312,
        "type": "error",
        "message": "\"type[UserModelProxy]\" has no attribute \"id\"  [attr-defined]"
      },
      {
        "line": 320,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 334,
        "type": "error",
        "message": "\"IEncryptionService\" has no attribute \"decrypt_json\"  [attr-defined]"
      },
      {
        "line": 336,
        "type": "error",
        "message": "Argument 1 to \"decrypt\" of \"IEncryptionService\" has incompatible type \"str\"; expected \"bytes\"  [arg-type]"
      },
      {
        "line": 347,
        "type": "error",
        "message": "Argument \"message\" to \"Alert\" has incompatible type \"bytes\"; expected \"str\"  [arg-type]"
      },
      {
        "line": 351,
        "type": "error",
        "message": "Argument \"resolution_notes\" to \"Alert\" has incompatible type \"bytes | None\"; expected \"str | None\"  [arg-type]"
      }
    ],
    "app/infrastructure/repositories/sqlalchemy/biometric_alert_rule_repository.py": [
      {
        "line": 34,
        "type": "error",
        "message": "Cannot instantiate abstract class \"SQLAlchemyBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"list_all\"  [abstract]"
      },
      {
        "line": 53,
        "type": "error",
        "message": "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/repositories/user_repository.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"async_sessionmaker[Any]\")  [assignment]"
      },
      {
        "line": 77,
        "type": "error",
        "message": "Returning Any from function declared to return \"AsyncSession\"  [no-any-return]"
      },
      {
        "line": 80,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" of \"create\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 133,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 152,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      },
      {
        "line": 195,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_username\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 221,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_email\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 249,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 272,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      },
      {
        "line": 316,
        "type": "error",
        "message": "Function does not return a value  [func-returns-value]"
      },
      {
        "line": 330,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[app.core.domain.entities.user.User]]\" of \"list_all\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.entities.user.User]]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 362,
        "type": "error",
        "message": "Return type \"Coroutine[Any, Any, list[app.core.domain.entities.user.User]]\" of \"get_by_role\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.entities.user.User]]\" in supertype \"UserRepository\"  [override]"
      },
      {
        "line": 414,
        "type": "error",
        "message": "Argument 1 to \"select_from\" of \"Select\" has incompatible type \"type[User]\"; expected \"FromClause\"  [arg-type]"
      },
      {
        "line": 417,
        "type": "error",
        "message": "Returning Any from function declared to return \"int\"  [no-any-return]"
      },
      {
        "line": 440,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      },
      {
        "line": 463,
        "type": "error",
        "message": "Returning Any from function declared to return \"bool\"  [no-any-return]"
      }
    ],
    "app/infrastructure/persistence/sqlalchemy/models/__init__.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 41,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricAlertModel]\")  [assignment]"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 42,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricRuleModel]\")  [assignment]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 43,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricTwinModel]\")  [assignment]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 44,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[DigitalTwinModel]\")  [assignment]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 52,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[AppointmentModel]\")  [assignment]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 58,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[ClinicalNoteModel]\")  [assignment]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 64,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[MedicationModel]\")  [assignment]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Cannot assign to a type  [misc]"
      },
      {
        "line": 70,
        "type": "error",
        "message": "Incompatible types in assignment (expression has type \"None\", variable has type \"type[AuditLog]\")  [assignment]"
      }
    ],
    "app/infrastructure/di/dependencies.py": [
      {
        "line": 66,
        "type": "error",
        "message": "Too many arguments for \"NeurotransmitterVisualizationPreprocessor\"  [call-arg]"
      },
      {
        "line": 91,
        "type": "error",
        "message": "Argument 1 to \"SqlAlchemyEventRepository\" has incompatible type \"AsyncSession | None\"; expected \"AsyncSession\"  [arg-type]"
      },
      {
        "line": 109,
        "type": "error",
        "message": "Argument 1 to \"SqlAlchemyTemporalSequenceRepository\" has incompatible type \"AsyncSession | None\"; expected \"AsyncSession\"  [arg-type]"
      }
    ],
    "app/core/services/ml/providers/text_generation.py": [
      {
        "line": 59,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.services.ml.mentalllama\"  [import-not-found]"
      }
    ],
    "app/infrastructure/ml/mentallama/model_loader.py": [
      {
        "line": 24,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.logging.phi_logger\"  [import-not-found]"
      }
    ],
    "app/infrastructure/ml/pat/api.py": [
      {
        "line": 14,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.auth.jwt_handler\"  [import-not-found]"
      }
    ],
    "app/presentation/api/dependencies/repository.py": [
      {
        "line": 68,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.patient_repository\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/dependencies/database.py": [
      {
        "line": 63,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_rule_repository\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/actigraphy.py": [
      {
        "line": 41,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.actigraphy\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/appointments.py": [
      {
        "line": 30,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.appointment\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/biometric_alert_rules.py": [
      {
        "line": 17,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.biometric_alert\"  [import-not-found]"
      },
      {
        "line": 23,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.dependencies.auth\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/biometric_alerts.py": [
      {
        "line": 18,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]"
      },
      {
        "line": 24,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.biometric_alert_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/clinical_analysis.py": [
      {
        "line": 20,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.ml_schemas\"  [import-not-found]"
      },
      {
        "line": 25,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/clinical_sessions.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.clinical_session\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/digital_twins.py": [
      {
        "line": 37,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.digital_twin_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/mentallama.py": [
      {
        "line": 8,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.ml\"  [import-not-found]"
      },
      {
        "line": 10,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/symptom_assessments.py": [
      {
        "line": 31,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.symptom_assessment\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/temporal_neurotransmitter.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.temporal_neurotransmitter\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/v1/endpoints/xgboost.py": [
      {
        "line": 16,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.api.routes.xgboost\"  [import-not-found]"
      },
      {
        "line": 30,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.xgboost_schemas\"  [import-not-found]"
      }
    ],
    "app/tests/application/presentation/api/routes.py": [
      {
        "line": 198,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.presentation.api.routers.ml.test_xgboost_router\"  [import-not-found]"
      }
    ],
    "app/tests/core/security/base_security_test_utils.py": [
      {
        "line": 9,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.authentication\"  [import-not-found]"
      },
      {
        "line": 10,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.security.rbac\"  [import-not-found]"
      }
    ],
    "app/tests/mocks/mock_auth_dependencies.py": [
      {
        "line": 13,
        "type": "error",
        "message": "Cannot find implementation or library stub for module named \"app.core.dto.auth.token\"  [import-not-found]"
      }
    ]
  },
  "analysis": {
    "total_files": 362,
    "total_issues": 4104,
    "issue_types": {
      "Module has no attribute \"__import__\"  [attr-defined]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.requests\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.analytics.responses\"  [import-not-found]": 1,
      "Library stubs not installed for \"passlib.context\"  [import-untyped]": 2,
      "Hint: \"python3 -m pip install types-passlib\"": 1,
      "(or run \"mypy --install-types\" to install all missing stub packages)": 1,
      "Returning Any from function declared to return \"bool\"  [no-any-return]": 46,
      "Returning Any from function declared to return \"str\"  [no-any-return]": 20,
      "Name \"List\" is not defined  [name-defined]": 4,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import List\")": 4,
      "Returning Any from function declared to return \"list[str]\"  [no-any-return]": 5,
      "Returning Any from function declared to return \"dict[str, float]\"  [no-any-return]": 1,
      "\"DiagnosisCode\" has no attribute \"CODE_PATTERN\"  [attr-defined]": 2,
      "Function \"app.domain.value_objects.address.Address.dict\" is not valid as a type  [valid-type]": 1,
      "Perhaps you need \"Callable[...]\" or a callback protocol?": 2,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]": 1,
      "Function \"builtins.any\" is not valid as a type  [valid-type]": 1,
      "Perhaps you meant \"typing.Any\" instead of \"any\"?": 1,
      "Name \"InitializationError\" already defined on line 133  [no-redef]": 1,
      "\"__init__\" of \"BaseException\" defined here": 1,
      "\"ConfigurationError\" defined here": 11,
      "\"ExternalServiceException\" defined here": 30,
      "\"ResourceNotFoundError\" defined here": 8,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_with\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_once_with\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_called\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_called_once\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_not_called\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_once\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_with\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_awaited_once_with\" incompatible with return type \"None\" in supertype \"AsyncMockMixin\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"assert_any_call\" incompatible with return type \"None\" in supertype \"NonCallableMock\"  [override]": 1,
      "Incompatible types in assignment (expression has type \"type[MockYamlModule]\", target has type Module)  [assignment]": 2,
      "Module has no attribute \"safe_load\"  [attr-defined]": 1,
      "Module has no attribute \"dump\"  [attr-defined]": 1,
      "Need type annotation for \"_predictions\" (hint: \"_predictions: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_sessions\" (hint: \"_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]": 3,
      "Need type annotation for \"_digital_twins\" (hint: \"_digital_twins: Dict[<type>, <type>] = ...\")  [var-annotated]": 2,
      "Cannot determine type of \"state\"  [has-type]": 1,
      "Cannot determine type of \"new_state\"  [has-type]": 1,
      "Unused \"type: ignore\" comment  [unused-ignore]": 38,
      "Argument 1 to \"get\" of \"dict\" has incompatible type \"Role | str\"; expected \"Role\"  [arg-type]": 1,
      "Incompatible return value type (got \"tuple[int | float, int]\", expected \"tuple[int, int]\")  [return-value]": 1,
      "Returning Any from function declared to return \"dict[str, list[dict[str, Any]]]\"  [no-any-return]": 1,
      "Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]": 68,
      "Returning Any from function declared to return \"list[dict[str, Any]]\"  [no-any-return]": 4,
      "Function \"app.domain.value_objects.emergency_contact.EmergencyContact.dict\" is not valid as a type  [valid-type]": 1,
      "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 5,
      "PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True": 100,
      "Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase": 100,
      "Incompatible default for argument \"resource_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"action\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"permission\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"resource\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"until\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"reason\" (default has type \"None\", argument has type \"str\")  [assignment]": 4,
      "Incompatible default for argument \"attempts\" (default has type \"None\", argument has type \"int\")  [assignment]": 1,
      "Incompatible default for argument \"original_exception\" (default has type \"None\", argument has type \"Exception\")  [assignment]": 1,
      "Incompatible default for argument \"entity_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"entity_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"message\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"repository\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"operation\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"current_state\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"required_state\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 4,
      "Incompatible default for argument \"conflicting_appointment_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Name \"Dict\" is not defined  [name-defined]": 5,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Dict\")": 5,
      "Name \"Any\" is not defined  [name-defined]": 5,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Any\")": 5,
      "Name \"ValidationError\" is not defined  [name-defined]": 14,
      "Name \"Optional\" is not defined  [name-defined]": 2,
      "Did you forget to import it from \"typing\"? (Suggestion: \"from typing import Optional\")": 2,
      "Name \"ResourceNotFoundError\" is not defined  [name-defined]": 2,
      "Incompatible default for argument \"description\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"parameter\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"model_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"service_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Unexpected keyword argument \"details\" for \"__init__\" of \"BaseException\"; did you mean \"detail\"?  [call-arg]": 1,
      "Need type annotation for \"phi_detected\" (hint: \"phi_detected: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"findings\" (hint: \"findings: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"findings\"  [var-annotated]": 2,
      "Need type annotation for \"files_examined\" (hint: \"files_examined: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"generated_files\" (hint: \"generated_files: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"None\")  [assignment]": 2,
      "Incompatible default for argument \"output_path\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Value of type \"Collection[str]\" is not indexable  [index]": 34,
      "Unsupported target for indexed assignment (\"Collection[str]\")  [index]": 23,
      "Unsupported operand types for + (\"object\" and \"int\")  [operator]": 4,
      "\"object\" has no attribute \"append\"  [attr-defined]": 18,
      "Unsupported left operand type for + (\"object\")  [operator]": 1,
      "Incompatible types in assignment (expression has type \"float\", target has type \"Collection[str]\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"int\", target has type \"Collection[str]\")  [assignment]": 1,
      "\"Collection[str]\" has no attribute \"items\"  [attr-defined]": 3,
      "Unsupported operand types for <= (\"int\" and \"Collection[str]\")  [operator]": 2,
      "Left operand is of type \"Collection[str] | int\"": 2,
      "Argument 1 to \"fromisoformat\" of \"date\" has incompatible type \"Collection[str]\"; expected \"str\"  [arg-type]": 1,
      "Value of type \"object\" is not indexable  [index]": 21,
      "Unsupported target for indexed assignment (\"object\")  [index]": 9,
      "Cannot find implementation or library stub for module named \"dashboard.dashboard\"  [import-not-found]": 1,
      "Item \"None\" of \"date | str | None\" has no attribute \"isoformat\"  [union-attr]": 1,
      "Returning Any from function declared to return \"dict[str, Any] | None\"  [no-any-return]": 4,
      "Cannot find implementation or library stub for module named \"app.domain.events.base_event\"  [import-not-found]": 1,
      "Incompatible default for argument \"properties\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 2,
      "Incompatible default for argument \"source\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"temporal_constraints\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 1,
      "Need type annotation for \"neighbors\" (hint: \"neighbors: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"adjacency\" (hint: \"adjacency: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"chains\" (hint: \"chains: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"str\", target has type \"float\")  [assignment]": 1,
      "Need type annotation for \"configs\"  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"str\")  [assignment]": 4,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"ClinicalSignificance\")  [assignment]": 1,
      "Value expression in dictionary comprehension has incompatible type \"BiometricDataPoint | None\"; expected type \"BiometricDataPoint\"  [misc]": 1,
      "Module \"datetime\" has no attribute \"UTC\"  [attr-defined]": 13,
      "Need type annotation for \"client_requests\" (hint: \"client_requests: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible default for argument \"roles\" (default has type \"None\", argument has type \"list[str]\")  [assignment]": 1,
      "Incompatible import of \"AuthorizationError\" (imported name has type \"type[app.core.exceptions.base_exceptions.AuthorizationError]\", local name has type \"type[app.core.exceptions.auth_exceptions.AuthorizationError]\")  [assignment]": 1,
      "Incompatible import of \"SecurityException\" (imported name has type \"type[app.core.exceptions.base_exceptions.SecurityException]\", local name has type \"type[app.core.errors.security_exceptions.SecurityException]\")  [assignment]": 1,
      "Incompatible import of \"InvalidTokenError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.InvalidTokenError]\", local name has type \"type[app.core.exceptions.auth_exceptions.InvalidTokenError]\")  [assignment]": 1,
      "Incompatible import of \"TokenExpiredError\" (imported name has type \"type[app.core.exceptions.jwt_exceptions.TokenExpiredError]\", local name has type \"type[app.core.exceptions.auth_exceptions.TokenExpiredError]\")  [assignment]": 1,
      "Returning Any from function declared to return \"T\"  [no-any-return]": 2,
      "Incompatible types in \"await\" (actual type \"T\", expected type \"Awaitable[Any]\")  [misc]": 1,
      "Incompatible return value type (got \"Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T]]\", expected \"Callable[..., T]\")  [return-value]": 1,
      "Argument 1 to \"format_iso\" has incompatible type \"datetime | None\"; expected \"datetime\"  [arg-type]": 1,
      "Incompatible default for argument \"first_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"last_name\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"provider_type\" (default has type \"None\", argument has type \"ProviderType | str\")  [assignment]": 1,
      "\"Provider\" defined here": 7,
      "Incompatible types in assignment (expression has type \"Neurotransmitter\", variable has type \"BrainRegion\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"NeurotransmitterStateAdapter\", variable has type \"BrainRegionStateAdapter\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"dict[Any, BrainRegionStateAdapter]\", variable has type \"dict[Neurotransmitter, NeurotransmitterStateAdapter]\")  [assignment]": 1,
      "Module has no attribute \"time\"  [attr-defined]": 1,
      "Argument 1 to \"_ensure_datetime\" has incompatible type \"datetime | Any | None\"; expected \"datetime | str\"  [arg-type]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"predict\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Incompatible types in \"await\" (actual type \"dict[str, Any]\", expected type \"Awaitable[Any]\")  [misc]": 2,
      "Signature of \"is_initialized\" incompatible with supertype \"XGBoostInterface\"  [override]": 1,
      "Superclass:": 75,
      "def is_initialized(self) -> bool": 1,
      "Subclass:": 75,
      "bool": 1,
      "Return type \"Coroutine[Any, Any, list[dict[str, Any]]]\" of \"get_available_models\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"get_model_info\" incompatible with return type \"dict[str, Any]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Attribute \"_observers\" already defined on line 162  [no-redef]": 1,
      "Unexpected keyword argument \"field\" for \"ConfigurationError\"  [call-arg]": 6,
      "Name \"ServiceConfigurationError\" is not defined  [name-defined]": 4,
      "Name \"uuid\" is not defined  [name-defined]": 3,
      "Name \"integrate_with_digital_twin\" already defined on line 180  [no-redef]": 1,
      "Name \"get_model_info\" already defined on line 173  [no-redef]": 1,
      "Name \"EventType\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"Observer\" already defined (possibly by an import)  [no-redef]": 1,
      "Unexpected keyword argument \"value\" for \"ConfigurationError\"  [call-arg]": 4,
      "\"type[PrivacyLevel]\" has no attribute \"STANDARD\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_StubSageMaker\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"describe_endpoint\"  [attr-defined]": 2,
      "Incompatible types in assignment (expression has type \"_StubRuntime\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"invoke_endpoint\"  [attr-defined]": 4,
      "\"type[EventType]\" has no attribute \"PREDICTION\"  [attr-defined]": 9,
      "Unexpected keyword argument \"service\" for \"ExternalServiceException\"  [call-arg]": 10,
      "Unexpected keyword argument \"error_type\" for \"ExternalServiceException\"  [call-arg]": 10,
      "Unexpected keyword argument \"details\" for \"ExternalServiceException\"; did you mean \"detail\"?  [call-arg]": 10,
      "Unexpected keyword argument \"resource_type\" for \"ResourceNotFoundError\"  [call-arg]": 4,
      "Unexpected keyword argument \"resource_id\" for \"ResourceNotFoundError\"  [call-arg]": 4,
      "\"type[EventType]\" has no attribute \"INTEGRATION\"  [attr-defined]": 3,
      "\"None\" has no attribute \"scan\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_InMemoryS3Client\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"head_bucket\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"_InMemorySageMaker\", variable has type \"None\")  [assignment]": 2,
      "\"None\" has no attribute \"list_endpoints\"  [attr-defined]": 3,
      "Incompatible default for argument \"request_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Need type annotation for \"string_values\" (hint: \"string_values: List[<type>] = ...\")  [var-annotated]": 2,
      "\"None\" has no attribute \"get_item\"  [attr-defined]": 10,
      "\"None\" has no attribute \"update_item\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"_StubS3\", variable has type \"None\")  [assignment]": 2,
      "Cannot determine type of \"_privacy_level\"  [has-type]": 18,
      "Cannot determine type of \"_dynamodb_table_name\"  [has-type]": 17,
      "Cannot determine type of \"_region_name\"  [has-type]": 13,
      "\"type[EventType]\" has no attribute \"INITIALIZATION\"  [attr-defined]": 1,
      "Unexpected keyword argument \"details\" for \"ConfigurationError\"; did you mean \"detail\"?  [call-arg]": 1,
      "Cannot determine type of \"_endpoint_prefix\"  [has-type]": 25,
      "\"None\" has no attribute \"put_item\"  [attr-defined]": 3,
      "Cannot determine type of \"_model_mappings\"  [has-type]": 21,
      "\"None\" has no attribute \"describe_model\"  [attr-defined]": 1,
      "Cannot determine type of \"_bucket_name\"  [has-type]": 18,
      "Cannot determine type of \"_audit_table_name\"  [has-type]": 10,
      "Missing return statement  [return]": 3,
      "\"type[PrivacyLevel]\" has no attribute \"ENHANCED\"  [attr-defined]": 2,
      "\"type[PrivacyLevel]\" has no attribute \"MAXIMUM\"  [attr-defined]": 1,
      "Need type annotation for \"_models\" (hint: \"_models: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_digital_twin_sessions\" (hint: \"_digital_twin_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]": 4,
      "Argument \"key\" to \"sorted\" has incompatible type \"Callable[[tuple[str, dict[str, object]]], object]\"; expected \"Callable[[tuple[str, dict[str, object]]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 8,
      "Unsupported operand types for < (\"float\" and \"object\")  [operator]": 6,
      "Need type annotation for \"session\"  [var-annotated]": 2,
      "Signature of \"get_insights\" incompatible with supertype \"DigitalTwinInterface\"  [override]": 3,
      "def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]": 3,
      "def get_insights(self, session_id: str, insight_type: str | None = ...) -> dict[str, Any]": 1,
      "Need type annotation for \"sender_counts\" (hint: \"sender_counts: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"MockOptuna\", target has type Module)  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"type\", target has type Module)  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"MockXGB\", target has type Module)  [assignment]": 2,
      "Need type annotation for \"models\" (hint: \"models: Dict[<type>, <type>] = ...\")  [var-annotated]": 2,
      "Need type annotation for \"patient_data\" (hint: \"patient_data: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"medication_data\"  [var-annotated]": 1,
      "Need type annotation for \"gene\"  [var-annotated]": 1,
      "Argument 1 to \"enumerate\" has incompatible type \"object\"; expected \"Iterable[<nothing>]\"  [arg-type]": 1,
      "Argument 1 to \"len\" has incompatible type \"object\"; expected \"Sized\"  [arg-type]": 1,
      "Unsupported operand types for + (\"object\" and \"float\")  [operator]": 3,
      "No overload variant of \"min\" matches argument types \"float\", \"object\"  [call-overload]": 1,
      "Possible overload variants:": 38,
      "def [SupportsRichComparisonT] min(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT": 1,
      "def [_T] min(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T": 1,
      "def [SupportsRichComparisonT] min(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT": 1,
      "def [_T] min(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T": 1,
      "def [SupportsRichComparisonT, _T] min(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T": 1,
      "def [_T1, _T2] min(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2": 1,
      "\"object\" has no attribute \"__iter__\"; maybe \"__dir__\" or \"__str__\"? (not iterable)  [attr-defined]": 4,
      "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 3,
      "Name \"LSTM\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"Dense\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"Dropout\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"Sequential\" already defined (possibly by an import)  [no-redef]": 1,
      "\"None\" has no attribute \"add\"  [attr-defined]": 4,
      "\"None\" has no attribute \"compile\"  [attr-defined]": 1,
      "Need type annotation for \"anomalies_by_time\" (hint: \"anomalies_by_time: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"ndarray[Any, dtype[Any]]\", variable has type \"list[Any]\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"None\", target has type \"float\")  [assignment]": 1,
      "Need type annotation for \"feature_metrics\" (hint: \"feature_metrics: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Invalid \"type: ignore\" comment  [syntax]": 1,
      "Signature of \"put_item\" incompatible with supertype \"DynamoDBServiceInterface\"  [override]": 1,
      "def put_item(self, table_name: str, item: dict[str, Any]) -> dict[str, Any]": 1,
      "def put_item(self, *, TableName: str, Item: dict[str, Any]) -> dict[str, Any]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.entities.digital_twin.biometric_rule\"  [import-not-found]": 1,
      "Name \"personalized_response\" is not defined  [name-defined]": 1,
      "Name \"result\" is not defined  [name-defined]": 1,
      "\"EnhancedXGBoostService\" has no attribute \"time_profiles\"  [attr-defined]": 2,
      "\"EnhancedXGBoostService\" has no attribute \"_sigmoid\"  [attr-defined]": 5,
      "\"EnhancedXGBoostService\" has no attribute \"side_effect_models\"  [attr-defined]": 2,
      "Missing positional arguments \"neurotransmitter\", \"treatment_effect\" in call to \"predict_treatment_response\" of \"EnhancedXGBoostService\"  [call-arg]": 2,
      "Argument 1 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"TreatmentClass\"; expected \"UUID\"  [arg-type]": 2,
      "Argument 2 to \"predict_treatment_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"BrainRegion\"  [arg-type]": 2,
      "Need type annotation for \"result\" (hint: \"result: Dict[<type>, <type>] = ...\")  [var-annotated]": 3,
      "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"dict[<nothing>, <nothing>]\"  [call-overload]": 1,
      "def get(self, Neurotransmitter, /) -> dict[BrainRegion, float] | None": 1,
      "def get(self, Neurotransmitter, dict[BrainRegion, float], /) -> dict[BrainRegion, float]": 1,
      "def [_T] get(self, Neurotransmitter, _T, /) -> dict[BrainRegion, float] | _T": 1,
      "\"EnhancedXGBoostService\" has no attribute \"treatment_response_models\"  [attr-defined]": 1,
      "Argument 1 to \"_calculate_efficacy_score\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]": 1,
      "Argument 1 to \"_summarize_response\" of \"EnhancedXGBoostService\" has incompatible type \"dict[str, Any]\"; expected \"dict[Neurotransmitter, dict[BrainRegion, float]]\"  [arg-type]": 1,
      "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], dict[str, float] | dict[str, Any] | float | str]\"; expected \"Callable[[dict[str, dict[str, float] | dict[str, Any] | float | str]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"dict[str, float] | dict[str, Any] | float | str\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"simulate_treatment_cascade\"  [attr-defined]": 1,
      "\"type[EnhancedXGBoostService]\" has no attribute \"analyze_temporal_response\"  [attr-defined]": 1,
      "Attributes without a default cannot follow attributes with one  [misc]": 38,
      "Dict entry 2 has incompatible type \"str\": \"int\"; expected \"str\": \"ndarray[Any, Any]\"  [dict-item]": 1,
      "Returning Any from function declared to return \"float | None\"  [no-any-return]": 5,
      "Name \"TemporalSequence\" already defined on line 43  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"str\")  [assignment]": 1,
      "\"TemporalSequence\" defined here": 13,
      "Incompatible default for argument \"timestamp\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 2,
      "Incompatible default for argument \"value\" (default has type \"None\", argument has type \"T\")  [assignment]": 2,
      "Incompatible default for argument \"event_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"correlation_type\" (default has type \"None\", argument has type \"CorrelationType\")  [assignment]": 1,
      "\"TemporalEvent\" defined here": 3,
      "\"EventChain\" defined here": 6,
      "\"__post_init__\" undefined in superclass  [misc]": 2,
      "Skipping analyzing \"scipy\": module is installed, but missing library stubs or py.typed marker  [import-untyped]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"tuple[float, float] | float | str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, dict[str, str]]\", target has type \"tuple[float, float] | float | str\")  [assignment]": 1,
      "\"NeurotransmitterEffect\" defined here": 1,
      "\"RuleOperator\" has no attribute \"upper\"  [attr-defined]": 2,
      "No overload variant of \"field\" matches argument type \"datetime\"  [call-overload]": 1,
      "def [_T] field(*, default: _T, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T": 1,
      "def [_T] field(*, default_factory: Callable[[], _T], init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> _T": 1,
      "def field(*, init: bool = ..., repr: bool = ..., hash: bool | None = ..., compare: bool = ..., metadata: Mapping[Any, Any] | None = ..., kw_only: bool = ...) -> Any": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"list[BiometricRuleCondition]\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"LogicalOperator\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"AlertPriority\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"bool\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"datetime | None\"  [arg-type]": 1,
      "Argument 1 to \"BiometricAlertRule\" has incompatible type \"**dict[str, UUID | bool | AlertPriority | LogicalOperator | list[BiometricRuleCondition] | str | None]\"; expected \"int\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"UUID | None\")  [assignment]": 1,
      "\"InMemoryDynamoDBService\" has no attribute \"tables\"; maybe \"_tables\"?  [attr-defined]": 3,
      "\"Collection[str]\" has no attribute \"append\"  [attr-defined]": 4,
      "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"float\")  [assignment]": 1,
      "Generator has incompatible item type \"str\"; expected \"bool\"  [misc]": 1,
      "Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice\"  [index]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, object]]\", target has type \"Collection[str]\")  [assignment]": 1,
      "Generator has incompatible item type \"object\"; expected \"bool\"  [misc]": 14,
      "Argument 1 to \"strptime\" of \"datetime\" has incompatible type \"object\"; expected \"str\"  [arg-type]": 2,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"BiometricCorrelationService\"; maybe \"IBiometricCorrelationService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"DigitalTwinIntegrationService\"; maybe \"IDigitalTwinIntegrationService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"PharmacogenomicsService\"; maybe \"IPharmacogenomicsService\"?  [attr-defined]": 1,
      "Module \"app.domain.interfaces.ml_services\" has no attribute \"SymptomForecastingService\"; maybe \"ISymptomForecastingService\"?  [attr-defined]": 1,
      "Unexpected keyword argument \"symptom_forecast\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"biometric_analysis\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"pharmacogenomic_insights\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"updated_at\" for \"DigitalTwin\"  [call-arg]": 2,
      "Argument \"id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]": 1,
      "Incompatible default for argument \"init_data\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 1,
      "Argument \"id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Returning Any from function declared to return \"DigitalTwin | None\"  [no-any-return]": 3,
      "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"Sequence[str]\")  [assignment]": 1,
      "Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]": 2,
      "Need type annotation for \"interactions_by_medication\" (hint: \"interactions_by_medication: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"interactions_by_gene\" (hint: \"interactions_by_gene: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"interactions_by_variant\" (hint: \"interactions_by_variant: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"all_effects\" (hint: \"all_effects: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "\"str\" has no attribute \"get\"  [attr-defined]": 3,
      "Need type annotation for \"interaction_lookup\" (hint: \"interaction_lookup: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Invalid index type \"int\" for \"dict[str, Any]\"; expected type \"str\"  [index]": 1,
      "Unsupported operand types for > (\"float\" and \"object\")  [operator]": 1,
      "Name \"result\" already defined on line 176  [no-redef]": 1,
      "Dict entry 2 has incompatible type \"str\": \"list[Any]\"; expected \"str\": \"ndarray[Any, Any]\"  [dict-item]": 1,
      "Argument 3 to \"_analyze_mental_health_changes\" of \"BiometricCorrelationService\" has incompatible type \"ndarray[Any, Any]\"; expected \"list[str]\"  [arg-type]": 1,
      "Need type annotation for \"changes_by_indicator\" (hint: \"changes_by_indicator: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Argument 1 to \"_precompute_time_series_geometry\" of \"NeurotransmitterVisualizationPreprocessor\" has incompatible type \"dict[BrainRegion, dict[Neurotransmitter, float]] | dict[BrainRegion, list[float]]\"; expected \"dict[BrainRegion, list[float]]\"  [arg-type]": 1,
      "Argument 1 to \"_precompute_detailed_geometry\" of \"NeurotransmitterVisualizationPreprocessor\" has incompatible type \"dict[BrainRegion, dict[Neurotransmitter, float]] | dict[BrainRegion, list[float]]\"; expected \"dict[BrainRegion, dict[Neurotransmitter, float]]\"  [arg-type]": 1,
      "Need type annotation for \"vertices_by_time\" (hint: \"vertices_by_time: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"colors_by_time\" (hint: \"colors_by_time: List[<type>] = ...\")  [var-annotated]": 1,
      "\"TemporalSequence[Any]\" has no attribute \"data\"  [attr-defined]": 1,
      "Name \"generate_comparative_visualization\" already defined on line 321  [no-redef]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"lower\"  [union-attr]": 2,
      "Argument 2 of \"get_assessment_questions\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "This violates the Liskov substitution principle": 28,
      "See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides": 28,
      "Argument 2 of \"submit_assessment\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "Argument 2 of \"get_assessment_history\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str | None\"  [override]": 1,
      "Argument 2 of \"get_trend_analysis\" is incompatible with supertype \"PATService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "Argument \"responses\" to \"submit_assessment\" of \"MockPATService\" has incompatible type \"dict[str, int]\"; expected \"dict[str, int | float | str]\"  [arg-type]": 1,
      "\"Dict\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance": 3,
      "Consider using \"Mapping\" instead, which is covariant in the value type": 3,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]": 1,
      "Argument 1 to \"append\" of \"list\" has incompatible type \"tuple[BrainRegion, float]\"; expected \"tuple[BrainRegion, ReceptorProfile]\"  [arg-type]": 1,
      "Incompatible return value type (got \"list[tuple[BrainRegion, ReceptorProfile]]\", expected \"list[tuple[BrainRegion, float]]\")  [return-value]": 1,
      "Incompatible default for argument \"neurotransmitter_level\" (default has type \"None\", argument has type \"float\")  [assignment]": 1,
      "Unsupported operand types for * (\"float\" and \"ReceptorProfile\")  [operator]": 1,
      "Incompatible return value type (got \"set[Neurotransmitter]\", expected \"list[BrainRegion]\")  [return-value]": 1,
      "Invalid index type \"Neurotransmitter\" for \"dict[BrainRegion, set[Neurotransmitter]]\"; expected type \"BrainRegion\"  [index]": 2,
      "Incompatible return value type (got \"ReceptorProfile\", expected \"float\")  [return-value]": 1,
      "Unexpected keyword argument \"is_statistically_significant\" for \"NeurotransmitterEffect\"  [call-arg]": 1,
      "No overload variant of \"max\" matches argument types \"ReceptorProfile\", \"float\"  [call-overload]": 1,
      "def [SupportsRichComparisonT] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT": 2,
      "def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T": 2,
      "def [SupportsRichComparisonT] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT": 2,
      "def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T": 2,
      "def [SupportsRichComparisonT, _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T": 2,
      "def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2": 2,
      "Incompatible types in assignment (expression has type \"float\", target has type \"ReceptorProfile\")  [assignment]": 1,
      "\"ReceptorProfile\" defined here": 6,
      "Incompatible default for argument \"sequence_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 1,
      "Incompatible default for argument \"name\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible default for argument \"metadata\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 2,
      "Invalid index type \"int | None\" for \"list[Any]\"; expected type \"SupportsIndex\"  [index]": 1,
      "Incompatible default for argument \"brain_region\" (default has type \"None\", argument has type \"BrainRegion\")  [assignment]": 2,
      "Incompatible default for argument \"neurotransmitter\" (default has type \"None\", argument has type \"Neurotransmitter\")  [assignment]": 2,
      "Returning Any from function declared to return \"float\"  [no-any-return]": 1,
      "\"Medication\" has no attribute \"medication_class\"  [attr-defined]": 4,
      "Cannot assign to a type  [misc]": 28,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricRule]\")  [assignment]": 1,
      "Signature of \"assess_risk\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def assess_risk(self, text: str, risk_type: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def assess_risk(self, text: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 2 to \"assess_risk\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str | None\"  [arg-type]": 1,
      "Signature of \"generate_digital_twin\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def generate_digital_twin(self, text_data: list[str] | None = ..., demographic_data: dict[str, Any] | None = ..., medical_history: dict[str, Any] | None = ..., treatment_history: dict[str, Any] | None = ..., options: dict[str, Any] | None = ..., patient_id: str | None = ...) -> dict[str, Any]": 1,
      "def generate_digital_twin(self, user_profile: dict[str, Any], clinical_data: dict[str, Any] | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 1 to \"generate_digital_twin\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any]\"; expected \"list[str] | None\"  [arg-type]": 1,
      "Signature of \"create_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def create_digital_twin_session(self, twin_id: str, session_type: str = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def create_digital_twin_session(self, digital_twin_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "Argument 2 to \"create_digital_twin_session\" of \"MockMentaLLaMA\" has incompatible type \"dict[str, Any] | None\"; expected \"str\"  [arg-type]": 1,
      "Signature of \"end_digital_twin_session\" incompatible with supertype \"MockMentaLLaMA\"  [override]": 1,
      "def end_digital_twin_session(self, session_id: str, options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def end_digital_twin_session(self, session_id: str) -> dict[str, Any]": 1,
      "Incompatible default for argument \"initial_level\" (default has type \"None\", argument has type \"float\")  [assignment]": 1,
      "Incompatible default for argument \"time_steps\" (default has type \"None\", argument has type \"int\")  [assignment]": 1,
      "Incompatible default for argument \"sequence\" (default has type \"None\", argument has type \"TemporalSequence[Any]\")  [assignment]": 1,
      "Incompatible default for argument \"patient_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 2,
      "Incompatible default for argument \"time_series_data\" (default has type \"None\", argument has type \"list[tuple[datetime, float]]\")  [assignment]": 1,
      "Incompatible default for argument \"baseline_period\" (default has type \"None\", argument has type \"tuple[datetime, datetime]\")  [assignment]": 2,
      "Need type annotation for \"results\"  [var-annotated]": 2,
      "Incompatible types in assignment (expression has type \"tuple[datetime, datetime] | None\", variable has type \"tuple[datetime, datetime]\")  [assignment]": 1,
      "Incompatible default for argument \"target_neurotransmitter\" (default has type \"None\", argument has type \"Neurotransmitter\")  [assignment]": 1,
      "Incompatible default for argument \"timestamps\" (default has type \"None\", argument has type \"list[datetime]\")  [assignment]": 1,
      "Incompatible default for argument \"affected_neurotransmitters\" (default has type \"None\", argument has type \"dict[Neurotransmitter, float]\")  [assignment]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"event_chains\"  [attr-defined]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"brain_regions\"  [attr-defined]": 4,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"neurotransmitters\"  [attr-defined]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"interactions\"  [attr-defined]": 1,
      "Name \"logger\" is not defined  [name-defined]": 2,
      "Unexpected keyword argument \"description\" for \"TemporalSequence\"  [call-arg]": 5,
      "Unexpected keyword argument \"time_unit\" for \"TemporalSequence\"  [call-arg]": 5,
      "\"TemporalSequence[bool]\" has no attribute \"add_time_point\"  [attr-defined]": 10,
      "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"add_temporal_sequence\"  [attr-defined]": 1,
      "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"add_neurotransmitter_connection\"  [attr-defined]": 1,
      "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"calculate_receptor_response\"  [attr-defined]": 1,
      "\"type[TemporalNeurotransmitterMapping]\" has no attribute \"simulate_cascade_effects\"  [attr-defined]": 1,
      "\"simulate_treatment_response\" of \"TemporalNeurotransmitterMapping\" defined here": 1,
      "\"predict_cascade_effect\" of \"TemporalNeurotransmitterMapping\" defined here": 1,
      "Module \"sqlalchemy.orm\" has no attribute \"declarative_base\"  [attr-defined]": 9,
      "Variable \"app.tests.integration.infrastructure.persistence.test_models.TestMockBase\" is not valid as a type  [valid-type]": 2,
      "See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases": 9,
      "Invalid base class \"TestMockBase\"  [misc]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.models.biometric_data\"  [import-not-found]": 1,
      "Name \"field_validator\" is not defined  [name-defined]": 6,
      "Name \"hyperparameters\" already defined on line 505  [no-redef]": 1,
      "Name \"status\" already defined on line 506  [no-redef]": 1,
      "Decorators on top of @property are not supported  [misc]": 1,
      "Unexpected keyword argument \"affinity\" for \"ReceptorProfile\"  [call-arg]": 2,
      "No overload variant of \"__getitem__\" of \"list\" matches argument type \"Neurotransmitter\"  [call-overload]": 6,
      "def __getitem__(self, SupportsIndex, /) -> ReceptorProfile": 6,
      "def __getitem__(self, slice, /) -> list[ReceptorProfile]": 6,
      "Unexpected keyword argument \"expression\" for \"ReceptorProfile\"  [call-arg]": 2,
      "Unexpected keyword argument \"modulation\" for \"ReceptorProfile\"  [call-arg]": 2,
      "No overload variant of \"__setitem__\" of \"list\" matches argument types \"Neurotransmitter\", \"ReceptorProfile\"  [call-overload]": 1,
      "def __setitem__(self, SupportsIndex, ReceptorProfile, /) -> None": 1,
      "def __setitem__(self, slice, Iterable[ReceptorProfile], /) -> None": 1,
      "Return type \"Coroutine[Any, Any, dict[Neurotransmitter, dict[str, float]]]\" of \"predict_medication_impacts\" incompatible with return type \"Coroutine[Any, Any, dict[str, dict[str, float]]]\" in supertype \"EnhancedDigitalTwinNeurotransmitterService\"  [override]": 1,
      "\"type[BrainRegion]\" has no attribute \"INSULAR_CORTEX\"  [attr-defined]": 1,
      "\"type[BrainRegion]\" has no attribute \"MEDIAL_PREFRONTAL_CORTEX\"  [attr-defined]": 1,
      "\"type[BrainRegion]\" has no attribute \"POSTERIOR_CINGULATE_CORTEX\"  [attr-defined]": 1,
      "\"type[BrainRegion]\" has no attribute \"INFERIOR_PARIETAL_LOBE\"  [attr-defined]": 1,
      "\"object\" has no attribute \"name\"  [attr-defined]": 1,
      "Missing positional arguments \"include_genetic_data\", \"include_biomarkers\" in call to \"initialize_digital_twin\" of \"MockDigitalTwinCoreService\"  [call-arg]": 3,
      "\"MockDigitalTwinCoreService\" has no attribute \"_pat_service\"  [attr-defined]": 1,
      "Unexpected keyword argument \"id\" for \"ClinicalInsight\"  [call-arg]": 9,
      "\"MockDigitalTwinCoreService\" has no attribute \"_map_clinical_relevance\"  [attr-defined]": 3,
      "Name \"random\" is not defined  [name-defined]": 5,
      "Name \"generate_treatment_recommendations\" already defined on line 289  [no-redef]": 1,
      "Name \"get_visualization_data\" already defined on line 450  [no-redef]": 1,
      "Name \"compare_states\" already defined on line 642  [no-redef]": 1,
      "Name \"generate_clinical_summary\" already defined on line 781  [no-redef]": 1,
      "Unexpected keyword argument \"title\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"description\" for \"ClinicalInsight\"  [call-arg]": 5,
      "Unexpected keyword argument \"source\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"confidence\" for \"ClinicalInsight\"  [call-arg]": 5,
      "Unexpected keyword argument \"timestamp\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"clinical_significance\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"brain_regions\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"neurotransmitters\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"supporting_evidence\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Unexpected keyword argument \"recommended_actions\" for \"ClinicalInsight\"  [call-arg]": 9,
      "Returning Any from function declared to return \"DigitalTwinState\"  [no-any-return]": 4,
      "\"MockDigitalTwinCoreService\" has no attribute \"_mentalllama_service\"  [attr-defined]": 4,
      "Unexpected keyword argument \"id\" for \"DigitalTwinState\"  [call-arg]": 3,
      "Unexpected keyword argument \"patient_id\" for \"DigitalTwinState\"  [call-arg]": 3,
      "Unexpected keyword argument \"timestamp\" for \"DigitalTwinState\"  [call-arg]": 2,
      "Unexpected keyword argument \"version\" for \"DigitalTwinState\"  [call-arg]": 3,
      "Unexpected keyword argument \"clinical_insights\" for \"DigitalTwinState\"  [call-arg]": 3,
      "Unexpected keyword argument \"brain_state\" for \"DigitalTwinState\"  [call-arg]": 2,
      "Unexpected keyword argument \"clinical_metrics\" for \"DigitalTwinState\"  [call-arg]": 2,
      "Unexpected keyword argument \"metadata\" for \"DigitalTwinState\"  [call-arg]": 3,
      "\"DigitalTwinState\" has no attribute \"brain_state\"  [attr-defined]": 8,
      "\"MockDigitalTwinCoreService\" has no attribute \"_get_significance_factor\"  [attr-defined]": 2,
      "\"MockDigitalTwinCoreService\" has no attribute \"_xgboost_service\"  [attr-defined]": 2,
      "\"MockDigitalTwinCoreService\" has no attribute \"_get_region_coordinates\"  [attr-defined]": 1,
      "\"Sequence[Any]\" has no attribute \"append\"  [attr-defined]": 2,
      "Argument 1 to \"list\" has incompatible type \"dict_values[Any, dict[str, Any]]\"; expected \"Iterable[str]\"  [arg-type]": 1,
      "\"Sequence[str]\" has no attribute \"append\"  [attr-defined]": 9,
      "\"ClinicalInsight\" defined here": 55,
      "Module \"sqlalchemy.orm\" has no attribute \"registry\"  [attr-defined]": 2,
      "Incompatible types in assignment (expression has type \"ValidationInfo\", variable has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"Collection[str]\")  [assignment]": 1,
      "No overload variant of \"get\" of \"dict\" matches argument types \"str\", \"str\"  [call-overload]": 1,
      "def get(self, BiometricMetricType, /) -> str | None": 1,
      "def get(self, BiometricMetricType, str, /) -> str": 1,
      "def [_T] get(self, BiometricMetricType, _T, /) -> str | _T": 1,
      "Missing return statement  [empty-body]": 9,
      "If the method is meant to be abstract, use @abc.abstractmethod": 7,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[DigitalTwin]\")  [assignment]": 1,
      "Argument \"default_factory\" to \"Field\" has incompatible type \"type[ContactInfo]\"; expected \"Callable[[], Any] | None\"  [arg-type]": 1,
      "Unexpected keyword argument \"patient_id\" for \"simulate_treatment_response\" of \"TemporalNeurotransmitterMapping\"  [call-arg]": 1,
      "\"NeurotransmitterVisualizationPreprocessor\" has no attribute \"precompute_temporal_sequence_visualization\"  [attr-defined]": 1,
      "Unexpected keyword argument \"patient_id\" for \"predict_cascade_effect\" of \"TemporalNeurotransmitterMapping\"  [call-arg]": 1,
      "Need type annotation for \"nodes\" (hint: \"nodes: List[<type>] = ...\")  [var-annotated]": 1,
      "Invalid index type \"int\" for \"dict[Neurotransmitter, float] | list[float]\"; expected type \"Neurotransmitter\"  [index]": 5,
      "Need type annotation for \"event\"  [var-annotated]": 5,
      "\"CorrelatedEvent[Any]\" has no attribute \"details\"  [attr-defined]": 1,
      "\"EventRepository\" has no attribute \"save\"  [attr-defined]": 1,
      "Error code \"attr-defined\" not covered by \"type: ignore\" comment": 1,
      "Returning Any from function declared to return \"TemporalSequence[Any] | None\"  [no-any-return]": 1,
      "\"TemporalSequenceRepository\" has no attribute \"get_by_time_range\"  [attr-defined]": 1,
      "Return type \"dict[str, list[dict[str, Any]]]\" of \"list_endpoints\" incompatible with return type \"list[dict[str, Any]]\" in supertype \"SageMakerServiceInterface\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, dict[str, Any]]\" of \"invoke_endpoint\" incompatible with return type \"dict[str, Any]\" in supertype \"SageMakerRuntimeServiceInterface\"  [override]": 1,
      "Returning Any from function declared to return \"int\"  [no-any-return]": 19,
      "Dict entry 0 has incompatible type \"type[datetime]\": \"Callable[[Any], Any]\"; expected \"str\": \"int | float | str | list[JsonValue] | JsonDict | None\"  [dict-item]": 2,
      "\"type[ClinicalSignificance]\" has no attribute \"MODERATE\"  [attr-defined]": 3,
      "\"type[BrainRegion]\" has no attribute \"PREFRONTAL_CORTEX\"  [attr-defined]": 1,
      "\"type[BrainRegion]\" has no attribute \"ANTERIOR_CINGULATE\"  [attr-defined]": 2,
      "\"type[BrainRegion]\" has no attribute \"AMYGDALA\"  [attr-defined]": 1,
      "\"type[BrainRegion]\" has no attribute \"HYPOTHALAMUS\"  [attr-defined]": 1,
      "\"type[Neurotransmitter]\" has no attribute \"MELATONIN\"  [attr-defined]": 1,
      "\"type[ClinicalSignificance]\" has no attribute \"NONE\"  [attr-defined]": 1,
      "No overload variant of \"max\" matches argument types \"object\", \"object\", \"object\"  [call-overload]": 1,
      "Incompatible return value type (got \"dict[str, object]\", expected \"tuple[DigitalTwinState, TemporalKnowledgeGraph | None, BayesianBeliefNetwork | None]\")  [return-value]": 1,
      "Item \"EnhancedXGBoostService\" of \"EnhancedXGBoostService | MagicMock\" has no attribute \"integrate_pharmacogenomic_data\"  [union-attr]": 1,
      "Argument \"key\" to \"max\" has incompatible type overloaded function; expected \"Callable[[str], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, float | str]]\", target has type \"list[dict[str, object]]\")  [assignment]": 1,
      "List comprehension has incompatible type List[str | str | str | str | str | str | str | str | str | str | str | str]; expected List[dict[str, object]]  [misc]": 1,
      "Incompatible default for argument \"time_range\" (default has type \"None\", argument has type \"tuple[Any, ...]\")  [assignment]": 1,
      "Argument 2 of \"subscribe_to_events\" is incompatible with supertype \"EnhancedDigitalTwinCoreService\"; supertype defines the argument type as \"str\"  [override]": 1,
      "\"None\" not callable  [misc]": 2,
      "Unexpected keyword argument \"created_at\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"updated_at\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"brain_regions\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"neurotransmitters\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"biomarkers\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"predicted_states\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"treatment_responses\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"confidence_scores\" for \"DigitalTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"active_treatments\" for \"DigitalTwinState\"  [call-arg]": 1,
      "\"DigitalTwinState\" has no attribute \"version\"  [attr-defined]": 1,
      "\"DigitalTwinState\" has no attribute \"created_at\"  [attr-defined]": 1,
      "\"DigitalTwinState\" has no attribute \"brain_regions\"  [attr-defined]": 2,
      "\"DigitalTwinState\" has no attribute \"neurotransmitters\"  [attr-defined]": 1,
      "\"DigitalTwinState\" has no attribute \"clinical_insights\"  [attr-defined]": 3,
      "Argument \"significance\" to \"ClinicalInsight\" has incompatible type \"app.domain.entities.digital_twin_enums.ClinicalSignificance\"; expected \"app.domain.entities.digital_twin_entity.ClinicalSignificance\"  [arg-type]": 1,
      "Argument \"clinical_significance\" to \"ClinicalInsight\" has incompatible type \"app.domain.entities.digital_twin_enums.ClinicalSignificance\"; expected \"app.domain.entities.digital_twin_entity.ClinicalSignificance\"  [arg-type]": 1,
      "List item 0 has incompatible type \"app.domain.entities.digital_twin_enums.BrainRegion\"; expected \"app.domain.entities.digital_twin_entity.BrainRegion\"  [list-item]": 1,
      "List item 1 has incompatible type \"app.domain.entities.digital_twin_enums.BrainRegion\"; expected \"app.domain.entities.digital_twin_entity.BrainRegion\"  [list-item]": 1,
      "List item 0 has incompatible type \"app.domain.entities.digital_twin_enums.Neurotransmitter\"; expected \"app.domain.entities.digital_twin_entity.Neurotransmitter\"  [list-item]": 1,
      "List item 1 has incompatible type \"app.domain.entities.digital_twin_enums.Neurotransmitter\"; expected \"app.domain.entities.digital_twin_entity.Neurotransmitter\"  [list-item]": 1,
      "Incompatible types in assignment (expression has type \"float\", target has type \"int\")  [assignment]": 1,
      "Argument \"key\" to \"max\" has incompatible type \"Callable[[ClinicalSignificance], str | str | str | str | str | str | str | str | str | str | ClinicalSignificance]\"; expected \"Callable[[ClinicalSignificance], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"str | str | str | str | str | str | str | str | str | str | ClinicalSignificance\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 1,
      "Name \"simulate_neurotransmitter_cascade\" already defined on line 1269  [no-redef]": 1,
      "Need type annotation for \"steps_data\" (hint: \"steps_data: List[<type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"most_affected_regions\" (hint: \"most_affected_regions: List[<type>] = ...\")  [var-annotated]": 1,
      "Name \"current_state\" is not defined  [name-defined]": 2,
      "Name \"mapping\" is not defined  [name-defined]": 3,
      "Need type annotation for \"timeline\" (hint: \"timeline: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Variable \"app.infrastructure.models.sqla.user.Base\" is not valid as a type  [valid-type]": 1,
      "Invalid base class \"Base\"  [misc]": 4,
      "\"str\" has no attribute \"value\"  [attr-defined]": 2,
      "Incompatible return value type (got \"MockDigitalTwinCoreService\", expected \"DigitalTwinCoreService\")  [return-value]": 1,
      "Module \"app.core.services.ml.xgboost.interface\" does not explicitly export attribute \"ModelType\"  [attr-defined]": 3,
      "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"XGBoostInterface\"  [override]": 4,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 6,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[Any, Any]]": 1,
      "Argument 1 of \"predict\" is incompatible with supertype \"MLServiceInterface\"; supertype defines the argument type as \"UUID\"  [override]": 3,
      "\"MockXGBoostService\" has no attribute \"_simulate_processing_delay\"  [attr-defined]": 1,
      "Signature of \"predict_risk\" incompatible with supertype \"XGBoostInterface\"  [override]": 4,
      "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 7,
      "def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 7,
      "\"MockXGBoostService\" has no attribute \"_ensure_initialized\"; maybe \"is_initialized\" or \"_initialized\"?  [attr-defined]": 4,
      "Signature of \"predict_outcome\" incompatible with supertype \"XGBoostInterface\"  [override]": 3,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 5,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 1,
      "Signature of \"get_feature_importance\" incompatible with supertype \"XGBoostInterface\"  [override]": 3,
      "def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]": 5,
      "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> dict[str, Any]": 1,
      "Name \"integrate_with_digital_twin\" already defined on line 46  [no-redef]": 1,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> dict[str, Any]": 1,
      "Name \"get_model_info\" already defined on line 43  [no-redef]": 1,
      "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"XGBoostInterface\"  [override]": 1,
      "Return type \"dict[str, Any]\" of \"get_model_info\" incompatible with return type \"Coroutine[Any, Any, dict[str, Any]]\" in supertype \"MLServiceInterface\"  [override]": 1,
      "Value of type \"Coroutine[Any, Any, None]\" must be used  [unused-coroutine]": 7,
      "Are you missing an await?": 7,
      "\"DataPrivacyError\" has no attribute \"pattern_types\"  [attr-defined]": 1,
      "Need type annotation for \"risk_factors\"  [var-annotated]": 1,
      "Need type annotation for \"side_effects\"  [var-annotated]": 1,
      "List item 0 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "List item 1 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "List item 2 has incompatible type \"dict[str, str]\"; expected \"str\"  [list-item]": 3,
      "Incompatible default for argument \"include_features\" (default has type \"None\", argument has type \"list[str]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricTwinState]\")  [assignment]": 1,
      "Module \"app.presentation.api.schemas.xgboost\" does not explicitly export attribute \"BaseModelConfig\"  [attr-defined]": 1,
      "Signature of \"get_alerts\" incompatible with supertype \"AlertServiceInterface\"  [override]": 2,
      "def get_alerts(self, patient_id: str | UUID | None = ..., provider_id: str | UUID | None = ..., alert_type: str | None = ..., severity: AlertSeverity | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]": 2,
      "def get_alerts(self, patient_id: str | None = ..., status: AlertStatus | None = ..., priority: AlertPriority | None = ..., alert_type: AlertType | None = ..., start_date: datetime | None = ..., end_date: datetime | None = ..., limit: int = ..., offset: int = ...) -> Coroutine[Any, Any, list[dict[str, Any]]]": 1,
      "Argument 1 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 2,
      "Argument 3 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"AlertSeverity\"  [override]": 2,
      "\"type[AlertStatus]\" has no attribute \"NEW\"  [attr-defined]": 1,
      "Signature of \"update_alert_status\" incompatible with supertype \"AlertServiceInterface\"  [override]": 1,
      "def update_alert_status(self, alert_id: str | UUID, status: str, resolution_notes: str | None = ..., resolved_by: str | UUID | None = ...) -> Coroutine[Any, Any, tuple[bool, str | None]]": 1,
      "def update_alert_status(self, alert_id: str, new_status: AlertStatus, updated_by: str) -> Coroutine[Any, Any, bool]": 1,
      "Invalid index type \"str | None\" for \"dict[str, AuditLog]\"; expected type \"str\"  [index]": 1,
      "Incompatible return value type (got \"str | None\", expected \"str\")  [return-value]": 4,
      "Cannot find implementation or library stub for module named \"optuna\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"optuna.samplers\"  [import-not-found]": 1,
      "Item \"float\" of \"float | Any\" has no attribute \"min\"  [union-attr]": 1,
      "Item \"None\" of \"list[str] | None\" has no attribute \"__iter__\" (not iterable)  [union-attr]": 1,
      "Argument 1 to \"len\" has incompatible type \"list[str] | None\"; expected \"Sized\"  [arg-type]": 1,
      "Argument 1 to \"enumerate\" has incompatible type \"list[str] | None\"; expected \"Iterable[str]\"  [arg-type]": 1,
      "Item \"DHPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"DSAPublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"EllipticCurvePublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"Ed25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"Ed448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"X25519PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"X448PublicKey\" of \"DHPublicKey | DSAPublicKey | RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | X25519PublicKey | X448PublicKey\" has no attribute \"encrypt\"  [union-attr]": 1,
      "Item \"DHPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"Ed25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"Ed448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"DSAPrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"EllipticCurvePrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"X25519PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Item \"X448PrivateKey\" of \"DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey\" has no attribute \"decrypt\"  [union-attr]": 1,
      "Incompatible default for argument \"acknowledge_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 1,
      "Incompatible default for argument \"resolution_time\" (default has type \"None\", argument has type \"datetime\")  [assignment]": 1,
      "Incompatible default for argument \"resolution_note\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Argument 1 to \"_get_recipient_for_patient\" of \"EmailAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"value\"  [union-attr]": 10,
      "\"object\" has no attribute \"send_email\"  [attr-defined]": 1,
      "Argument 1 to \"_get_recipient_for_patient\" of \"SMSAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "\"object\" has no attribute \"send_sms\"  [attr-defined]": 1,
      "Argument 1 to \"_get_recipients_for_patient\" of \"InAppAlertObserver\" has incompatible type \"Any | None\"; expected \"UUID\"  [arg-type]": 1,
      "\"object\" has no attribute \"send_notification\"  [attr-defined]": 1,
      "Incompatible default for argument \"template_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"priority\" (default has type \"None\", argument has type \"AlertPriority\")  [assignment]": 1,
      "Incompatible default for argument \"parameters\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible default for argument \"created_by\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 1,
      "Extra keys (\"env_file\", \"env_prefix\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "Incompatible types in assignment (expression has type \"ConfigDict\", base class \"BaseSettings\" defined the type as \"SettingsConfigDict\")  [assignment]": 8,
      "Dict entry 0 has incompatible type \"str\": \"type[XGBoostService]\"; expected \"str\": \"type[XGBoostInterface]\"  [dict-item]": 1,
      "\"get_xgboost_service\" defined here": 1,
      "Name \"aws_service_factory\" is not defined  [name-defined]": 1,
      "Cannot determine type of \"_initialized\"  [has-type]": 14,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_runtime\"  [union-attr]": 1,
      "\"type[RiskLevel]\" has no attribute \"MEDIUM\"  [attr-defined]": 1,
      "\"type[RiskLevel]\" has no attribute \"UNKNOWN\"  [attr-defined]": 1,
      "\"_store_prediction\" of \"AWSXGBoostService\" defined here": 1,
      "\"Observer\" has no attribute \"on_event\"  [attr-defined]": 2,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]": 3,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_sagemaker_service\"  [union-attr]": 3,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_s3_service\"  [union-attr]": 1,
      "Item \"AWSServiceFactoryInterface\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]": 3,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_dynamodb_service\"  [union-attr]": 3,
      "Incompatible return value type (got \"dict[str, Collection[str]]\", expected \"list[dict[str, Any]]\")  [return-value]": 1,
      "Name \"get_available_models\" already defined on line 539  [no-redef]": 1,
      "Item \"None\" of \"AWSServiceFactoryInterface | None\" has no attribute \"get_service\"  [union-attr]": 5,
      "\"AWSXGBoostService\" has no attribute \"_check_phi\"  [attr-defined]": 2,
      "\"AWSXGBoostService\" has no attribute \"_invoke_endpoint\"  [attr-defined]": 3,
      "Unexpected keyword argument \"result\" for \"_store_prediction\" of \"AWSXGBoostService\"  [call-arg]": 2,
      "\"AWSXGBoostService\" has no attribute \"_add_audit_log\"  [attr-defined]": 3,
      "def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 4,
      "def get_feature_importance(self, patient_id: str, model_type: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]": 2,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]": 4,
      "Cannot determine type of \"_s3\"  [has-type]": 3,
      "Cannot determine type of \"_dynamodb\"  [has-type]": 6,
      "Cannot determine type of \"_sagemaker\"  [has-type]": 3,
      "Cannot determine type of \"_sagemaker_runtime\"  [has-type]": 3,
      "Name \"ServiceInitializationError\" is not defined  [name-defined]": 1,
      "Name \"predict_risk\" already defined on line 244  [no-redef]": 1,
      "Name \"_store_prediction\" already defined on line 489  [no-redef]": 1,
      "Name \"predict_treatment_response\" already defined on line 646  [no-redef]": 1,
      "Need type annotation for \"_config\" (hint: \"_config: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_assessments\" (hint: \"_assessments: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_form_templates\" (hint: \"_form_templates: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_analyses\" (hint: \"_analyses: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_patients_analyses\" (hint: \"_patients_analyses: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_embeddings\" (hint: \"_embeddings: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_profiles\" (hint: \"_profiles: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_integrations\" (hint: \"_integrations: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Cannot determine type of \"_force_init_error\"  [has-type]": 1,
      "Need type annotation for \"assessment\"  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"int | float\", variable has type \"int\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"str\", target has type \"int\")  [assignment]": 9,
      "Unsupported right operand type for in (\"Collection[str] | None\")  [operator]": 1,
      "Unsupported target for indexed assignment (\"Collection[str] | None\")  [index]": 1,
      "Value of type \"Collection[str] | None\" is not indexable  [index]": 1,
      "\"type[MockPATService]\" has no attribute \"test_analyses\"  [attr-defined]": 2,
      "Returning Any from function declared to return \"list[float]\"  [no-any-return]": 3,
      "Signature of \"get_patient_analyses\" incompatible with supertype \"PATInterface\"  [override]": 1,
      "def get_patient_analyses(self, patient_id: str, limit: int = ..., offset: int = ..., analysis_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., **kwargs: Any) -> dict[str, Any]": 1,
      "def get_patient_analyses(self, patient_id: str, analysis_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., limit: int | None = ..., offset: int | None = ...) -> list[dict[str, Any]] | dict[str, Any]": 1,
      "Incompatible return value type (got \"dict[str, Any] | None\", expected \"dict[Any, Any]\")  [return-value]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, Sequence[str]]\", target has type \"str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, object]\", target has type \"str\")  [assignment]": 1,
      "Incompatible import of \"InitializationError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.InitializationError]\", local name has type \"type[app.core.exceptions.base_exceptions.InitializationError]\")  [assignment]": 1,
      "Incompatible import of \"ResourceNotFoundError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.ResourceNotFoundError]\", local name has type \"type[app.core.exceptions.base_exceptions.ResourceNotFoundError]\")  [assignment]": 1,
      "Incompatible import of \"ValidationError\" (imported name has type \"type[app.core.services.ml.pat.exceptions.ValidationError]\", local name has type \"type[app.core.exceptions.base_exceptions.ValidationError]\")  [assignment]": 1,
      "Signature of \"initialize\" incompatible with supertype \"PATInterface\"  [override]": 1,
      "def initialize(self, config: dict[str, Any]) -> None": 1,
      "def initialize(self, config: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]": 1,
      "Incompatible types in assignment (expression has type \"BedrockRuntimeServiceInterface\", variable has type \"None\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"DynamoDBServiceInterface\", variable has type \"None\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"S3ServiceInterface\", variable has type \"None\")  [assignment]": 1,
      "Name \"StorageError\" is not defined  [name-defined]": 1,
      "Signature of \"analyze_actigraphy\" incompatible with supertype \"PATInterface\"  [override]": 1,
      "def analyze_actigraphy(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, device_info: dict[str, Any], analysis_types: list[str], **kwargs: Any) -> dict[str, Any]": 1,
      "def analyze_actigraphy(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, device_info: dict[str, Any] | None = ..., analysis_types: list[str] | None = ..., **kwargs: Any) -> Coroutine[Any, Any, AnalysisResult]": 1,
      "\"None\" has no attribute \"invoke_model\"  [attr-defined]": 2,
      "Return type \"Coroutine[Any, Any, AnalysisResult | None]\" of \"get_analysis_by_id\" incompatible with return type \"dict[str, Any]\" in supertype \"PATInterface\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, list[AnalysisResult]]\" of \"get_patient_analyses\" incompatible with return type \"dict[str, Any]\" in supertype \"PATInterface\"  [override]": 1,
      "\"None\" has no attribute \"query\"  [attr-defined]": 1,
      "Item \"None\" of \"str | None\" has no attribute \"upper\"  [union-attr]": 2,
      "Item \"None\" of \"str | None\" has no attribute \"lower\"  [union-attr]": 1,
      "Signature of \"integrate_with_digital_twin\" incompatible with supertype \"PATInterface\"  [override]": 1,
      "def integrate_with_digital_twin(self, patient_id: str, profile_id: str, analysis_id: str | None = ..., actigraphy_analysis: dict[str, Any] | None = ..., integration_types: list[str] | None = ..., metadata: dict[str, Any] | None = ..., **kwargs: Any) -> dict[str, Any]": 1,
      "def integrate_with_digital_twin(self, patient_id: str, analysis_result: AnalysisResult, twin_profile: DigitalTwin | None = ...) -> Coroutine[Any, Any, DigitalTwin]": 1,
      "Name \"ConfigurationError\" is not defined  [name-defined]": 2,
      "Signature of \"get_actigraphy_embeddings\" incompatible with supertype \"PATInterface\"  [override]": 1,
      "def get_actigraphy_embeddings(self, patient_id: str, readings: list[dict[str, Any]], start_time: str, end_time: str, sampling_rate_hz: float, **kwargs: Any) -> dict[str, Any]": 1,
      "def get_actigraphy_embeddings(self, patient_id: str, data: list[dict[Any, Any]]) -> Coroutine[Any, Any, list[float]]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[User]\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[BiometricAlert]\")  [assignment]": 1,
      "Module \"typing\" has no attribute \"Self\"  [attr-defined]": 1,
      "Use `from typing_extensions import Self` instead": 1,
      "See https://mypy.readthedocs.io/en/stable/runtime_troubles.html#using-new-additions-to-the-typing-module": 1,
      "Extra keys (\"env_file\", \"case_sensitive\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "Incompatible types in assignment (expression has type \"str\", variable has type \"SecretStr\")  [assignment]": 1,
      "Extra key \"env_prefix\" for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 5,
      "Returning Any from function declared to return \"dict[str, str]\"  [no-any-return]": 1,
      "Returning Any from function declared to return \"dict[str, list[str]] | None\"  [no-any-return]": 1,
      "Name \"DATABASE_ECHO\" already defined on line 317  [no-redef]": 1,
      "Name \"DATABASE_SSL_MODE\" already defined on line 322  [no-redef]": 1,
      "Name \"DATABASE_SSL_CA\" already defined on line 325  [no-redef]": 1,
      "Name \"DATABASE_SSL_VERIFY\" already defined on line 326  [no-redef]": 1,
      "Name \"TESTING\" already defined on line 204  [no-redef]": 1,
      "Argument \"port\" to \"build\" of \"MultiHostUrl\" has incompatible type \"str\"; expected \"int | None\"  [arg-type]": 1,
      "Extra keys (\"case_sensitive\", \"env_file_encoding\", \"env_nested_delimiter\") for TypedDict \"ConfigDict\"  [typeddict-unknown-key]": 1,
      "\"BiometricAlertTemplateRepository\" has no attribute \"get_by_id\"  [attr-defined]": 1,
      "Unexpected keyword argument \"patient_id\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]": 1,
      "Unexpected keyword argument \"is_active\" for \"get_rules\" of \"BiometricAlertRuleRepository\"  [call-arg]": 1,
      "\"get_rules\" of \"BiometricAlertRuleRepository\" defined here": 2,
      "Argument 1 to \"get_template_by_id\" of \"BiometricAlertTemplateRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 2,
      "All conditional function variants must have identical signatures  [misc]": 6,
      "Original:": 6,
      "def get_settings() -> Settings": 1,
      "Redefinition:": 6,
      "def get_settings() -> Any": 1,
      "\"str\" has no attribute \"search\"  [attr-defined]": 4,
      "\"PHISanitizer\" has no attribute \"_is_path_whitelisted\"; maybe \"_is_whitelisted\" or \"is_whitelisted\"?  [attr-defined]": 1,
      "Argument 2 to \"_is_whitelisted\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]": 1,
      "Item \"None\" of \"Match[str] | None\" has no attribute \"group\"  [union-attr]": 1,
      "Argument \"path\" to \"contains_phi\" of \"PHISanitizer\" has incompatible type \"str | None\"; expected \"str\"  [arg-type]": 1,
      "Incompatible return value type (got \"Logger\", expected \"PHISafeLogger\")  [return-value]": 1,
      "Library stubs not installed for \"zxcvbn\"  [import-untyped]": 1,
      "Hint: \"python3 -m pip install types-zxcvbn\"": 1,
      "Incompatible return value type (got \"tuple[bool, None]\", expected \"tuple[bool, str]\")  [return-value]": 1,
      "\"PasswordHandler\" has no attribute \"require_uppercase\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_lowercase\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_digit\"  [attr-defined]": 1,
      "\"PasswordHandler\" has no attribute \"require_special\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]": 1,
      "Skipping analyzing \"qrcode\": module is installed, but missing library stubs or py.typed marker  [import-untyped]": 1,
      "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_SECRET_KEY\"  [union-attr]": 1,
      "Item \"Settings\" of \"Settings | Any\" has no attribute \"MFA_ISSUER_NAME\"  [union-attr]": 1,
      "Incompatible types in assignment (expression has type \"Any | None\", variable has type Module)  [assignment]": 1,
      "Signature of \"log_security_event\" incompatible with supertype \"IAuditLogger\"  [override]": 3,
      "def log_security_event(self, event_type: str, description: str = ..., user_id: str | None = ..., actor_id: str | None = ..., severity: AuditSeverity = ..., details: str | None = ..., status: str | None = ..., metadata: dict[str, Any] | None = ..., ip_address: str | None = ...) -> None": 3,
      "def log_security_event(self, description: str, actor_id: str | None = ..., status: str | None = ..., severity: AuditSeverity = ..., details: dict[str, Any] | None = ..., request: Any | None = ...) -> str": 2,
      "Signature of \"log_phi_access\" incompatible with supertype \"IAuditLogger\"  [override]": 3,
      "def log_phi_access(self, actor_id: str, patient_id: str | None = ..., resource_id: str | None = ..., data_accessed: str | None = ..., resource_type: str | None = ..., access_reason: str | None = ..., action: str | None = ..., ip_address: str | None = ..., details: str | None = ..., metadata: dict[str, Any] | None = ...) -> None": 3,
      "def log_phi_access(self, actor_id: str, patient_id: str, resource_type: str, action: str, status: str, phi_fields: list[str] | None = ..., reason: str | None = ..., request: Any | None = ..., request_context: dict[str, Any] | None = ...) -> str": 2,
      "Signature of \"log_auth_event\" incompatible with supertype \"IAuditLogger\"  [override]": 1,
      "def log_auth_event(self, event_type: str, user_id: str, success: bool, description: str, ip_address: str | None = ..., metadata: dict[str, Any] | None = ...) -> None": 1,
      "def log_auth_event(self, event_type: str, user_id: str | None = ..., success: bool = ..., details: dict[str, Any] | None = ..., actor_id: str | None = ...) -> str": 1,
      "Signature of \"log_system_event\" incompatible with supertype \"IAuditLogger\"  [override]": 1,
      "def log_system_event(self, event_type: str, description: str, severity: AuditSeverity = ..., metadata: dict[str, Any] | None = ...) -> None": 1,
      "def log_system_event(self, event_type: str, description: str, details: dict[str, Any] | None = ..., user_id: str | None = ..., actor_id: str | None = ...) -> str": 1,
      "Signature of \"get_audit_trail\" incompatible with supertype \"IAuditLogger\"  [override]": 2,
      "def get_audit_trail(self, user_id: str | None = ..., patient_id: str | None = ..., event_type: str | None = ..., start_date: str | None = ..., end_date: str | None = ..., limit: int | None = ..., offset: int | None = ...) -> list[dict[str, Any]]": 2,
      "def get_audit_trail(self, filters: dict[str, Any] | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., offset: int = ...) -> list[dict[str, Any]]": 2,
      "Cannot instantiate abstract class \"DummyAuditLogger\" with abstract attributes \"log_auth_event\" and \"log_system_event\"  [abstract]": 1,
      "Incompatible types in assignment (expression has type \"DummyAuditLogger\", variable has type \"AuditLogger\")  [assignment]": 1,
      "\"Settings\" has no attribute \"ml\"  [attr-defined]": 4,
      "Module \"app.core.exceptions.ml_exceptions\" has no attribute \"RepositoryError\"  [attr-defined]": 1,
      "\"Settings\" has no attribute \"DATABASE_AUDIT_ENABLED\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"StreamHandler[TextIO]\", variable has type \"FileHandler\")  [assignment]": 1,
      "@classmethod": 2,
      "def log_phi_access(cls, user_id: str, patient_id: str, action: str, details: dict[str, Any] | None = ...) -> None": 1,
      "def log_security_event(cls, event_type: str, user_id: str | None = ..., details: dict[str, Any] | None = ...) -> None": 1,
      "\"log_security_event\" of \"AuditLogger\" defined here": 15,
      "Signature of \"predict_treatment_response\" incompatible with supertype \"EnhancedXGBoostService\"  [override]": 1,
      "def predict_treatment_response(self, patient_id: UUID, brain_region: BrainRegion, neurotransmitter: Neurotransmitter, treatment_effect: float, baseline_data: dict[str, float] | None = ...) -> dict[str, Any]": 1,
      "def predict_treatment_response(self, *args: Any, **kwargs: Any) -> Coroutine[Any, Any, dict[Any, Any]]": 1,
      "Incompatible default for argument \"provider_id\" (default has type \"None\", argument has type \"UUID\")  [assignment]": 1,
      "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"RuleCondition\" has incompatible type \"**dict[str, RuleOperator]\"; expected \"int | None\"  [arg-type]": 1,
      "Argument 1 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"list[RuleCondition]\"; expected \"list[dict[Any, Any]]\"  [arg-type]": 1,
      "Argument 2 to \"update_conditions\" of \"BiometricRule\" has incompatible type \"str | LogicalOperator | None\"; expected \"LogicalOperator | None\"  [arg-type]": 1,
      "\"BiometricRule\" has no attribute \"updated_at\"  [attr-defined]": 1,
      "Need type annotation for \"created_rules\" (hint: \"created_rules: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible default for argument \"key\" (default has type \"None\", argument has type \"str\")  [assignment]": 2,
      "Incompatible return value type (got \"str | bytes | None\", expected \"str\")  [return-value]": 1,
      "Module has no attribute \"binascii\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"list[<nothing>]\", target has type \"dict[str, Any] | str | None\")  [assignment]": 1,
      "Item \"dict[str, Any]\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]": 2,
      "Item \"str\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]": 2,
      "Item \"None\" of \"dict[str, Any] | str | None\" has no attribute \"append\"  [union-attr]": 2,
      "Incompatible types in assignment (expression has type \"list[dict[str, Any] | str | Any | None]\", target has type \"dict[str, Any] | str | None\")  [assignment]": 1,
      "Returning Any from function declared to return \"dict[Any, Any] | None\"  [no-any-return]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[Any, Any] | str | Any | None]\", target has type \"dict[Any, Any] | None\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any] | None\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"int\", variable has type \"str\")  [assignment]": 1,
      "Argument 3 to \"_create_logged_method\" has incompatible type \"str\"; expected \"int\"  [arg-type]": 1,
      "\"Logger\" has no attribute \"initialized_for_ml\"  [attr-defined]": 1,
      "Incompatible return value type (got \"str | bytes | None\", expected \"bytes | None\")  [return-value]": 1,
      "Incompatible return value type (got \"dict[str, str | None]\", expected \"dict[str, str]\")  [return-value]": 1,
      "Incompatible types in assignment (expression has type \"str | None\", target has type \"dict[Any, str | None]\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, str | None]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"ndarray[Any, dtype[Any]]\", target has type \"dict[Any, Any]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"str\", target has type \"dict[Any, Any]\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"dict[str, Any]\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"list[Any] | str | None\", target has type \"dict[str, Any]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"str\", target has type \"dict[str, Any]\")  [assignment]": 3,
      "Argument 1 to \"sha256\" has incompatible type \"bytes | None\"; expected \"Buffer\"  [arg-type]": 1,
      "Incompatible return value type (got \"tuple[bytes | None, Any]\", expected \"tuple[bytes, dict[str, Any]]\")  [return-value]": 1,
      "Incompatible return value type (got \"dict[str, Any] | list[Any]\", expected \"dict[str, Any]\")  [return-value]": 2,
      "Too many arguments for \"generate_hash\" of \"BaseEncryptionService\"  [call-arg]": 1,
      "Unsupported right operand type for in (\"str | datetime\")  [operator]": 1,
      "Incompatible types in assignment (expression has type \"str | datetime\", target has type \"str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]": 3,
      "Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]": 2,
      "Returning Any from function declared to return \"ndarray[Any, Any]\"  [no-any-return]": 2,
      "Need type annotation for \"y\"  [var-annotated]": 1,
      "Item \"None\" of \"list[Any] | None\" has no attribute \"append\"  [union-attr]": 1,
      "Incompatible return value type (got \"dict[str, Any] | str | None\", expected \"dict[str, Any] | str\")  [return-value]": 1,
      "Returning Any from function declared to return \"dict[str, Any] | str\"  [no-any-return]": 2,
      "Name \"encrypt_value\" is not defined  [name-defined]": 2,
      "Incompatible return value type (got \"dict[Any, Any] | None\", expected \"dict[str, Any] | str\")  [return-value]": 1,
      "Name \"decrypt_value\" is not defined  [name-defined]": 2,
      "Argument \"aws_service_factory\" to \"AWSXGBoostService\" has incompatible type \"AWSServiceFactory\"; expected \"AWSServiceFactoryInterface | None\"  [arg-type]": 1,
      "Name \"AWSXGBoostService\" already defined (possibly by an import)  [no-redef]": 1,
      "Cannot determine type of \"_impl\"  [has-type]": 12,
      "def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]": 2,
      "\"AWSXGBoostService\" has no attribute \"_canonical\"  [attr-defined]": 2,
      "Name \"PrivacyLevel\" is not defined  [name-defined]": 2,
      "Unexpected keyword argument \"implementation_name\" for \"get_xgboost_service\"  [call-arg]": 1,
      "\"XGBoostInterface\" has no attribute \"initialize\"  [attr-defined]": 2,
      "Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"str\")  [assignment]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.passwords\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.database.base\"  [import-not-found]": 1,
      "\"Settings\" has no attribute \"SQLALCHEMY_TEST_DATABASE_URI\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"list[Any]\", variable has type \"dict[Any, Any]\")  [assignment]": 1,
      "No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]": 24,
      "def __getitem__(self, SupportsIndex, /) -> Any": 24,
      "def __getitem__(self, slice, /) -> list[Any]": 24,
      "Incompatible types in assignment (expression has type \"MockCipher\", variable has type \"Fernet\")  [assignment]": 1,
      "Argument 1 of \"encrypt\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"str | bytes | None\"  [override]": 1,
      "Argument 1 of \"decrypt\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"str | bytes | None\"  [override]": 1,
      "Argument 2 of \"encrypt_dict\" is incompatible with supertype \"BaseEncryptionService\"; supertype defines the argument type as \"bool\"  [override]": 1,
      "Signature of \"decrypt_dict\" incompatible with supertype \"BaseEncryptionService\"  [override]": 1,
      "def decrypt_dict(self, encrypted_data: dict[str, Any] | str | None) -> dict[Any, Any] | None": 1,
      "def decrypt_dict(self, data: dict[str, Any], decrypt_keys: list[str] | None = ...) -> dict[str, Any]": 1,
      "Argument 1 to \"startswith\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | tuple[Buffer, ...]\"  [arg-type]": 1,
      "Argument 1 to \"endswith\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | tuple[Buffer, ...]\"  [arg-type]": 1,
      "Return type \"str\" of \"generate_hash\" incompatible with return type \"tuple[str, str]\" in supertype \"BaseEncryptionService\"  [override]": 1,
      "Signature of \"verify_hash\" incompatible with supertype \"BaseEncryptionService\"  [override]": 1,
      "def verify_hash(self, data: str, salt_hex: str, hash_to_verify_hex: str) -> bool": 1,
      "def verify_hash(self, data: str, hash_value: str) -> bool": 1,
      "Return type \"str\" of \"generate_hmac\" incompatible with return type \"tuple[str, str]\" in supertype \"BaseEncryptionService\"  [override]": 1,
      "Signature of \"verify_hmac\" incompatible with supertype \"BaseEncryptionService\"  [override]": 1,
      "def verify_hmac(self, data: str, salt_hex: str, key_hex_to_verify: str) -> bool": 1,
      "def verify_hmac(self, data: str, hmac_value: str) -> bool": 1,
      "Return type \"str | None\" of \"decrypt_string\" incompatible with return type \"str\" in supertype \"BaseEncryptionService\"  [override]": 1,
      "Signature of \"encrypt_string\" incompatible with supertype \"BaseEncryptionService\"  [override]": 1,
      "def encrypt_string(self, value: str | Any, is_phi: bool = ...) -> str | None": 1,
      "def encrypt_string(self, value: str) -> str": 1,
      "\"type[PHICodeAnalyzer]\" has no attribute \"PHI_MODEL_NAMES\"  [attr-defined]": 1,
      "Need type annotation for \"findings\" (hint: \"findings: List[<type>] = ...\")  [var-annotated]": 2,
      "Argument 1 to \"_check_config_dict\" of \"PHICodeAnalyzer\" has incompatible type \"dict[Any, Any] | list[Any]\"; expected \"dict[Any, Any]\"  [arg-type]": 1,
      "Need type annotation for \"config_files\" (hint: \"config_files: List[<type>] = ...\")  [var-annotated]": 1,
      "Module \"app.domain.entities.biometric_alert\" does not explicitly export attribute \"AlertPriority\"  [attr-defined]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.biometric_alert.BiometricAlert]\" of \"save\" incompatible with return type \"Coroutine[Any, Any, app.domain.services.biometric_event_processor.BiometricAlert]\" in supertype \"BiometricAlertRepository\"  [override]": 1,
      "Argument 1 of \"save\" is incompatible with supertype \"BiometricAlertRepository\"; supertype defines the argument type as \"BiometricAlert\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.domain.entities.biometric_alert.BiometricAlert | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.domain.services.biometric_event_processor.BiometricAlert | None]\" in supertype \"BiometricAlertRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, list[app.domain.entities.biometric_alert.BiometricAlert]]\" of \"get_by_patient_id\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.services.biometric_event_processor.BiometricAlert]]\" in supertype \"BiometricAlertRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, list[app.domain.entities.biometric_alert.BiometricAlert]]\" of \"get_unacknowledged_alerts\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.services.biometric_event_processor.BiometricAlert]]\" in supertype \"BiometricAlertRepository\"  [override]": 1,
      "Argument 1 of \"get_unacknowledged_alerts\" is incompatible with supertype \"BiometricAlertRepository\"; supertype defines the argument type as \"AlertPriority | None\"  [override]": 1,
      "Incompatible default for argument \"session\" (default has type \"None\", argument has type \"AsyncSession\")  [assignment]": 1,
      "Argument 1 to \"create_async_engine\" has incompatible type \"str | None\"; expected \"str | URL\"  [arg-type]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IUserRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IUserRepository\"  [no-any-return]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IPatientRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IPatientRepository\"  [no-any-return]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IDigitalTwinRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IDigitalTwinRepository\"  [no-any-return]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IBiometricRuleRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IBiometricRuleRepository\"  [no-any-return]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IBiometricAlertRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IBiometricAlertRepository\"  [no-any-return]": 1,
      "Unexpected keyword argument \"uow_session\" for \"IBiometricTwinRepository\"  [call-arg]": 1,
      "Returning Any from function declared to return \"IBiometricTwinRepository\"  [no-any-return]": 1,
      "\"IUserRepository\" defined here": 1,
      "\"IPatientRepository\" defined here": 1,
      "\"IDigitalTwinRepository\" defined here": 1,
      "\"IBiometricRuleRepository\" defined here": 1,
      "\"IBiometricAlertRepository\" defined here": 1,
      "\"IBiometricTwinRepository\" defined here": 1,
      "Incompatible return value type (got \"None\", expected \"str\")  [return-value]": 7,
      "Incompatible default for argument \"target_cls\" (default has type \"None\", argument has type \"type[PydanticModel]\")  [assignment]": 1,
      "Argument 1 of \"process_result_value\" is incompatible with supertype \"TypeDecorator\"; supertype defines the argument type as \"Any | None\"  [override]": 1,
      "Returning Any from function declared to return \"dict[Any, Any] | list[Any]\"  [no-any-return]": 2,
      "Argument 1 to \"strip\" of \"bytes\" has incompatible type \"str\"; expected \"Buffer | None\"  [arg-type]": 1,
      "\"AsyncSession\" has no attribute \"_last_executed_query\"  [attr-defined]": 2,
      "Returning Any from function declared to return \"Appointment | None\"  [no-any-return]": 1,
      "Module \"sqlalchemy\" has no attribute \"UUID\"  [attr-defined]": 8,
      "Variable \"app.infrastructure.persistence.sqlalchemy.models.base.Base\" is not valid as a type  [valid-type]": 1,
      "Name \"TimestampMixin\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"AuditMixin\" already defined (possibly by an import)  [no-redef]": 1,
      "Variable \"app.infrastructure.persistence.sqlalchemy.config.base.Base\" is not valid as a type  [valid-type]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.exceptions.ml_exceptions\"  [import-not-found]": 1,
      "Unexpected keyword argument \"user_id\" for \"info\" of \"Logger\"  [call-arg]": 1,
      "Unexpected keyword argument \"resource_id\" for \"info\" of \"Logger\"  [call-arg]": 3,
      "Unexpected keyword argument \"resource_type\" for \"info\" of \"Logger\"  [call-arg]": 3,
      "Unexpected keyword argument \"audit_action\" for \"info\" of \"Logger\"  [call-arg]": 3,
      "Unexpected keyword argument \"audit_details\" for \"info\" of \"Logger\"  [call-arg]": 1,
      "\"info\" of \"Logger\" defined here": 11,
      "Need type annotation for \"results\" (hint: \"results: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"dict[str, Any]\", variable has type \"None\")  [assignment]": 6,
      "Signature of \"detect_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]": 3,
      "def detect_phi(self, text: str) -> list[dict[str, Any]]": 4,
      "def detect_phi(self, text: str, detection_level: str | None = ..., **kwargs: Any) -> dict[str, Any]": 1,
      "Signature of \"redact_phi\" incompatible with supertype \"PHIDetectionInterface\"  [override]": 3,
      "def redact_phi(self, text: str, replacement: str = ...) -> str": 3,
      "def redact_phi(self, text: str, replacement: str = ..., redaction_marker: str | None = ..., detection_level: str | None = ..., **kwargs: Any) -> dict[str, Any]": 1,
      "\"None\" has no attribute \"get\"  [attr-defined]": 8,
      "Item \"None\" of \"ComprehendMedicalServiceInterface | None\" has no attribute \"detect_phi\"  [union-attr]": 1,
      "Need type annotation for \"entities_list\" (hint: \"entities_list: List[<type>] = ...\")  [var-annotated]": 1,
      "Signature of \"create_digital_twin\" incompatible with supertype \"DigitalTwinInterface\"  [override]": 1,
      "def create_digital_twin(self, patient_id: str, initial_data: dict[str, Any]) -> dict[str, Any]": 1,
      "def create_digital_twin(self, patient_data: dict[str, Any]) -> dict[str, Any]": 1,
      "Incompatible default for argument \"context\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "def get_insights(self, twin_id: str, insight_type: str = ..., time_period: str = ..., insight_types: list[str] = ...) -> dict[str, Any]": 1,
      "Incompatible default for argument \"insight_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"insight_types\" (default has type \"None\", argument has type \"list[str]\")  [assignment]": 1,
      "\"sessionmaker\" expects no type arguments, but 1 given  [type-arg]": 1,
      "Argument \"email\" to \"ContactInfo\" has incompatible type \"str | bytes | None\"; expected \"str | None\"  [arg-type]": 1,
      "Argument \"phone\" to \"ContactInfo\" has incompatible type \"str | bytes | None\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"_get_channels_for_priority\" of \"BiometricAlertNotificationService\" has incompatible type \"Any | None\"; expected \"AlertPriority\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"datetime\", target has type \"str\")  [assignment]": 2,
      "Incompatible types in assignment (expression has type \"Logger\", variable has type Module)  [assignment]": 1,
      "Incompatible default for argument \"update\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]": 1,
      "\"type[Patient]\" has no attribute \"contact_info\"  [attr-defined]": 3,
      "\"model_dump\" of \"Patient\" defined here": 2,
      "Item \"None\" of \"TemporalKnowledgeGraph | None\" has no attribute \"nodes\"  [union-attr]": 1,
      "Item \"None\" of \"TemporalKnowledgeGraph | None\" has no attribute \"edges\"  [union-attr]": 1,
      "Item \"None\" of \"BayesianBeliefNetwork | None\" has no attribute \"variables\"  [union-attr]": 1,
      "Need type annotation for \"_system_prompts\" (hint: \"_system_prompts: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"str | None\", variable has type \"None\")  [assignment]": 2,
      "Cannot determine type of \"_client\"  [has-type]": 11,
      "Returning Any from function declared to return \"str | None\"  [no-any-return]": 4,
      "Cannot find implementation or library stub for module named \"app.core.services.ml.pat_interface\"  [import-not-found]": 2,
      "Incompatible default for argument \"model\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"list_foundation_models\"  [union-attr]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"head_bucket\"  [union-attr]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"describe_table\"  [union-attr]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"put_object\"  [union-attr]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"invoke_model\"  [union-attr]": 4,
      "Item \"None\" of \"Any | None\" has no attribute \"put_item\"  [union-attr]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"query\"  [union-attr]": 2,
      "Module \"app.infrastructure.ml.mentallama.service\" has no attribute \"MentaLLaMA\"; maybe \"MockMentaLLaMA\"?  [attr-defined]": 1,
      "Need type annotation for \"_patterns\" (hint: \"_patterns: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Need type annotation for \"_compiled_patterns\" (hint: \"_compiled_patterns: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "def detect_phi(self, text: str, detection_level: str | None = ...) -> dict[str, Any]": 3,
      "Need type annotation for \"positions_seen\" (hint: \"positions_seen: Set[<type>] = ...\")  [var-annotated]": 1,
      "def redact_phi(self, text: str, replacement: str = ..., detection_level: str | None = ...) -> dict[str, Any]": 2,
      "Need type annotation for \"_patient_sessions\" (hint: \"_patient_sessions: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "def get_insights(self, patient_id: str, insight_type: str | None = ..., time_period: str | None = ..., **kwargs: Any) -> dict[str, Any]": 1,
      "Generator has incompatible item type \"int\"; expected \"bool\"  [misc]": 1,
      "Cannot assign to a method  [method-assign]": 18,
      "Incompatible types in assignment (expression has type \"int\", target has type \"bool\")  [assignment]": 2,
      "Returning Any from function declared to return \"list[AnalyticsAggregate]\"  [no-any-return]": 1,
      "Unexpected keyword argument \"ttl\" for \"set\" of \"CacheService\"  [call-arg]": 1,
      "\"set\" of \"CacheService\" defined here": 1,
      "\"increment\" of \"CacheService\" defined here": 1,
      "def get_alerts(self, patient_id: str | None = ..., alert_type: str | None = ..., severity: AlertPriority | None = ..., status: str | None = ..., start_time: datetime | None = ..., end_time: datetime | None = ..., limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[Alert]]": 1,
      "Argument \"alert_type\" to \"Alert\" has incompatible type \"str\"; expected \"AlertType\"  [arg-type]": 2,
      "Argument \"status\" to \"Alert\" has incompatible type \"str\"; expected \"AlertStatus\"  [arg-type]": 2,
      "Argument 1 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 1,
      "Argument 4 of \"update_alert_status\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID | None\"  [override]": 1,
      "Argument 5 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]": 1,
      "Incompatible default for argument \"source_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Argument 6 of \"create_alert\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"dict[str, Any] | None\"  [override]": 1,
      "Argument 1 of \"get_alert_summary\" is incompatible with supertype \"AlertServiceInterface\"; supertype defines the argument type as \"str | UUID\"  [override]": 1,
      "\"type[AlertType]\" has no attribute \"MEDICATION\"  [attr-defined]": 1,
      "Only concrete class can be given where \"tuple[type[IRepository[Any]], type[MockRepository[Any]]]\" is expected  [type-abstract]": 6,
      "Property \"users\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockUserRepository\" with abstract attributes \"count\", \"create\", \"get_by_email\" and \"get_by_username\"  [abstract]": 2,
      "Property \"patients\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockPatientRepository\" with abstract attributes \"find_by_criteria\" and \"get_all\"  [abstract]": 2,
      "Property \"digital_twins\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockDigitalTwinRepository\" with abstract attributes \"create\", \"create_session\", ... and \"update_twin_state\" (3 methods suppressed)  [abstract]": 2,
      "Property \"biometric_rules\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"get_by_patient_id\"  [abstract]": 2,
      "Property \"biometric_alerts\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockBiometricAlertRepository\" with abstract attributes \"create\" and \"get_by_patient_id\"  [abstract]": 2,
      "Property \"biometric_twins\" defined in \"IUnitOfWork\" is read-only  [misc]": 1,
      "Cannot instantiate abstract class \"MockBiometricTwinRepository\" with abstract attributes \"add_data_point\", \"create\", \"get_by_patient_id\", \"get_data_history\" and \"get_latest_data\"  [abstract]": 2,
      "Module \"app.core.services.ml.xgboost.aws_service\" does not explicitly export attribute \"PrivacyLevel\"  [attr-defined]": 4,
      "Name \"test_initialization_missing_region\" already defined on line 80  [no-redef]": 1,
      "Name \"test_initialization_missing_endpoint_name\" already defined on line 108  [no-redef]": 1,
      "Invalid index type \"str\" for \"dict[str, Any] | str\"; expected type \"SupportsIndex | slice\"  [index]": 2,
      "Invalid index type \"int\" for \"list[dict[str, Any]] | dict[str, Any]\"; expected type \"str\"  [index]": 1,
      "Name \"test_integration_validation_error_empty_patient_id\" already defined on line 494  [no-redef]": 1,
      "Name \"test_integration_validation_error_empty_analysis_id\" already defined on line 505  [no-redef]": 1,
      "Name \"test_integration_validation_error_empty_profile_id\" already defined on line 516  [no-redef]": 1,
      "\"BedrockPAT\" has no attribute \"_comprehend_medical_service\"  [attr-defined]": 1,
      "Argument \"id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"patient_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 9,
      "Argument \"provider_id\" to \"Appointment\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 9,
      "Argument \"appointment_type\" to \"Appointment\" has incompatible type \"str\"; expected \"AppointmentType\"  [arg-type]": 1,
      "Argument \"status\" to \"Appointment\" has incompatible type \"str\"; expected \"AppointmentStatus\"  [arg-type]": 2,
      "Missing positional argument \"patient_id\" in call to \"Appointment\"  [call-arg]": 2,
      "Missing positional argument \"provider_id\" in call to \"Appointment\"  [call-arg]": 2,
      "Missing positional argument \"start_time\" in call to \"Appointment\"  [call-arg]": 2,
      "Missing positional argument \"end_time\" in call to \"Appointment\"  [call-arg]": 2,
      "Missing positional argument \"appointment_type\" in call to \"Appointment\"  [call-arg]": 2,
      "Argument 1 to \"UUID\" has incompatible type \"UUID\"; expected \"str | None\"  [arg-type]": 3,
      "Argument 1 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]": 2,
      "Argument 2 to \"verify_password\" has incompatible type \"None\"; expected \"str\"  [arg-type]": 2,
      "Argument 3 to \"verify_code\" of \"MFAService\" has incompatible type \"float\"; expected \"int\"  [arg-type]": 3,
      "Argument 1 to \"create_strategy\" of \"MFAStrategyFactory\" has incompatible type \"str\"; expected \"MFAType\"  [arg-type]": 1,
      "Value of type \"dict[str, Any] | str | None\" is not indexable  [index]": 16,
      "Invalid index type \"str\" for \"dict[str, Any] | str | None\"; expected type \"SupportsIndex | slice\"  [index]": 16,
      "Value of type \"int | Collection[Collection[str]] | None\" is not indexable  [index]": 3,
      "Item \"None\" of \"str | None\" has no attribute \"startswith\"  [union-attr]": 3,
      "Argument \"SECRET_KEY\" to \"Settings\" has incompatible type \"str\"; expected \"SecretStr\"  [arg-type]": 1,
      "\"Settings\" has no attribute \"JWT_ISSUER\"  [attr-defined]": 1,
      "\"Settings\" has no attribute \"JWT_AUDIENCE\"  [attr-defined]": 1,
      "Variable \"app.tests.unit.infrastructure.persistence.sqlalchemy.test_database_enhanced.TestBase\" is not valid as a type  [valid-type]": 1,
      "Invalid base class \"TestBase\"  [misc]": 3,
      "\"Select\" has no attribute \"filter_by\"  [attr-defined]": 3,
      "Argument 1 to \"get_by_id\" of \"SQLAlchemyBiometricAlertRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 2,
      "Argument 1 to \"get_by_patient_id\" of \"SQLAlchemyBiometricAlertRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "\"PHIDetectionService\" has no attribute \"_original_contains_phi\"  [attr-defined]": 1,
      "\"PHIDetectionService\" has no attribute \"_original_detect_phi\"  [attr-defined]": 1,
      "\"PHIDetectionService\" has no attribute \"_original_redact_phi\"  [attr-defined]": 1,
      "\"PHIDetectionService\" has no attribute \"_original_anonymize_phi\"  [attr-defined]": 1,
      "\"BiometricCorrelationService\" has no attribute \"model_initialized\"  [attr-defined]": 1,
      "Need type annotation for \"empty_data\" (hint: \"empty_data: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "\"BiometricCorrelationModel\" has no attribute \"_initialize_model\"; maybe \"is_initialized\"?  [attr-defined]": 1,
      "\"BiometricCorrelationModel\" has no attribute \"_load_model\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"MagicMock\", variable has type \"None\")  [assignment]": 4,
      "\"None\" has no attribute \"predict\"  [attr-defined]": 1,
      "\"dict[Any, Any]\" has no attribute \"email\"  [attr-defined]": 2,
      "\"dict[Any, Any]\" has no attribute \"phone\"  [attr-defined]": 1,
      "\"PatientWithDescriptor\" has no attribute \"_contact_info\"; maybe \"contact_info\"?  [attr-defined]": 1,
      "\"tuple[str, str]\" has no attribute \"email\"  [attr-defined]": 1,
      "\"tuple[str, str]\" has no attribute \"phone\"  [attr-defined]": 1,
      "\"Patient\" has no attribute \"contact_info\"; maybe \"_contact_info\" or \"update_contact_info\"?  [attr-defined]": 1,
      "Item \"None\" of \"PhysiologicalRange | None\" has no attribute \"min\"  [union-attr]": 1,
      "\"Appointment\" has no attribute \"last_updated\"  [attr-defined]": 10,
      "Name \"time\" is not defined  [name-defined]": 16,
      "Argument \"value\" to \"BiometricDataPoint\" has incompatible type \"Any | None\"; expected \"float | int | dict[str, Any]\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"float | int | dict[str, Any]\")  [assignment]": 1,
      "Unsupported operand types for < (\"float\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for < (\"int\" and \"dict[str, Any]\")  [operator]": 1,
      "Both left and right operands are unions": 4,
      "Unsupported operand types for <= (\"float\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for <= (\"int\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for > (\"float\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for > (\"int\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for >= (\"float\" and \"dict[str, Any]\")  [operator]": 1,
      "Unsupported operand types for >= (\"int\" and \"dict[str, Any]\")  [operator]": 1,
      "Cannot infer type argument 1 of \"assertAlmostEqual\" of \"TestCase\"  [misc]": 1,
      "Argument 1 to \"assertAlmostEqual\" of \"TestCase\" has incompatible type \"float | int | dict[str, Any]\"; expected \"SupportsSub[Any, SupportsAbs[SupportsRound[object]]]\"  [arg-type]": 1,
      "\"TestMockMentaLLaMA\" has no attribute \"service\"  [attr-defined]": 17,
      "\"TestMockMentaLLaMA\" has no attribute \"sample_text\"  [attr-defined]": 9,
      "Argument 1 to \"initialize\" of \"MockDigitalTwinService\" has incompatible type \"str\"; expected \"dict[str, Any]\"  [arg-type]": 1,
      "\"TestMockDigitalTwinService\" has no attribute \"service\"  [attr-defined]": 22,
      "\"TestMockDigitalTwinService\" has no attribute \"twin_id\"  [attr-defined]": 15,
      "\"TestMockDigitalTwinService\" has no attribute \"sample_message\"  [attr-defined]": 4,
      "Dict entry 0 has incompatible type \"str\": \"str\"; expected \"str\": \"float\"  [dict-item]": 1,
      "Need type annotation for \"dimensions\" (hint: \"dimensions: List[<type>] = ...\")  [var-annotated]": 1,
      "Module has no attribute \"ANY\"  [attr-defined]": 1,
      "Argument 1 to \"analyze_file\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]": 4,
      "Argument 1 to \"analyze_directory\" of \"PHICodeAnalyzer\" has incompatible type \"Path\"; expected \"str\"  [arg-type]": 2,
      "Incompatible types in assignment (expression has type \"PHIFinding\", variable has type \"TextIOWrapper\")  [assignment]": 1,
      "\"TextIOWrapper\" has no attribute \"message\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"ndarray[Any, Any]\", variable has type \"list[float]\")  [assignment]": 1,
      "Argument 1 to \"decrypt_string\" of \"BaseEncryptionService\" has incompatible type \"str | None\"; expected \"str | bytes\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"str | None\", variable has type \"str\")  [assignment]": 5,
      "Incompatible types in assignment (expression has type \"bytes\", variable has type \"str\")  [assignment]": 1,
      "Item \"dict[str, Any]\" of \"dict[str, Any] | str | None\" has no attribute \"startswith\"  [union-attr]": 1,
      "Item \"None\" of \"dict[str, Any] | str | None\" has no attribute \"startswith\"  [union-attr]": 1,
      "Unsupported right operand type for in (\"dict[str, Any] | str | None\")  [operator]": 1,
      "Argument 2 to \"process_bind_param\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]": 9,
      "Argument 1 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"str\"  [arg-type]": 2,
      "Argument 2 to \"process_result_value\" of \"EncryptedTypeBase\" has incompatible type \"None\"; expected \"Dialect\"  [arg-type]": 7,
      "\"Callable[[], str]\" has no attribute \"return_value\"  [attr-defined]": 1,
      "No overload variant of \"__setitem__\" of \"list\" matches argument types \"str\", \"int\"  [call-overload]": 1,
      "def __setitem__(self, SupportsIndex, Any, /) -> None": 1,
      "def __setitem__(self, slice, Iterable[Any], /) -> None": 1,
      "Name \"EncryptionError\" is not defined  [name-defined]": 1,
      "Item \"None\" of \"AsyncEngine | None\" has no attribute \"connect\"  [union-attr]": 1,
      "Need type annotation for \"result\"  [var-annotated]": 3,
      "Item \"None\" of \"AsyncEngine | None\" has no attribute \"begin\"  [union-attr]": 2,
      "Argument 1 to \"Select\" has incompatible type \"Table\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]": 1,
      "Returning Any from function declared to return \"InMemoryDynamoDBService\"  [no-any-return]": 1,
      "\"InMemoryS3Service\" has no attribute \"objects\"  [attr-defined]": 1,
      "\"InMemoryS3Service\" has no attribute \"bucket_exists\"; maybe \"check_bucket_exists\"?  [attr-defined]": 1,
      "Returning Any from function declared to return \"InMemoryS3Service\"  [no-any-return]": 1,
      "Returning Any from function declared to return \"InMemorySageMakerService\"  [no-any-return]": 1,
      "Function \"builtins.callable\" is not valid as a type  [valid-type]": 1,
      "Perhaps you meant \"typing.Callable\" instead of \"callable\"?": 1,
      "Need type annotation for \"root_event\"  [var-annotated]": 1,
      "Need type annotation for \"event1\"  [var-annotated]": 1,
      "\"TemporalSequence[bool]\" has no attribute \"time_points\"  [attr-defined]": 1,
      "\"TemporalSequence[bool]\" has no attribute \"time_unit\"  [attr-defined]": 1,
      "\"TemporalSequence[bool]\" has no attribute \"get_time_point\"  [attr-defined]": 1,
      "\"TemporalSequence[bool]\" has no attribute \"get_data_series\"  [attr-defined]": 1,
      "\"TemporalSequence[bool]\" has no attribute \"interpolate_at_time\"  [attr-defined]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"add_temporal_sequence\"; maybe \"temporal_sequences\" or \"generate_temporal_sequence\"?  [attr-defined]": 2,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"calculate_receptor_response\"  [attr-defined]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"add_neurotransmitter_connection\"  [attr-defined]": 1,
      "\"TemporalNeurotransmitterMapping\" has no attribute \"simulate_cascade_effects\"  [attr-defined]": 1,
      "Module \"app.core.services.ml.xgboost\" does not explicitly export attribute \"ModelType\"  [attr-defined]": 1,
      "Module \"app.core.services.ml.xgboost\" has no attribute \"PrivacyLevel\"  [attr-defined]": 1,
      "Unexpected keyword argument \"id\" for \"TemporalEvent\"  [call-arg]": 1,
      "Unexpected keyword argument \"details\" for \"TemporalEvent\"  [call-arg]": 1,
      "Unexpected keyword argument \"created_at\" for \"TemporalEvent\"  [call-arg]": 1,
      "Unexpected keyword argument \"id\" for \"EventChain\"  [call-arg]": 1,
      "Unexpected keyword argument \"neurotransmitter\" for \"EventChain\"  [call-arg]": 1,
      "Unexpected keyword argument \"brain_region\" for \"EventChain\"  [call-arg]": 1,
      "Unexpected keyword argument \"start_time\" for \"EventChain\"  [call-arg]": 1,
      "Unexpected keyword argument \"end_time\" for \"EventChain\"  [call-arg]": 1,
      "Unexpected keyword argument \"clinical_significance\" for \"EventChain\"  [call-arg]": 1,
      "Incompatible default for argument \"store_path\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Cannot determine type of \"_hmac_key\"  [has-type]": 1,
      "Incompatible types in assignment (expression has type \"Collection[str]\", variable has type \"str\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"Sequence[str]\", variable has type \"str\")  [assignment]": 1,
      "Need type annotation for \"all_fields\" (hint: \"all_fields: Set[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible return value type (got \"str | UUID\", expected \"str | None\")  [return-value]": 1,
      "Argument 1 to \"Select\" has incompatible type \"type[ModelT]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]": 2,
      "\"type[ModelT]\" has no attribute \"id\"  [attr-defined]": 2,
      "Argument 1 to \"Delete\" has incompatible type \"type[ModelT]\"; expected \"str | Selectable\"  [arg-type]": 1,
      "Argument 1 to \"select_from\" of \"Select\" has incompatible type \"type[ModelT]\"; expected \"FromClause\"  [arg-type]": 1,
      "Need type annotation for \"prescriptions\"  [var-annotated]": 2,
      "Need type annotation for \"patient_id\"  [var-annotated]": 8,
      "Need type annotation for \"medication_id\"  [var-annotated]": 1,
      "Need type annotation for \"provider_id\"  [var-annotated]": 4,
      "Need type annotation for \"patient\"  [var-annotated]": 6,
      "Need type annotation for \"medication_catalog_item\"  [var-annotated]": 1,
      "Need type annotation for \"prescribing_provider\"  [var-annotated]": 1,
      "Need type annotation for \"timeseries_id\"  [var-annotated]": 1,
      "Need type annotation for \"timeseries\"  [var-annotated]": 2,
      "Name \"value\" already defined on line 58  [no-redef]": 1,
      "Name \"metadata_dict\" already defined on line 68  [no-redef]": 1,
      "Need type annotation for \"twin_id\"  [var-annotated]": 2,
      "Need type annotation for \"twin\"  [var-annotated]": 2,
      "Need type annotation for \"data_points\"  [var-annotated]": 3,
      "Name \"physiological_range\" already defined on line 109  [no-redef]": 1,
      "Need type annotation for \"appointment_id\"  [var-annotated]": 1,
      "Need type annotation for \"parent_note_id\"  [var-annotated]": 1,
      "Need type annotation for \"provider\"  [var-annotated]": 3,
      "Need type annotation for \"appointment\"  [var-annotated]": 1,
      "Need type annotation for \"parent_note\"  [var-annotated]": 1,
      "\"ClinicalNote\" has no attribute \"redacted_content\"; maybe \"update_content\"?  [attr-defined]": 1,
      "\"ClinicalNote\" has no attribute \"title\"  [attr-defined]": 1,
      "\"ClinicalNote\" has no attribute \"parent_note_id\"  [attr-defined]": 1,
      "Unexpected keyword argument \"redacted_content\" for \"ClinicalNote\"  [call-arg]": 1,
      "Unexpected keyword argument \"title\" for \"ClinicalNote\"  [call-arg]": 1,
      "Unexpected keyword argument \"parent_note_id\" for \"ClinicalNote\"  [call-arg]": 1,
      "Argument \"note_type\" to \"ClinicalNote\" has incompatible type \"NoteType | None\"; expected \"NoteType\"  [arg-type]": 1,
      "Need type annotation for \"timeseries_data\"  [var-annotated]": 1,
      "Need type annotation for \"biometric_twin_id\"  [var-annotated]": 1,
      "Need type annotation for \"biometric_twin\"  [var-annotated]": 2,
      "Need type annotation for \"rule_id\"  [var-annotated]": 2,
      "Need type annotation for \"acknowledged_by_user_id\"  [var-annotated]": 1,
      "Need type annotation for \"resolved_by_user_id\"  [var-annotated]": 1,
      "Need type annotation for \"rule\"  [var-annotated]": 1,
      "Need type annotation for \"acknowledged_by_user\"  [var-annotated]": 1,
      "Need type annotation for \"resolved_by_user\"  [var-annotated]": 1,
      "Need type annotation for \"clinical_notes\"  [var-annotated]": 3,
      "\"Appointment\" has no attribute \"virtual\"  [attr-defined]": 1,
      "Unexpected keyword argument \"virtual\" for \"Appointment\"  [call-arg]": 1,
      "Need type annotation for \"user\"  [var-annotated]": 4,
      "Module \"sqlalchemy.pool\" has no attribute \"FallbackAsyncAdaptedQueuePool\"  [attr-defined]": 1,
      "Dict entry 1 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]": 1,
      "Dict entry 2 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]": 1,
      "Dict entry 3 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]": 1,
      "Dict entry 4 has incompatible type \"str\": \"int\"; expected \"str\": \"type[NullPool]\"  [dict-item]": 1,
      "Dict entry 5 has incompatible type \"str\": \"bool\"; expected \"str\": \"type[NullPool]\"  [dict-item]": 1,
      "Cannot instantiate abstract class \"UserRepository\" with abstract attributes \"count\" and \"list_all\"  [abstract]": 1,
      "Returning Any from function declared to return \"User\"  [no-any-return]": 6,
      "Argument 1 of \"create\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]": 1,
      "Argument 1 of \"update\" is incompatible with supertype \"IUserRepository\"; supertype defines the argument type as \"User\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, None]\" of \"delete\" incompatible with return type \"Coroutine[Any, Any, bool]\" in supertype \"IUserRepository\"  [override]": 1,
      "\"type[datetime]\" has no attribute \"UTC\"  [attr-defined]": 13,
      "Name \"ValidationError\" already defined (possibly by an import)  [no-redef]": 1,
      "Need type annotation for \"metrics\" (hint: \"metrics: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[str, Any]]\", target has type \"str\")  [assignment]": 1,
      "Variable \"app.infrastructure.database.models.Base\" is not valid as a type  [valid-type]": 1,
      "Argument \"id\" to \"Patient\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]": 6,
      "Argument \"patient_id\" to \"DigitalTwin\" has incompatible type \"UUID | None\"; expected \"UUID\"  [arg-type]": 1,
      "Module \"app.domain.entities.patient\" has no attribute \"Diagnosis\"  [attr-defined]": 1,
      "Module \"app.domain.entities.patient\" has no attribute \"DiagnosisStatus\"  [attr-defined]": 1,
      "Module \"app.domain.entities.patient\" has no attribute \"Gender\"  [attr-defined]": 1,
      "Module \"app.domain.entities.patient\" has no attribute \"Medication\"  [attr-defined]": 1,
      "Module \"app.domain.entities.patient\" has no attribute \"MedicationStatus\"  [attr-defined]": 1,
      "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date\"; expected \"datetime | str\"  [arg-type]": 9,
      "Name \"UUID\" is not defined  [name-defined]": 1,
      "\"MLServiceFactory\" has no attribute \"_mental_llama_instances\"  [attr-defined]": 2,
      "def encode(claims: dict[str, Any], key: str, algorithm: str = ..., headers: dict[str, Any] | None = ..., access_token: bool = ...) -> str": 1,
      "def jwt_encode(claims: Any, key: Any, algorithm: Any = ..., **kwargs: Any) -> Any": 1,
      "def decode(token: str, key: str = ..., algorithms: list[str] | None = ..., audience: str | None = ..., issuer: str | None = ..., subject: str | None = ..., options: dict[str, Any] | None = ...) -> dict[str, Any]": 1,
      "def jwt_decode(token: Any, key: Any, algorithms: Any = ..., **kwargs: Any) -> Any": 1,
      "Name \"TokenType\" already defined (possibly by an import)  [no-redef]": 2,
      "Name \"AuthenticationError\" already defined (possibly by an import)  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[ITokenBlacklistRepository]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[Settings]\")  [assignment]": 1,
      "Name \"TokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"InvalidTokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"TokenExpiredException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"RevokedTokenException\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"TokenGenerationException\" already defined (possibly by an import)  [no-redef]": 1,
      "Incompatible types in assignment (expression has type \"dict[Any, Any]\", target has type \"str\")  [assignment]": 1,
      "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"dict[Any, Any]\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"list[dict[Any, Any]]\", target has type \"str\")  [assignment]": 1,
      "Signature of \"create_access_token\" incompatible with supertype \"IJwtService\"  [override]": 1,
      "def create_access_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str": 1,
      "def create_access_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., jti: str | None = ...) -> str": 1,
      "Signature of \"create_refresh_token\" incompatible with supertype \"IJwtService\"  [override]": 1,
      "def create_refresh_token(self, data: dict[str, Any], expires_delta: timedelta | None = ..., expires_delta_minutes: int | None = ...) -> str": 1,
      "def create_refresh_token(self, data: dict[str, Any], expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., parent_token_jti: str | None = ..., family_id: str | None = ...) -> str": 1,
      "Unsupported operand types for * (\"None\" and \"int\")  [operator]": 8,
      "Left operand is of type \"int | Any | None\"": 8,
      "Argument \"days\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]": 1,
      "Argument \"minutes\" to \"timedelta\" has incompatible type \"int | Any | None\"; expected \"float\"  [arg-type]": 1,
      "Argument \"algorithm\" to \"encode\" has incompatible type \"str | Any | None\"; expected \"str\"  [arg-type]": 3,
      "Unexpected keyword argument \"algorithm\" for \"decode\"; did you mean \"algorithms\"?  [call-arg]": 1,
      "Argument 5 to \"decode\" has incompatible type \"**dict[str, str]\"; expected \"list[str] | None\"  [arg-type]": 1,
      "List item 0 has incompatible type \"str | Any | None\"; expected \"str\"  [list-item]": 4,
      "Function \"is_expired\" could always be true in boolean context  [truthy-function]": 4,
      "Returning Any from function declared to return \"User | None\"  [no-any-return]": 2,
      "Missing positional argument \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]": 2,
      "Argument 2 to \"add_to_blacklist\" of \"ITokenBlacklistRepository\" has incompatible type \"datetime\"; expected \"str\"  [arg-type]": 1,
      "Incompatible return value type (got \"Coroutine[Any, Any, bool]\", expected \"bool\")  [return-value]": 1,
      "Maybe you forgot to use \"await\"?": 1,
      "Incompatible default for argument \"resource_owner_id\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "\"create_access_token\" of \"JWTService\" defined here": 3,
      "\"create_refresh_token\" of \"JWTService\" defined here": 1,
      "\"decode\" defined here": 1,
      "Incompatible types in assignment (expression has type \"object\", variable has type \"type[TokenPayload]\")  [assignment]": 1,
      "\"create_access_token\" of \"IJwtService\" defined here": 2,
      "\"create_refresh_token\" of \"IJwtService\" defined here": 1,
      "Need type annotation for \"tasks\" (hint: \"tasks: List[<type>] = ...\")  [var-annotated]": 1,
      "Unexpected keyword argument \"increment\" for \"increment\" of \"CacheService\"  [call-arg]": 1,
      "Cannot instantiate abstract class \"MockUnitOfWork\" with abstract attributes \"biometric_alerts\", \"biometric_rules\", ... and \"users\" (3 methods suppressed)  [abstract]": 1,
      "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"TokenType\"  [attr-defined]": 8,
      "def freeze_time(time_to_freeze: str | datetime | date | timedelta | FunctionType | Callable[[], str | datetime | date | timedelta] | Iterator[datetime] | None = ..., tz_offset: int | timedelta = ..., ignore: list[str] | None = ..., tick: bool = ..., as_arg: bool = ..., as_kwarg: str = ..., auto_tick_seconds: float = ..., real_asyncio: bool = ...) -> _freeze_time": 3,
      "def freeze_time(time_str: Any) -> Any": 3,
      "Incompatible types in assignment (expression has type \"timezone\", variable has type \"ZoneInfo\")  [assignment]": 4,
      "\"TokenPayload\" has no attribute \"custom_key\"  [attr-defined]": 1,
      "\"TokenPayload\" has no attribute \"numeric\"  [attr-defined]": 1,
      "Argument 1 to \"decode_token\" of \"JWTService\" has incompatible type \"bytes\"; expected \"str\"  [arg-type]": 2,
      "\"TokenPayload\" has no attribute \"session_id\"  [attr-defined]": 1,
      "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"InvalidTokenException\"  [attr-defined]": 2,
      "\"Session\" has no attribute \"__enter__\"; maybe \"__iter__\"?  [attr-defined]": 1,
      "\"Session\" has no attribute \"__exit__\"  [attr-defined]": 1,
      "Argument \"id\" to \"Medication\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"provider_id\" to \"Medication\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Name \"AWSComprehendMedicalPHIDetection\" is not defined  [name-defined]": 1,
      "Name \"MentaLLaMAService\" is not defined  [name-defined]": 2,
      "Name \"MockMentaLLaMAService\" is not defined  [name-defined]": 1,
      "Need type annotation for \"events\" (hint: \"events: List[<type>] = ...\")  [var-annotated]": 1,
      "Incompatible import of \"PHIAuditor\" (imported name has type \"type[MockPHIAuditor]\", local name has type \"type[PHIAuditor]\")  [assignment]": 1,
      "Incompatible import of \"PHIAuditResult\" (imported name has type \"type[MockPHIAuditResult]\", local name has type \"type[PHIAuditResult]\")  [assignment]": 1,
      "\"PHIAuditResult\" has no attribute \"has_phi\"  [attr-defined]": 2,
      "Cannot find implementation or library stub for module named \"app.infrastructure.security.auth_middleware\"  [import-not-found]": 1,
      "Module \"app.infrastructure.security.rbac.role_manager\" has no attribute \"RoleManager\"  [attr-defined]": 1,
      "Name \"JWTService\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"AuthMiddleware\" already defined (possibly by an import)  [no-redef]": 1,
      "Item \"JWTService\" of \"Any | JWTService\" has no attribute \"verify_token\"  [union-attr]": 1,
      "Name \"RoleManager\" already defined (possibly by an import)  [no-redef]": 1,
      "Unsupported right operand type for in (\"object\")  [operator]": 1,
      "Cannot assign multiple types to name \"select\" without an explicit \"Type[...]\" annotation  [misc]": 1,
      "Incompatible types in assignment (expression has type \"Callable[[Iterable[ColumnElement[Any] | FromClause | int] | None, str | bool | Visitable | None, str | Selectable | Iterable[str | Selectable] | None, int | str | Visitable | Iterable[int | str | Visitable] | None, str | bool | Visitable | None, int | str | Visitable | Iterable[int | str | Visitable] | None, bool, bool, int | None, int | None, bool, bool, Engine | Connection, Any | None, Any | None, KwArg(Any)], str]\", variable has type \"type[Select]\")  [assignment]": 1,
      "Argument 1 to \"Select\" has incompatible type \"type[object]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]": 1,
      "\"User\" has no attribute \"role\"  [attr-defined]": 1,
      "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPrivateKey | EllipticCurvePrivateKey | Ed25519PrivateKey | Ed448PrivateKey | str | bytes\"  [arg-type]": 2,
      "Argument 2 has incompatible type \"SecretStr\"; expected \"RSAPublicKey | EllipticCurvePublicKey | Ed25519PublicKey | Ed448PublicKey | str | bytes\"  [arg-type]": 2,
      "Incompatible types in \"await\" (actual type \"Awaitable[int] | int\", expected type \"Awaitable[Any]\")  [misc]": 3,
      "Incompatible types in \"await\" (actual type \"Awaitable[set[Any]] | set[Any]\", expected type \"Awaitable[Any]\")  [misc]": 1,
      "Incompatible types in \"await\" (actual type \"Awaitable[str | None] | str | None\", expected type \"Awaitable[Any]\")  [misc]": 1,
      "Incompatible types in \"await\" (actual type \"Awaitable[dict[Any, Any]] | dict[Any, Any]\", expected type \"Awaitable[Any]\")  [misc]": 1,
      "Signature of \"check_rate_limit\" incompatible with supertype \"RateLimiter\"  [override]": 1,
      "def check_rate_limit(self, key: str, config: Any = ..., user_id: str | None = ...) -> Any": 1,
      "def check_rate_limit(self, key: str, config: RateLimitConfig) -> bool": 1,
      "Unsupported operand types for <= (\"int\" and \"Awaitable[Any]\")  [operator]": 1,
      "Left operand is of type \"Awaitable[Any] | Any\"": 1,
      "Item \"None\" of \"Redis | None\" has no attribute \"pipeline\"  [union-attr]": 1,
      "Item \"Pipeline\" of \"Pipeline | Any\" has no attribute \"__aenter__\"  [union-attr]": 1,
      "Item \"Pipeline\" of \"Pipeline | Any\" has no attribute \"__aexit__\"  [union-attr]": 1,
      "Item \"None\" of \"RateLimitConfig | None\" has no attribute \"period_seconds\"  [union-attr]": 2,
      "Item \"None\" of \"RateLimitConfig | None\" has no attribute \"requests_per_period\"  [union-attr]": 1,
      "Incompatible default for argument \"limiter_type\" (default has type \"None\", argument has type \"str\")  [assignment]": 1,
      "Incompatible default for argument \"redis_client\" (default has type \"None\", argument has type \"Redis\")  [assignment]": 1,
      "Module \"app.infrastructure.security.jwt.jwt_service\" does not explicitly export attribute \"IJwtService\"  [attr-defined]": 2,
      "Argument 1 to \"_deserialize_config\" of \"DigitalTwinRepositoryImpl\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[Any, Any] | None\"  [arg-type]": 1,
      "Argument 1 to \"_deserialize_state\" of \"DigitalTwinRepositoryImpl\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[Any, Any] | None\"  [arg-type]": 1,
      "Name \"datetime\" is not defined  [name-defined]": 1,
      "Function does not return a value  [func-returns-value]": 6,
      "Return type \"BiometricTwinState | None\" of \"get_by_id\" incompatible with return type \"BiometricTwin | None\" in supertype \"BiometricTwinRepository\"  [override]": 1,
      "Return type \"BiometricTwinState | None\" of \"get_by_patient_id\" incompatible with return type \"BiometricTwin | None\" in supertype \"BiometricTwinRepository\"  [override]": 1,
      "Return type \"BiometricTwinState\" of \"save\" incompatible with return type \"BiometricTwin\" in supertype \"BiometricTwinRepository\"  [override]": 1,
      "Argument 1 of \"save\" is incompatible with supertype \"BiometricTwinRepository\"; supertype defines the argument type as \"BiometricTwin\"  [override]": 1,
      "\"BiometricTwinState\" has no attribute \"twin_id\"  [attr-defined]": 4,
      "Return type \"list[BiometricTwinState]\" of \"list_by_connected_device\" incompatible with return type \"list[BiometricTwin]\" in supertype \"BiometricTwinRepository\"  [override]": 1,
      "Return type \"list[BiometricTwinState]\" of \"list_all\" incompatible with return type \"list[BiometricTwin]\" in supertype \"BiometricTwinRepository\"  [override]": 1,
      "Unexpected keyword argument \"twin_id\" for \"BiometricTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"created_at\" for \"BiometricTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"updated_at\" for \"BiometricTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"baseline_established\" for \"BiometricTwinState\"  [call-arg]": 1,
      "Unexpected keyword argument \"connected_devices\" for \"BiometricTwinState\"  [call-arg]": 1,
      "Argument \"data_points\" to \"BiometricTwinState\" has incompatible type \"list[BiometricDataPoint]\"; expected \"dict[str, list[BiometricDataPoint]]\"  [arg-type]": 1,
      "\"BiometricTwinState\" has no attribute \"created_at\"  [attr-defined]": 1,
      "\"BiometricTwinState\" has no attribute \"updated_at\"  [attr-defined]": 2,
      "\"BiometricTwinState\" has no attribute \"baseline_established\"  [attr-defined]": 2,
      "\"BiometricTwinState\" has no attribute \"connected_devices\"  [attr-defined]": 2,
      "Missing named argument \"patient_id\" for \"BiometricDataPoint\"  [call-arg]": 1,
      "Argument \"value\" to \"BiometricDataPoint\" has incompatible type \"str | float | int | dict[Any, Any]\"; expected \"float\"  [arg-type]": 1,
      "Argument \"metadata\" to \"BiometricDataPoint\" has incompatible type \"dict[str, Any] | list[Any]\"; expected \"dict[str, Any] | None\"  [arg-type]": 1,
      "Argument \"confidence\" to \"BiometricDataPoint\" has incompatible type \"Decimal\"; expected \"float | None\"  [arg-type]": 1,
      "\"str\" has no attribute \"data_id\"  [attr-defined]": 1,
      "Argument 1 to \"_map_data_point_to_model\" of \"SQLAlchemyBiometricTwinRepository\" has incompatible type \"str\"; expected \"BiometricDataPoint\"  [arg-type]": 1,
      "Returning Any from function declared to return \"str | float | int | dict[Any, Any]\"  [no-any-return]": 1,
      "\"commit\" of \"Session\" does not return a value  [func-returns-value]": 3,
      "\"rollback\" of \"Session\" does not return a value  [func-returns-value]": 4,
      "Too many arguments for \"where\" of \"Select\"  [call-arg]": 4,
      "Name \"uuid4\" is not defined  [name-defined]": 1,
      "Name \"timezone\" is not defined  [name-defined]": 2,
      "Incompatible types in assignment (expression has type \"Any | None\", variable has type \"datetime\")  [assignment]": 3,
      "Module \"sqlalchemy.orm\" has no attribute \"declared_attr\"  [attr-defined]": 1,
      "Need type annotation for \"patients\"  [var-annotated]": 2,
      "Need type annotation for \"analytics_events\"  [var-annotated]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"datetime\")  [assignment]": 2,
      "Need type annotation for \"sequence\"  [var-annotated]": 1,
      "Name \"inspect\" already defined (by an import)  [no-redef]": 1,
      "Need type annotation for \"appointments\"  [var-annotated]": 2,
      "Need type annotation for \"biometric_rules\"  [var-annotated]": 1,
      "Module not callable  [operator]": 1,
      "\"BiometricRule\" has no attribute \"metadata\"  [attr-defined]": 1,
      "Item \"str\" of \"str | Any\" has no attribute \"get\"  [union-attr]": 4,
      "Module \"app.infrastructure.persistence.sqlalchemy.models.digital_twin\" has no attribute \"BiometricDataPointModel\"  [attr-defined]": 1,
      "Dict entry 0 has incompatible type \"str\": \"datetime | None\"; expected \"str\": \"datetime\"  [dict-item]": 1,
      "Dict entry 1 has incompatible type \"str\": \"datetime | None\"; expected \"str\": \"datetime\"  [dict-item]": 1,
      "Need type annotation for \"interaction_db\" (hint: \"interaction_db: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "\"None\" has no attribute \"predict_proba\"  [attr-defined]": 2,
      "Need type annotation for \"recommendations\"  [var-annotated]": 1,
      "\"None\" has no attribute \"fit\"  [attr-defined]": 3,
      "\"None\" has no attribute \"score\"  [attr-defined]": 4,
      "\"AuditLogger\" has no attribute \"get_audit_trail\"  [attr-defined]": 1,
      "Argument 3 of \"set\" is incompatible with supertype \"CacheService\"; supertype defines the argument type as \"int | None\"  [override]": 1,
      "Returning Any from function declared to return \"int | None\"  [no-any-return]": 2,
      "Module \"app.domain.entities.provider\" has no attribute \"AvailabilitySlot\"  [attr-defined]": 1,
      "Module \"app.domain.entities.provider\" has no attribute \"Credential\"  [attr-defined]": 1,
      "Module \"app.domain.entities.provider\" has no attribute \"ProviderRole\"; maybe \"Provider\"?  [attr-defined]": 1,
      "Module \"app.domain.entities.provider\" has no attribute \"ProviderSpecialty\"  [attr-defined]": 1,
      "Module \"app.domain.exceptions\" has no attribute \"PatientLimitExceededError\"  [attr-defined]": 1,
      "Incompatible types in \"await\" (actual type \"Provider | None\", expected type \"Awaitable[Any]\")  [misc]": 9,
      "\"ProviderRepository\" has no attribute \"get_by_npi\"; maybe \"get_by_id\"?  [attr-defined]": 1,
      "Unexpected keyword argument \"role\" for \"Provider\"  [call-arg]": 1,
      "Unexpected keyword argument \"dea_number\" for \"Provider\"  [call-arg]": 1,
      "Unexpected keyword argument \"is_active\" for \"Provider\"  [call-arg]": 1,
      "Unexpected keyword argument \"accepts_new_patients\" for \"Provider\"  [call-arg]": 1,
      "Argument \"specialties\" to \"Provider\" has incompatible type \"set[Any]\"; expected \"list[str] | None\"  [arg-type]": 1,
      "Returning Any from function declared to return \"Provider\"  [no-any-return]": 3,
      "\"ProviderRepository\" has no attribute \"create\"  [attr-defined]": 1,
      "\"ProviderRepository\" has no attribute \"update\"  [attr-defined]": 2,
      "\"ProviderRepository\" has no attribute \"get_available_on_day\"  [attr-defined]": 1,
      "Returning Any from function declared to return \"list[Provider]\"  [no-any-return]": 2,
      "\"ProviderRepository\" has no attribute \"get_prescribers\"  [attr-defined]": 1,
      "Argument 1 to \"get_by_id\" of \"PatientRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument 1 to \"create\" of \"PatientRepository\" has incompatible type \"dict[Any, Any]\"; expected \"Patient\"  [arg-type]": 1,
      "Incompatible return value type (got \"Patient | None\", expected \"Patient\")  [return-value]": 3,
      "Argument 1 to \"update\" of \"PatientRepository\" has incompatible type \"dict[Any, Any]\"; expected \"Patient\"  [arg-type]": 1,
      "Argument 1 to \"delete\" of \"PatientRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Unexpected keyword argument \"contact_info\" for \"Patient\"; did you mean \"_contact_info\"?  [call-arg]": 2,
      "Incompatible types in assignment (expression has type \"dict[Any, Any]\", variable has type \"EmergencyContact | None\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"dict[Any, Any]\", variable has type \"list[str]\")  [assignment]": 1,
      "\"Patient\" has no attribute \"preferred_provider_id\"  [attr-defined]": 2,
      "\"IAppointmentRepository\" has no attribute \"list_by_patient\"; maybe \"list_by_patient_id\"?  [attr-defined]": 1,
      "\"IAppointmentRepository\" has no attribute \"list_upcoming_by_patient\"  [attr-defined]": 1,
      "Item \"str\" of \"datetime | str\" has no attribute \"isoformat\"  [union-attr]": 2,
      "Argument 1 to \"_calculate_age\" of \"PatientService\" has incompatible type \"datetime | str\"; expected \"date\"  [arg-type]": 1,
      "Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, str | None]], str | None]\"; expected \"Callable[[dict[str, str | None]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 1,
      "Incompatible return value type (got \"str | None\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]": 1,
      "Returning Any from function declared to return \"list[Patient]\"  [no-any-return]": 2,
      "\"PatientRepository\" has no attribute \"search\"  [attr-defined]": 1,
      "\"IAppointmentRepository\" has no attribute \"list_by_date_range\"  [attr-defined]": 2,
      "Need type annotation for \"patient_appointments\" (hint: \"patient_appointments: Dict[<type>, <type>] = ...\")  [var-annotated]": 1,
      "\"Patient\" has no attribute \"is_active\"; maybe \"active\"?  [attr-defined]": 1,
      "Incompatible default for argument \"initial_data\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]": 1,
      "Unexpected keyword argument \"creation_date\" for \"DigitalTwin\"  [call-arg]": 1,
      "Unexpected keyword argument \"metadata\" for \"DigitalTwin\"  [call-arg]": 1,
      "Incompatible return value type (got \"DigitalTwin | None\", expected \"DigitalTwin\")  [return-value]": 1,
      "Unexpected keyword argument \"diagnosis\" for \"TherapeuticPlan\"  [call-arg]": 1,
      "Unexpected keyword argument \"created_at\" for \"TherapeuticPlan\"  [call-arg]": 1,
      "Unexpected keyword argument \"updated_at\" for \"TherapeuticPlan\"  [call-arg]": 1,
      "Argument \"goals\" to \"TherapeuticPlan\" has incompatible type \"list[dict[str, str]]\"; expected \"list[TreatmentGoal]\"  [arg-type]": 1,
      "Argument \"interventions\" to \"TherapeuticPlan\" has incompatible type \"list[dict[str, Any]]\"; expected \"list[TherapeuticIntervention]\"  [arg-type]": 1,
      "Argument 1 to \"get_by_id\" of \"IAppointmentRepository\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]": 1,
      "Incompatible return value type (got \"Coroutine[Any, Any, Appointment | None]\", expected \"Appointment\")  [return-value]": 1,
      "Argument 1 to \"get_by_id\" of \"PatientRepository\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]": 2,
      "Returning Any from function declared to return \"list[Appointment]\"  [no-any-return]": 2,
      "\"IAppointmentRepository\" has no attribute \"get_by_patient_id\"; maybe \"list_by_patient_id\"?  [attr-defined]": 1,
      "\"IAppointmentRepository\" has no attribute \"get_by_provider_id\"; maybe \"list_by_provider_id\"?  [attr-defined]": 3,
      "Argument \"patient_id\" to \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"provider_id\" to \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument \"appointment_type\" to \"Appointment\" has incompatible type \"AppointmentType | str\"; expected \"AppointmentType\"  [arg-type]": 2,
      "Argument \"priority\" to \"Appointment\" has incompatible type \"AppointmentPriority | str\"; expected \"AppointmentPriority\"  [arg-type]": 2,
      "Returning Any from function declared to return \"Appointment\"  [no-any-return]": 10,
      "\"IAppointmentRepository\" has no attribute \"save\"  [attr-defined]": 12,
      "Incompatible default for argument \"user_id\" (default has type \"None\", argument has type \"UUID | str\")  [assignment]": 1,
      "Too many arguments for \"reschedule\" of \"Appointment\"  [call-arg]": 1,
      "Argument 1 to \"cancel\" of \"Appointment\" has incompatible type \"UUID | str\"; expected \"UUID\"  [arg-type]": 1,
      "\"Appointment\" has no attribute \"check_in\"  [attr-defined]": 1,
      "\"Appointment\" has no attribute \"start\"  [attr-defined]": 1,
      "Unexpected keyword argument \"previous_appointment_id\" for \"Appointment\"  [call-arg]": 1,
      "\"Appointment\" has no attribute \"schedule_follow_up\"  [attr-defined]": 1,
      "\"Appointment\" has no attribute \"send_reminder\"  [attr-defined]": 1,
      "\"ClinicalNoteRepository\" has no attribute \"list_by_patient_date_range\"; maybe \"list_by_date_range\"?  [attr-defined]": 1,
      "\"IAppointmentRepository\" has no attribute \"list_by_patient_date_range\"; maybe \"list_by_patient_id\"?  [attr-defined]": 1,
      "\"MedicationRepository\" has no attribute \"list_by_patient_date_range\"  [attr-defined]": 1,
      "\"IAppointmentRepository\" has no attribute \"list_by_provider_date_range\"; maybe \"list_by_provider_id\"?  [attr-defined]": 1,
      "Argument \"key\" to \"max\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 2,
      "Argument \"key\" to \"min\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]": 2,
      "Incompatible return value type (got \"None\", expected \"dict[str, str]\")  [return-value]": 1,
      "Dict entry 1 has incompatible type \"str\": \"str | None\"; expected \"str\": \"str\"  [dict-item]": 3,
      "\"PatientCreateRequest\" has no attribute \"name\"  [attr-defined]": 2,
      "Cannot find implementation or library stub for module named \"app.core.exceptions.auth\"  [import-not-found]": 1,
      "Incompatible default for argument \"settings\" (default has type \"None\", argument has type \"Settings\")  [assignment]": 1,
      "Property \"settings\" defined in \"JWTService\" is read-only  [misc]": 1,
      "\"Settings\" has no attribute \"jwt_secret_key\"  [attr-defined]": 4,
      "\"Settings\" has no attribute \"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\"; maybe \"ACCESS_TOKEN_EXPIRE_MINUTES\"?  [attr-defined]": 1,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_VALIDATION_FAILURE\"  [attr-defined]": 4,
      "\"type[AuditSeverity]\" has no attribute \"MEDIUM\"  [attr-defined]": 1,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLISTED\"  [attr-defined]": 1,
      "Missing positional arguments \"jti\", \"expires_at\" in call to \"add_to_blacklist\" of \"ITokenBlacklistRepository\"  [call-arg]": 1,
      "\"type[AuditEventType]\" has no attribute \"TOKEN_BLACKLIST_FAILURE\"  [attr-defined]": 1,
      "\"type[AuditEventType]\" has no attribute \"SESSION_TOKENS_BLACKLISTED\"  [attr-defined]": 1,
      "Module \"app.domain.exceptions\" has no attribute \"UserNotFoundError\"; maybe \"DataNotFoundError\"?  [attr-defined]": 1,
      "Cannot find implementation or library stub for module named \"app.domain.interfaces.user_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.security.password.password_service\"  [import-not-found]": 1,
      "See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports": 1,
      "\"AuditLogger\" has no attribute \"log_failed_login\"  [attr-defined]": 4,
      "\"AuditLogger\" has no attribute \"log_successful_login\"  [attr-defined]": 1,
      "\"AuditLogger\" has no attribute \"log_logout\"  [attr-defined]": 2,
      "Unexpected keyword argument \"session_id\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 3,
      "Argument \"details\" to \"log_security_event\" of \"AuditLogger\" has incompatible type \"str\"; expected \"dict[str, Any] | None\"  [arg-type]": 4,
      "\"JWTService\" has no attribute \"verify_token\"  [attr-defined]": 2,
      "Unexpected keyword argument \"ip_address\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 6,
      "Unexpected keyword argument \"user_agent\" for \"log_security_event\" of \"AuditLogger\"  [call-arg]": 6,
      "\"User\" has no attribute \"permissions\"  [attr-defined]": 2,
      "Unexpected keyword argument \"user_id\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"permissions\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"additional_data\" for \"create_access_token\" of \"JWTService\"  [call-arg]": 1,
      "Unexpected keyword argument \"user_id\" for \"create_refresh_token\" of \"JWTService\"  [call-arg]": 1,
      "\"type[UUID]\" has no attribute \"uuid4\"  [attr-defined]": 1,
      "\"BedrockPAT\" has no attribute \"mocks\"  [attr-defined]": 19,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"str\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"str | None\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"AnalysisTypeEnum\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"datetime\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"float\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"dict[str, Any]\"  [arg-type]": 1,
      "Argument 1 to \"AnalysisResult\" has incompatible type \"**dict[str, object]\"; expected \"list[str]\"  [arg-type]": 1,
      "List item 0 has incompatible type \"float\"; expected \"datetime\"  [list-item]": 1,
      "Name \"redis_rate_limiter\" already defined on line 74  [no-redef]": 1,
      "Name \"PharmacogenomicsModel\" is not defined  [name-defined]": 1,
      "Name \"mock_open\" is not defined  [name-defined]": 2,
      "Incompatible types in assignment (expression has type \"dict[str, None]\", target has type \"None\")  [assignment]": 1,
      "Missing positional arguments \"appointment_repository\", \"clinical_note_repository\" in call to \"PatientService\"  [call-arg]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"EmergencyContact | None\"  [arg-type]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"dict[str, Any] | None\"  [arg-type]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"bool\"  [arg-type]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"list[str]\"  [arg-type]": 1,
      "Argument 1 to \"Patient\" has incompatible type \"**dict[str, str]\"; expected \"list[dict[str, Any]]\"  [arg-type]": 1,
      "Name \"DigitalTwinService\" already defined (possibly by an import)  [no-redef]": 1,
      "Name \"RedisService\" already defined (possibly by an import)  [no-redef]": 1,
      "Signature of \"set\" incompatible with supertype \"RedisService\"  [override]": 1,
      "def set(self, name: str, value: str, expire: int | None = ..., set_if_not_exists: bool | None = ..., set_if_exists: bool | None = ...) -> Coroutine[Any, Any, bool | None]": 2,
      "def set(self, key: str, value: Any, ttl: int | None = ...) -> Coroutine[Any, Any, bool]": 2,
      "Signature of \"set\" incompatible with supertype \"IRedisService\"  [override]": 1,
      "Signature of \"delete\" incompatible with supertype \"RedisService\"  [override]": 1,
      "def delete(self, *names: str) -> Coroutine[Any, Any, int]": 2,
      "def delete(self, key: str) -> Coroutine[Any, Any, bool]": 2,
      "Signature of \"delete\" incompatible with supertype \"IRedisService\"  [override]": 1,
      "Signature of \"exists\" incompatible with supertype \"RedisService\"  [override]": 1,
      "def exists(self, *names: str) -> Coroutine[Any, Any, int]": 2,
      "def exists(self, key: str) -> Coroutine[Any, Any, bool]": 2,
      "Signature of \"exists\" incompatible with supertype \"IRedisService\"  [override]": 1,
      "Signature of \"hset\" incompatible with supertype \"RedisService\"  [override]": 1,
      "def hset(self, name: str, key: str, value: Any) -> Coroutine[Any, Any, int]": 1,
      "def hset(self, key: str, field: str, value: Any) -> Coroutine[Any, Any, int]": 1,
      "Signature of \"hget\" incompatible with supertype \"RedisService\"  [override]": 1,
      "def hget(self, name: str, key: str) -> Coroutine[Any, Any, str | None]": 1,
      "def hget(self, key: str, field: str) -> Coroutine[Any, Any, Any]": 1,
      "Argument 1 to \"Delete\" has incompatible type \"type[Patient]\"; expected \"str | Selectable\"  [arg-type]": 1,
      "Missing named argument \"middle_name\" for \"Name\"  [call-arg]": 1,
      "Argument \"name\" to \"Patient\" has incompatible type \"Name\"; expected \"str | None\"  [arg-type]": 1,
      "Argument \"date_of_birth\" to \"Patient\" has incompatible type \"date | None\"; expected \"datetime | str\"  [arg-type]": 1,
      "Variable \"app.tests.integration.infrastructure.persistence.repositories.test_patient_repository_int.TestBase\" is not valid as a type  [valid-type]": 2,
      "Incompatible return value type (got \"tuple[DigitalTwinState, TemporalKnowledgeGraph | None, BayesianBeliefNetwork | None]\", expected \"DigitalTwinState\")  [return-value]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"add_receptor_profile\"; maybe \"update_receptor_profiles\"?  [attr-defined]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"get_neurotransmitter_mapping\"; maybe \"initialize_neurotransmitter_mapping\"?  [attr-defined]": 1,
      "Unexpected keyword argument \"time_resolution_hours\" for \"simulate_neurotransmitter_cascade\" of \"EnhancedDigitalTwinCoreService\"  [call-arg]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_neurotransmitter_interactions\"  [attr-defined]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"predict_medication_effects\"  [attr-defined]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_temporal_response\"  [attr-defined]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"generate_clinical_insights\"  [attr-defined]": 1,
      "\"EnhancedDigitalTwinCoreService\" has no attribute \"analyze_regional_effects\"  [attr-defined]": 1,
      "\"simulate_neurotransmitter_cascade\" of \"EnhancedDigitalTwinCoreService\" defined here": 1,
      "\"TemporalSequence[Any]\" has no attribute \"created_by\"; maybe \"created_at\"?  [attr-defined]": 1,
      "Argument 1 to \"Delete\" has incompatible type \"type[TemporalDataPointModel]\"; expected \"str | Selectable\"  [arg-type]": 2,
      "Argument 1 to \"Delete\" has incompatible type \"type[TemporalSequenceModel]\"; expected \"str | Selectable\"  [arg-type]": 2,
      "No overload variant of \"execute\" of \"AsyncSession\" matches argument types \"Select\", \"str | None\", \"str\"  [call-overload]": 1,
      "def [_T] execute(self, statement: Any, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]": 1,
      "def execute(self, statement: UpdateBase, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]": 1,
      "def execute(self, statement: Executable, params: Any | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: Any | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Coroutine[Any, Any, Any]": 1,
      "Argument \"event_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument \"correlation_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument \"parent_event_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]": 1,
      "Argument \"patient_id\" to \"CorrelatedEvent\" has incompatible type \"str\"; expected \"UUID | None\"  [arg-type]": 1,
      "Item \"None\" of \"Session | None\" has no attribute \"begin\"  [union-attr]": 1,
      "Argument 1 to \"contextmanager\" has incompatible type \"Callable[[SQLAlchemyUnitOfWork], AbstractContextManager[SQLAlchemyUnitOfWork]]\"; expected \"Callable[[SQLAlchemyUnitOfWork], Iterator[<nothing>]]\"  [arg-type]": 2,
      "The return type of a generator function should be \"Generator\" or one of its supertypes  [misc]": 2,
      "Too many arguments for \"ABC\"  [call-arg]": 1,
      "\"TemporalSequence[Any]\" has no attribute \"time_points\"  [attr-defined]": 1,
      "Unexpected keyword argument \"time_points\" for \"TemporalSequence\"  [call-arg]": 3,
      "Argument 1 to \"from_domain\" of \"Patient\" has incompatible type \"app.domain.entities.patient.Patient\"; expected \"app.core.domain.entities.patient.Patient\"  [arg-type]": 1,
      "Value of type \"str | None\" is not indexable  [index]": 1,
      "Incompatible return value type (got \"app.core.domain.entities.patient.Patient\", expected \"app.domain.entities.patient.Patient | None\")  [return-value]": 1,
      "Returning Any from function declared to return \"Patient | None\"  [no-any-return]": 12,
      "Incompatible types in assignment (expression has type \"<subclass of \"Patient\" and \"str\"> | <subclass of \"Patient\" and \"UUID\">\", variable has type \"UUID\")  [assignment]": 1,
      "Unexpected keyword argument \"exclude_unset\" for \"model_dump\" of \"Patient\"; did you mean \"exclude_none\"?  [call-arg]": 2,
      "Name \"PatientRepositoryFactory\" already defined on line 85  [no-redef]": 1,
      "Argument 1 to \"map_rule_entity_to_model\" has incompatible type \"BiometricAlertRule\"; expected \"BiometricRule\"  [arg-type]": 2,
      "Incompatible return value type (got \"BiometricRule\", expected \"BiometricAlertRule\")  [return-value]": 1,
      "Return type \"Coroutine[Any, Any, BiometricAlertRule | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, BiometricRule | None]\" in supertype \"IBiometricRuleRepository\"  [override]": 1,
      "Incompatible return value type (got \"BiometricRule\", expected \"BiometricAlertRule | None\")  [return-value]": 1,
      "List comprehension has incompatible type List[BiometricRule]; expected List[BiometricAlertRule]  [misc]": 6,
      "Return type \"Coroutine[Any, Any, BiometricAlertRule]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, BiometricRule]\" in supertype \"IBiometricRuleRepository\"  [override]": 1,
      "Argument 1 of \"update\" is incompatible with supertype \"IBiometricRuleRepository\"; supertype defines the argument type as \"BiometricRule\"  [override]": 1,
      "Argument 1 to \"Update\" has incompatible type \"type[BiometricRuleModel]\"; expected \"str | Selectable\"  [arg-type]": 2,
      "Argument 1 to \"Delete\" has incompatible type \"type[BiometricRuleModel]\"; expected \"str | Selectable\"  [arg-type]": 1,
      "Signature of \"get_by_patient_id\" incompatible with supertype \"IBiometricRuleRepository\"  [override]": 1,
      "def get_by_patient_id(self, patient_id: UUID, limit: int = ..., skip: int = ...) -> Coroutine[Any, Any, list[BiometricRule]]": 1,
      "def get_by_patient_id(self, patient_id: UUID) -> Coroutine[Any, Any, list[BiometricAlertRule]]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"UUID\")  [assignment]": 1,
      "Cannot instantiate abstract class \"SQLAlchemyBiometricRuleRepository\" with abstract attributes \"create\", \"get_active_rules\" and \"list_all\"  [abstract]": 2,
      "Need type annotation for \"prescriptions_made\"  [var-annotated]": 1,
      "\"Provider\" has no attribute \"user\"  [attr-defined]": 1,
      "Argument 1 to \"UUID\" has incompatible type \"UUID | str\"; expected \"str | None\"  [arg-type]": 1,
      "\"Provider\" has no attribute \"specialty\"; maybe \"add_specialty\" or \"specialties\"?  [attr-defined]": 1,
      "\"Provider\" has no attribute \"npi\"  [attr-defined]": 1,
      "Module \"app.domain.entities.provider\" has no attribute \"Specialty\"  [attr-defined]": 1,
      "Unexpected keyword argument \"user_id\" for \"Provider\"  [call-arg]": 1,
      "Unexpected keyword argument \"specialty\" for \"Provider\"; did you mean \"specialties\"?  [call-arg]": 1,
      "Unexpected keyword argument \"active\" for \"Provider\"  [call-arg]": 1,
      "Incompatible types in assignment (expression has type \"UserRole\", variable has type \"str\")  [assignment]": 1,
      "Incompatible import of \"select\" (imported name has type overloaded function, local name has type \"type[Select]\")  [assignment]": 1,
      "Argument 1 to \"where\" of \"Select\" has incompatible type \"object\"; expected \"str | bool | Visitable\"  [arg-type]": 3,
      "Argument 1 to \"Select\" has incompatible type \"Column[Any]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]": 3,
      "Argument 2 has incompatible type \"object\"; expected \"ClauseElement | str | bool\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[Any]\")  [assignment]": 1,
      "Item \"None\" of \"Any | None\" has no attribute \"isoformat\"  [union-attr]": 1,
      "Function \"DomainUser\" could always be true in boolean context  [truthy-function]": 1,
      "Function \"UserModel\" could always be true in boolean context  [truthy-function]": 1,
      "Function \"LegacyUserModel\" could always be true in boolean context  [truthy-function]": 1,
      "Function \"UserMapper\" could always be true in boolean context  [truthy-function]": 1,
      "Argument \"redis_service\" to \"RedisTokenBlacklistRepository\" has incompatible type \"IRedisService\"; expected \"RedisCacheService\"  [arg-type]": 1,
      "Name \"test_phi_never_appears_in_exceptions\" already defined on line 362  [no-redef]": 1,
      "Argument \"patient_repository_cls\" to \"AsyncSQLAlchemyUnitOfWork\" has incompatible type \"type[PatientRepository]\"; expected \"type[IPatientRepository]\"  [arg-type]": 2,
      "\"IPatientRepository\" has no attribute \"create\"  [attr-defined]": 1,
      "Argument 1 to \"get_by_id\" of \"IPatientRepository\" has incompatible type \"UUID\"; expected \"str\"  [arg-type]": 1,
      "Item \"None\" of \"BaseEncryptionService | None\" has no attribute \"_direct_key\"  [union-attr]": 2,
      "Missing named argument \"email\" for \"ContactInfo\"  [call-arg]": 1,
      "Argument 1 to \"create\" of \"PatientRepository\" has incompatible type \"app.core.domain.entities.patient.Patient\"; expected \"app.domain.entities.patient.Patient\"  [arg-type]": 2,
      "Item \"None\" of \"BaseEncryptionService | None\" has no attribute \"decrypt_string\"  [union-attr]": 1,
      "Need type annotation for \"child_event\"  [var-annotated]": 1,
      "\"Callable[[UUID], Coroutine[Any, Any, list[CorrelatedEvent[Any]]]]\" has no attribute \"assert_called_once_with\"  [attr-defined]": 1,
      "Incompatible types in assignment (expression has type \"UUID\", variable has type \"str\")  [assignment]": 1,
      "Argument 1 to \"get_by_id\" of \"UserRepository\" has incompatible type \"str\"; expected \"UUID\"  [arg-type]": 1,
      "Argument 1 to \"_map_user_model_to_domain\" of \"AuthenticationService\" has incompatible type \"User\"; expected \"UserModelProxy\"  [arg-type]": 1,
      "Argument 1 to \"append\" of \"list\" has incompatible type \"str\"; expected \"Role\"  [arg-type]": 1,
      "\"UserModelProxy\" has no attribute \"id\"  [attr-defined]": 1,
      "Unexpected keyword argument \"subject\" for \"create_access_token\" of \"IJwtService\"  [call-arg]": 1,
      "Unexpected keyword argument \"additional_claims\" for \"create_access_token\" of \"IJwtService\"  [call-arg]": 1,
      "Incompatible types in \"await\" (actual type \"str\", expected type \"Awaitable[Any]\")  [misc]": 2,
      "Unexpected keyword argument \"subject\" for \"create_refresh_token\" of \"IJwtService\"  [call-arg]": 1,
      "Dict entry 3 has incompatible type \"str\": \"Any | int\"; expected \"str\": \"str\"  [dict-item]": 2,
      "Dict entry 4 has incompatible type \"str\": \"UUID | str\"; expected \"str\": \"str\"  [dict-item]": 2,
      "Dict entry 5 has incompatible type \"str\": \"list[UserRole] | set[UserRole] | list[str] | set[str]\"; expected \"str\": \"str\"  [dict-item]": 2,
      "Incompatible types in \"await\" (actual type \"TokenPayload\", expected type \"Awaitable[Any]\")  [misc]": 2,
      "\"IJwtService\" has no attribute \"logout\"  [attr-defined]": 1,
      "\"IJwtService\" has no attribute \"blacklist_session\"  [attr-defined]": 1,
      "\"IEncryptionService\" has no attribute \"encrypt_json\"  [attr-defined]": 2,
      "Return type \"Coroutine[Any, Any, Sequence[Alert]]\" of \"get_alerts\" incompatible with return type \"Coroutine[Any, Any, list[Alert]]\" in supertype \"IAlertRepository\"  [override]": 1,
      "Argument 1 to \"Select\" has incompatible type \"type[UserModelProxy]\"; expected \"Iterable[ColumnElement[Any] | FromClause | int] | None\"  [arg-type]": 2,
      "\"type[UserModelProxy]\" has no attribute \"id\"  [attr-defined]": 2,
      "\"IEncryptionService\" has no attribute \"decrypt_json\"  [attr-defined]": 1,
      "Argument 1 to \"decrypt\" of \"IEncryptionService\" has incompatible type \"str\"; expected \"bytes\"  [arg-type]": 1,
      "Argument \"message\" to \"Alert\" has incompatible type \"bytes\"; expected \"str\"  [arg-type]": 1,
      "Argument \"resolution_notes\" to \"Alert\" has incompatible type \"bytes | None\"; expected \"str | None\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"async_sessionmaker[Any]\")  [assignment]": 1,
      "Returning Any from function declared to return \"AsyncSession\"  [no-any-return]": 1,
      "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" of \"create\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_id\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_username\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User | None]\" of \"get_by_email\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User | None]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, app.core.domain.entities.user.User]\" of \"update\" incompatible with return type \"Coroutine[Any, Any, app.domain.entities.user.User]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, list[app.core.domain.entities.user.User]]\" of \"list_all\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.entities.user.User]]\" in supertype \"UserRepository\"  [override]": 1,
      "Return type \"Coroutine[Any, Any, list[app.core.domain.entities.user.User]]\" of \"get_by_role\" incompatible with return type \"Coroutine[Any, Any, list[app.domain.entities.user.User]]\" in supertype \"UserRepository\"  [override]": 1,
      "Argument 1 to \"select_from\" of \"Select\" has incompatible type \"type[User]\"; expected \"FromClause\"  [arg-type]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricAlertModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricRuleModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[BiometricTwinModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[DigitalTwinModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[AppointmentModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[ClinicalNoteModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[MedicationModel]\")  [assignment]": 1,
      "Incompatible types in assignment (expression has type \"None\", variable has type \"type[AuditLog]\")  [assignment]": 1,
      "Too many arguments for \"NeurotransmitterVisualizationPreprocessor\"  [call-arg]": 1,
      "Argument 1 to \"SqlAlchemyEventRepository\" has incompatible type \"AsyncSession | None\"; expected \"AsyncSession\"  [arg-type]": 1,
      "Argument 1 to \"SqlAlchemyTemporalSequenceRepository\" has incompatible type \"AsyncSession | None\"; expected \"AsyncSession\"  [arg-type]": 1,
      "Cannot find implementation or library stub for module named \"app.core.services.ml.mentalllama\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.logging.phi_logger\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.auth.jwt_handler\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.patient_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.infrastructure.repositories.biometric_rule_repository\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.actigraphy\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.appointment\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.biometric_alert\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.user\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.dependencies.auth\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.biometric_alert_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.ml_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.dependencies.ml\"  [import-not-found]": 2,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.clinical_session\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.digital_twin_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.ml\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.schemas.symptom_assessment\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.temporal_neurotransmitter\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.api.routes.xgboost\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.v1.schemas.xgboost_schemas\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.presentation.api.routers.ml.test_xgboost_router\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.authentication\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.security.rbac\"  [import-not-found]": 1,
      "Cannot find implementation or library stub for module named \"app.core.dto.auth.token\"  [import-not-found]": 1
    },
    "files_by_issue_count": [
      [
        "app/core/services/ml/xgboost/aws_service.py",
        191
      ],
      [
        "app/core/services/ml/xgboost/aws.py",
        159
      ],
      [
        "app/infrastructure/services/mocks/mock_digital_twin_core_service.py",
        111
      ],
      [
        "app/tests/security/encryption/test_encryption.py",
        84
      ],
      [
        "app/infrastructure/security/jwt/jwt_service.py",
        67
      ],
      [
        "app/core/services/ml/xgboost/aws_compatibility.py",
        66
      ],
      [
        "app/core/services/ml/xgboost/mock.py",
        65
      ],
      [
        "app/infrastructure/services/mocks/mock_mentalllama_service.py",
        57
      ],
      [
        "app/infrastructure/services/mocks/mock_enhanced_digital_twin_core_service.py",
        57
      ],
      [
        "app/domain/entities/temporal_neurotransmitter_mapping.py",
        56
      ],
      [
        ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/enum.pyi",
        55
      ],
      [
        "app/domain/services/biometric_event_processor.py",
        52
      ],
      [
        "app/core/exceptions/base_exceptions.py",
        51
      ],
      [
        "app/domain/services/appointment_service.py",
        48
      ],
      [
        "app/application/security/authentication_service.py",
        47
      ],
      [
        "app/core/services/ml/pat/fixed_validation.py",
        46
      ],
      [
        "app/core/services/ml/pat/mock.py",
        44
      ],
      [
        "app/infrastructure/services/mocks/mock_enhanced_digital_twin_neurotransmitter_service.py",
        43
      ],
      [
        "app/infrastructure/security/audit/audit.py",
        43
      ],
      [
        "app/tests/mocks/mock_redis_service.py",
        43
      ],
      [
        "app/core/services/ml/pat/bedrock.py",
        42
      ],
      [
        "app/tests/unit/core/services/ml/test_mock_digital_twin.py",
        42
      ],
      [
        "app/core/services/ml/phi/phi.py",
        41
      ],
      [
        "app/tests/unit/services/ml/pat/test_pat_service.py",
        41
      ],
      [
        "app/tests/security/scripts/run_tests_direct.py",
        37
      ],
      [
        "app/application/services/biometric_alert_service.py",
        37
      ],
      [
        "app/domain/exceptions/security_exceptions.py",
        36
      ],
      [
        "app/tests/unit/infrastructure/security/test_encryption_enhanced.py",
        36
      ],
      [
        "app/tests/mocks/mock_encryption_service.py",
        35
      ],
      [
        "app/domain/services/enhanced_xgboost_service.py",
        34
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/biometric_twin_repository.py",
        33
      ],
      [
        "app/infrastructure/logging/audit_logger.py",
        31
      ],
      [
        "app/domain/entities/temporal_events.py",
        30
      ],
      [
        "app/domain/services/patient_service.py",
        30
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/patient.py",
        29
      ],
      [
        "app/domain/exceptions/appointment_exceptions.py",
        27
      ],
      [
        "app/tests/security/scripts/run_tests.py",
        27
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost_core.py",
        27
      ],
      [
        "app/domain/services/provider_service.py",
        27
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/patient_repository.py",
        27
      ],
      [
        "app/application/services/temporal_neurotransmitter_service.py",
        26
      ],
      [
        "app/tests/unit/core/services/ml/test_mock_mentallama.py",
        26
      ],
      [
        "app/tests/domain/entities/test_temporal_neurotransmitter.py",
        26
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/biometric_rule_repository.py",
        26
      ],
      [
        "app/domain/entities/neurotransmitter_mapping.py",
        25
      ],
      [
        "app/infrastructure/ml/pharmacogenomics/treatment_model.py",
        23
      ],
      [
        "app/infrastructure/ml/mentallama/mocks/mock_mentalllama_service.py",
        23
      ],
      [
        "app/config/settings.py",
        23
      ],
      [
        "app/infrastructure/security/encryption/ml_encryption_service.py",
        23
      ],
      [
        "app/tests/utils/repository_factory.py",
        23
      ],
      [
        "app/infrastructure/security/auth/authentication_service.py",
        23
      ],
      [
        "app/domain/entities/temporal_sequence.py",
        22
      ],
      [
        "app/infrastructure/security/encryption/base_encryption_service.py",
        22
      ],
      [
        "app/tests/unit/infrastructure/test_appointment.py",
        21
      ],
      [
        "app/domain/entities/knowledge_graph.py",
        20
      ],
      [
        "app/domain/entities/biometric_rule.py",
        20
      ],
      [
        "app/core/services/ml/digital_twin/mock.py",
        20
      ],
      [
        "app/tests/unit/domain/entities/test_appointment.py",
        20
      ],
      [
        "app/tests/security/encryption/test_ml_encryption.py",
        20
      ],
      [
        "app/application/security/jwt_service.py",
        20
      ],
      [
        "app/infrastructure/aws/real_aws_services.py",
        19
      ],
      [
        "app/core/services/ml/mentallama/__init__.py",
        19
      ],
      [
        "app/infrastructure/ml/digital_twin/mock.py",
        19
      ],
      [
        "app/domain/exceptions/persistence_exceptions.py",
        18
      ],
      [
        "app/domain/events/medication_events.py",
        18
      ],
      [
        "app/infrastructure/messaging/secure_messaging_service.py",
        18
      ],
      [
        "app/domain/entities/digital_twin/temporal_neurotransmitter_sequence.py",
        17
      ],
      [
        "app/infrastructure/services/mock_biometric_alert_service.py",
        17
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/types/encrypted_types.py",
        17
      ],
      [
        "app/core/services/ml/providers/bedrock_pat.py",
        17
      ],
      [
        "app/tests/unit/infrastructure/security/test_jwt_service_enhanced.py",
        17
      ],
      [
        "app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py",
        17
      ],
      [
        "app/domain/entities/provider.py",
        16
      ],
      [
        "app/domain/services/mocks/mock_pat_service.py",
        16
      ],
      [
        "app/tests/security/utils/test_address_helper.py",
        16
      ],
      [
        "app/tests/unit/core/test_standalone_biometric_processor.py",
        16
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/clinical_note.py",
        16
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/biometric_alert_repository.py",
        16
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/user_repository.py",
        16
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/__init__.py",
        16
      ],
      [
        "app/infrastructure/services/mocks/mock_pat_service.py",
        14
      ],
      [
        "app/core/services/ml/xgboost/interface.py",
        14
      ],
      [
        "app/infrastructure/security/phi/sanitizer.py",
        14
      ],
      [
        "app/domain/services/clinical_rule_engine.py",
        14
      ],
      [
        "app/infrastructure/cache/redis_cache.py",
        14
      ],
      [
        "app/infrastructure/ml/digital_twin_integration_service.py",
        13
      ],
      [
        "app/infrastructure/security/encryption/__init__.py",
        13
      ],
      [
        "app/infrastructure/persistence/repositories/user_repository.py",
        13
      ],
      [
        "app/infrastructure/services/security/jwt_token_service.py",
        13
      ],
      [
        "app/infrastructure/services/redis/redis_service.py",
        13
      ],
      [
        "app/domain/services/analytics_service.py",
        13
      ],
      [
        "app/core/services/ml/xgboost/aws_xgboost_patch.py",
        12
      ],
      [
        "app/infrastructure/ml/biometric_correlation/lstm_model.py",
        12
      ],
      [
        "app/domain/entities/biometric_alert_rule.py",
        12
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/unit_of_work/async_unit_of_work.py",
        12
      ],
      [
        "app/infrastructure/ml/symptom_forecasting/service.py",
        12
      ],
      [
        "app/infrastructure/ml/phi/mock.py",
        12
      ],
      [
        "app/core/services/ml/providers/openai.py",
        12
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost.py",
        12
      ],
      [
        "app/infrastructure/ml/pharmacogenomics/gene_medication_model.py",
        12
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/provider.py",
        12
      ],
      [
        "app/tests/security/db/test_db_phi_protection.py",
        12
      ],
      [
        "app/infrastructure/repositories/alert_repository.py",
        12
      ],
      [
        "app/infrastructure/security/password/password_handler.py",
        11
      ],
      [
        "app/infrastructure/repositories/sqlalchemy/biometric_alert_repository.py",
        11
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/appointment_repository.py",
        11
      ],
      [
        ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/logging/__init__.pyi",
        11
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/digital_twin.py",
        11
      ],
      [
        "app/domain/services/digital_twin_service.py",
        11
      ],
      [
        "app/tests/utils/async_test_helpers.py",
        10
      ],
      [
        "app/core/exceptions/ml_exceptions.py",
        10
      ],
      [
        "app/infrastructure/ml_services/digital_twin_integration/service.py",
        10
      ],
      [
        "app/infrastructure/ml/symptom_forecasting/xgboost_model.py",
        10
      ],
      [
        "app/tests/security/phi/test_phi_code_patterns.py",
        10
      ],
      [
        "app/tests/unit/infrastructure/security/test_jwt_handler.py",
        10
      ],
      [
        "app/infrastructure/ml/pharmacogenomics/model_service.py",
        9
      ],
      [
        "app/core/utils/data_transformation.py",
        9
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/test_aws_xgboost_prediction.py",
        9
      ],
      [
        "app/tests/application/services/test_temporal_neurotransmitter_service.py",
        9
      ],
      [
        "app/infrastructure/security/audit_logger.py",
        9
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/biometric_twin_model.py",
        9
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/biometric_alert_model.py",
        9
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/appointment.py",
        9
      ],
      [
        "app/tests/unit/domain/services/test_patient_service.py",
        9
      ],
      [
        "app/tests/integration/infrastructure/persistence/repositories/test_patient_repository_int.py",
        9
      ],
      [
        "app/tests/enhanced/test_neurotransmitter_mapping_integration.py",
        9
      ],
      [
        "app/infrastructure/repositories/temporal_event_repository.py",
        9
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/repositories/test_patient_repository.py",
        9
      ],
      [
        "app/core/services/ml/digital_twin/digital_twin.py",
        8
      ],
      [
        "app/domain/events/appointment_events.py",
        8
      ],
      [
        "app/domain/events/clinical_documentation_events.py",
        8
      ],
      [
        "app/core/services/ml/providers/aws_bedrock.py",
        8
      ],
      [
        "app/tests/unit/domain/value_objects/test_contact_info.py",
        8
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/medication.py",
        8
      ],
      [
        "app/tests/security/auth/test_auth_hipaa_compliance.py",
        8
      ],
      [
        "app/infrastructure/services/redis/redis_cache_service.py",
        8
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/user.py",
        8
      ],
      [
        "app/infrastructure/persistence/repositories/audit_log_repository.py",
        8
      ],
      [
        "app/tests/integration/infrastructure/persistence/test_models.py",
        7
      ],
      [
        "app/infrastructure/security/auth/mfa_service.py",
        7
      ],
      [
        "app/core/services/ml/xgboost/__init__.py",
        7
      ],
      [
        "app/domain/entities/patient.py",
        7
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/test_database_enhanced.py",
        7
      ],
      [
        "app/tests/unit/domain/entities/digital_twin/test_digital_twin_entity.py",
        7
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/base_repository.py",
        7
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/config/database.py",
        7
      ],
      [
        "app/demo/run_digital_twin_demo.py",
        7
      ],
      [
        "app/core/interfaces/services/jwt_service.py",
        7
      ],
      [
        "app/tests/conftest_repositories.py",
        7
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/mappers/biometric_rule_mapper.py",
        7
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/temporal_sequence_repository.py",
        7
      ],
      [
        "scripts/test/security/run_hipaa_phi_audit.py",
        6
      ],
      [
        "app/domain/entities/model_adapter.py",
        6
      ],
      [
        "app/domain/entities/clinical_session.py",
        6
      ],
      [
        "app/domain/services/visualization_preprocessor.py",
        6
      ],
      [
        "app/tests/application/presentation/models/biometric_data.py",
        6
      ],
      [
        "app/core/config/settings.py",
        6
      ],
      [
        "app/infrastructure/ml/pat/service.py",
        6
      ],
      [
        ".venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/builtins.pyi",
        6
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/base.py",
        6
      ],
      [
        "app/domain/services/biometric_alert_notification_service.py",
        6
      ],
      [
        "app/tests/unit/services/ml/pat/test_mock_pat_service.py",
        6
      ],
      [
        "app/tests/security/audit/test_phi_audit.py",
        6
      ],
      [
        "app/tests/integration/infrastructure/persistence/test_database_docker_connection.py",
        6
      ],
      [
        "app/tests/infrastructure/aws/conftest_aws.py",
        6
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/biometric_rule.py",
        6
      ],
      [
        "app/tests/unit/infrastructure/security/test_jwt_service_unit.py",
        6
      ],
      [
        "app/application/services/patient_service.py",
        6
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/models/test_patient_encryption.py",
        6
      ],
      [
        "app/tests/integration/infrastructure/persistence/repositories/test_repository.py",
        6
      ],
      [
        "app/infrastructure/repositories/temporal_sequence_repository.py",
        6
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/unit_of_work/unit_of_work.py",
        6
      ],
      [
        "app/tests/integration/infrastructure/persistence/test_patient_encryption_integration.py",
        6
      ],
      [
        "app/infrastructure/security/password/hashing.py",
        5
      ],
      [
        "app/infrastructure/aws/in_memory_aws_services.py",
        5
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/mocks.py",
        5
      ],
      [
        "app/infrastructure/models/sqla/user.py",
        5
      ],
      [
        "app/application/services/biometric_alert_rule_service.py",
        5
      ],
      [
        "app/infrastructure/factories/enhanced_mock_digital_twin_factory.py",
        5
      ],
      [
        "app/infrastructure/security/phi/code_analyzer.py",
        5
      ],
      [
        "app/demo/enhanced_digital_twin_demo.py",
        5
      ],
      [
        "app/core/services/ml/providers/mock_pat.py",
        5
      ],
      [
        "app/tests/unit/infrastructure/test_appointment_migrated.py",
        5
      ],
      [
        "app/infrastructure/database/models.py",
        5
      ],
      [
        "app/tests/unit/infrastructure/security/jwt/test_jwt_service.py",
        5
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/repositories/digital_twin_repository.py",
        5
      ],
      [
        "app/tests/unit/domain/services/test_appointment_service.py",
        5
      ],
      [
        "app/infrastructure/services/mock_digital_twin_core_service.py",
        4
      ],
      [
        "app/infrastructure/repositories/mock_digital_twin_repository.py",
        4
      ],
      [
        "app/core/utils/aws.py",
        4
      ],
      [
        "app/core/exceptions/__init__.py",
        4
      ],
      [
        "app/tests/utils/query_param_helper.py",
        4
      ],
      [
        "app/domain/entities/neurotransmitter_effect.py",
        4
      ],
      [
        "app/infrastructure/ml/mentallama/mock.py",
        4
      ],
      [
        "app/infrastructure/ml/biometric_correlation/model_service.py",
        4
      ],
      [
        "app/application/services/alert_rule_template_service.py",
        4
      ],
      [
        "app/tests/utils/quantum_db_fix.py",
        4
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/config/base.py",
        4
      ],
      [
        "app/infrastructure/ml/phi/aws_comprehend_medical.py",
        4
      ],
      [
        "app/domain/services/biometric_alert_audit_service.py",
        4
      ],
      [
        "app/core/services/ml/providers/mock.py",
        4
      ],
      [
        "app/core/dependencies/database.py",
        4
      ],
      [
        "app/tests/unit/infrastructure/security/test_password_handler.py",
        4
      ],
      [
        "app/tests/unit/infrastructure/security/test_mfa_service.py",
        4
      ],
      [
        "app/tests/unit/infrastructure/ml/test_phi_detection_infra.py",
        4
      ],
      [
        "app/tests/unit/infrastructure/ml/biometric_correlation/test_lstm_model.py",
        4
      ],
      [
        "app/infrastructure/persistence/repositories/token_blacklist_repository.py",
        4
      ],
      [
        "app/tests/unit/domain/test_digital_twin.py",
        4
      ],
      [
        "app/tests/unit/core/services/ml/test_factory.py",
        4
      ],
      [
        "app/tests/security/phi/test_phi_audit_logic.py",
        4
      ],
      [
        "app/tests/security/jwt/test_jwt_service.py",
        4
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/models/test_model_validation.py",
        4
      ],
      [
        "app/infrastructure/ml/mentallama/models.py",
        3
      ],
      [
        "app/infrastructure/security/rbac/role_based_access_control.py",
        3
      ],
      [
        "app/core/interfaces/services/audit_logger_interface.py",
        3
      ],
      [
        "app/core/interfaces/security/jwt_service_interface.py",
        3
      ],
      [
        "app/domain/entities/appointment.py",
        3
      ],
      [
        "app/tests/unit/infrastructure/ml/symptom_forecasting/mock_modules.py",
        3
      ],
      [
        "app/core/interfaces/services/ml/pat_interface.py",
        3
      ],
      [
        "app/infrastructure/repositories/memory/biometric_alert_template_repository_mock.py",
        3
      ],
      [
        "app/tests/unit/infrastructure/security/conftest.py",
        3
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/repositories/test_biometric_alert_repository_infra.py",
        3
      ],
      [
        "app/infrastructure/ml/utils/validation.py",
        3
      ],
      [
        "app/infrastructure/ml/base/base_model.py",
        3
      ],
      [
        "app/tests/unit/infrastructure/persistence/sqlalchemy/types/test_json_encoded_dict.py",
        3
      ],
      [
        "app/tests/integration/infrastructure/security/test_security_boundary.py",
        3
      ],
      [
        "app/tests/fixtures/test_mock_db.py",
        3
      ],
      [
        "app/tests/unit/infrastructure/security/test_rate_limiter.py",
        3
      ],
      [
        "app/tests/infrastructure/repositories/test_temporal_event_repository.py",
        3
      ],
      [
        "app/infrastructure/di/dependencies.py",
        3
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/biometric_alert_rules.py",
        3
      ],
      [
        "app/tests/helpers/patch_imports.py",
        2
      ],
      [
        "app/tests/application/presentation/api/schemas/analytics/__init__.py",
        2
      ],
      [
        "app/infrastructure/security/auth/mfa_service_patch.py",
        2
      ],
      [
        "app/domain/value_objects/diagnosis_code.py",
        2
      ],
      [
        "app/domain/value_objects/address.py",
        2
      ],
      [
        "app/domain/utils/text_utils.py",
        2
      ],
      [
        "app/core/interfaces/services/redis_service_interface.py",
        2
      ],
      [
        "app/tests/unit/mocks/__init__.py",
        2
      ],
      [
        "app/domain/value_objects/emergency_contact.py",
        2
      ],
      [
        "app/domain/entities/digital_twin_entity.py",
        2
      ],
      [
        "app/core/security/rate_limiting/limiter.py",
        2
      ],
      [
        "app/infrastructure/ml/base/model_metrics.py",
        2
      ],
      [
        "app/infrastructure/aws/in_memory_boto3.py",
        2
      ],
      [
        "app/tests/infrastructure/aws/test_aws_fixtures.py",
        2
      ],
      [
        "app/domain/services/biometric_integration_service.py",
        2
      ],
      [
        "app/domain/entities/digital_twin/neurotransmitter_model.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_rule_repository.py",
        2
      ],
      [
        "app/tests/application/presentation/api/schemas/xgboost.py",
        2
      ],
      [
        "app/core/interfaces/repositories/digital_twin_repository.py",
        2
      ],
      [
        "app/presentation/api/schemas/digital_twin.py",
        2
      ],
      [
        "app/infrastructure/services/mock_biometric_alert_rule_service.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_twin_repository.py",
        2
      ],
      [
        "app/infrastructure/persistence/repositories/mock_audit_log_repository.py",
        2
      ],
      [
        "app/core/database_settings.py",
        2
      ],
      [
        "app/core/services/ml/xgboost/factory.py",
        2
      ],
      [
        "app/core/interfaces/services/authentication_service.py",
        2
      ],
      [
        "app/core/interfaces/repositories/biometric_alert_repository.py",
        2
      ],
      [
        "app/domain/repositories/biometric_alert_rule_repository.py",
        2
      ],
      [
        "app/infrastructure/ml/pat/repository.py",
        2
      ],
      [
        "app/core/utils/logging.py",
        2
      ],
      [
        "app/infrastructure/security/encryption/field_encryptor.py",
        2
      ],
      [
        "app/tests/security/utils/test_mocks.py",
        2
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/session.py",
        2
      ],
      [
        "app/domain/value_objects/contact_info.py",
        2
      ],
      [
        "app/application/use_cases/analytics/retrieve_aggregated_analytics.py",
        2
      ],
      [
        "app/application/interfaces/services/cache_service.py",
        2
      ],
      [
        "app/tests/unit/services/ml/xgboost_service/conftest.py",
        2
      ],
      [
        "app/tests/unit/infrastructure/ml/biometric_correlation/test_model_service.py",
        2
      ],
      [
        "app/tests/unit/domain/entities/test_patient_entity.py",
        2
      ],
      [
        "app/tests/unit/core/test_biometric_processor.py",
        2
      ],
      [
        "app/tests/unit/core/test_biometric_event_processor.py",
        2
      ],
      [
        "app/tests/fixtures/mock_db_fixture.py",
        2
      ],
      [
        "app/tests/core/services/ml/xgboost/test_aws_xgboost_service.py",
        2
      ],
      [
        "app/domain/services/mocks/digital_twin_service.py",
        2
      ],
      [
        "app/core/services/ml/factory.py",
        2
      ],
      [
        "app/application/use_cases/analytics/batch_process_analytics.py",
        2
      ],
      [
        "app/tests/utils/jwt_helpers.py",
        2
      ],
      [
        "app/infrastructure/security/jwt/__init__.py",
        2
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/temporal_sequence_model.py",
        2
      ],
      [
        "app/infrastructure/persistence/repositories/digital_twin_repository.py",
        2
      ],
      [
        "app/infrastructure/persistence/repositories/analytics_repository.py",
        2
      ],
      [
        "app/infrastructure/logging/audit.py",
        2
      ],
      [
        "app/tests/unit/infrastructure/ml/pharmacogenomics/test_gene_medication_model.py",
        2
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/mappers/user_mapper.py",
        2
      ],
      [
        "app/tests/security/db/test_repository_security.py",
        2
      ],
      [
        "app/infrastructure/repositories/sqlalchemy/biometric_alert_rule_repository.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/biometric_alerts.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/clinical_analysis.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/mentallama.py",
        2
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/xgboost.py",
        2
      ],
      [
        "app/tests/core/security/base_security_test_utils.py",
        2
      ],
      [
        "app/domain/ml/exceptions.py",
        1
      ],
      [
        "app/tests/unit/services/ml/conftest.py",
        1
      ],
      [
        "app/infrastructure/services/mock_xgboost_service.py",
        1
      ],
      [
        "app/infrastructure/services/mock_pat_service.py",
        1
      ],
      [
        "app/infrastructure/security/rate_limiting/in_memory_limiter.py",
        1
      ],
      [
        "app/core/exceptions/data_privacy.py",
        1
      ],
      [
        "app/tests/mocks/patient_mock.py",
        1
      ],
      [
        "app/infrastructure/repositories/mock_patient_repository.py",
        1
      ],
      [
        "app/infrastructure/integrations/aws/sagemaker.py",
        1
      ],
      [
        "app/domain/events/patient_events.py",
        1
      ],
      [
        "app/domain/entities/biometric_twin_enhanced.py",
        1
      ],
      [
        "app/core/utils/date_utils.py",
        1
      ],
      [
        "app/tests/security/dashboard/dashboard.py",
        1
      ],
      [
        "app/domain/utils/datetime_utils.py",
        1
      ],
      [
        "app/core/services/analytics_service.py",
        1
      ],
      [
        "app/domain/services/standalone_clinical_rule_engine.py",
        1
      ],
      [
        "app/domain/entities/symptom_assessment.py",
        1
      ],
      [
        "app/infrastructure/repositories/memory/biometric_alert_template_repository.py",
        1
      ],
      [
        "app/tests/application/presentation/models/digital_twin.py",
        1
      ],
      [
        "app/presentation/api/schemas/patient.py",
        1
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/registry.py",
        1
      ],
      [
        "app/infrastructure/ml/pat/models.py",
        1
      ],
      [
        "app/domain/entities/biometric_twin.py",
        1
      ],
      [
        "app/core/domain/entities/patient.py",
        1
      ],
      [
        "app/presentation/api/schemas/xgboost.py",
        1
      ],
      [
        "app/infrastructure/factories/mock_digital_twin_factory.py",
        1
      ],
      [
        "app/presentation/api/schemas/biometric.py",
        1
      ],
      [
        "app/tests/utils/debug_db.py",
        1
      ],
      [
        "app/tests/unit/core/services/ml/pat/test_pat_factory.py",
        1
      ],
      [
        "app/infrastructure/ml/phi_detection/service.py",
        1
      ],
      [
        "app/infrastructure/database/session.py",
        1
      ],
      [
        "app/tests/unit/services/ml/pat/test_bedrock_pat.py",
        1
      ],
      [
        "app/tests/unit/domain/entities/test_patient_contact_info.py",
        1
      ],
      [
        "app/tests/unit/domain/entities/test_biometric_twin.py",
        1
      ],
      [
        "app/tests/unit/core/services/ml/test_mock_dt.py",
        1
      ],
      [
        "app/tests/unit/core/services/ml/pat/test_mock_pat.py",
        1
      ],
      [
        "app/tests/unit/application/use_cases/analytics/test_retrieve_aggregated_analytics.py",
        1
      ],
      [
        "app/tests/security/utils/base_test.py",
        1
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/types/__init__.py",
        1
      ],
      [
        "app/infrastructure/persistence/sqlalchemy/models/analytics.py",
        1
      ],
      [
        "app/infrastructure/security/jwt/jose_adapter.py",
        1
      ],
      [
        "app/tests/unit/presentation/api/v1/endpoints/conftest.py",
        1
      ],
      [
        "app/tests/unit/examples/test_modern_asyncio.py",
        1
      ],
      [
        "app/tests/unit/application/use_cases/analytics/test_batch_process_analytics.py",
        1
      ],
      [
        "app/infrastructure/models/temporal_sequence_model.py",
        1
      ],
      [
        "app/application/use_cases/digital_twin/generate_digital_twin.py",
        1
      ],
      [
        "app/application/use_cases/appointment/create_appointment.py",
        1
      ],
      [
        "app/tests/unit/infrastructure/ml/pharmacogenomics/test_model_service_pgx.py",
        1
      ],
      [
        "app/tests/unit/infrastructure/cache/test_redis_cache.py",
        1
      ],
      [
        "app/tests/unit/core/test_mock_digital_twin.py",
        1
      ],
      [
        "app/tests/unit/application/use_cases/patient/test_create_patient_use_case.py",
        1
      ],
      [
        "app/domain/services/enhanced_digital_twin_core_service.py",
        1
      ],
      [
        "app/infrastructure/persistence/repositories/redis_token_blacklist_repository.py",
        1
      ],
      [
        "app/infrastructure/models/user_model.py",
        1
      ],
      [
        "app/tests/unit/infrastructure/persistence/repositories/test_redis_token_blacklist_repository.py",
        1
      ],
      [
        "app/tests/unit/application/use_cases/patient/test_update_patient_use_case.py",
        1
      ],
      [
        "app/tests/unit/application/use_cases/patient/test_get_patient_by_id_use_case.py",
        1
      ],
      [
        "app/core/services/ml/providers/text_generation.py",
        1
      ],
      [
        "app/infrastructure/ml/mentallama/model_loader.py",
        1
      ],
      [
        "app/infrastructure/ml/pat/api.py",
        1
      ],
      [
        "app/presentation/api/dependencies/repository.py",
        1
      ],
      [
        "app/tests/application/presentation/api/dependencies/database.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/actigraphy.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/appointments.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/clinical_sessions.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/digital_twins.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/symptom_assessments.py",
        1
      ],
      [
        "app/tests/application/presentation/api/v1/endpoints/temporal_neurotransmitter.py",
        1
      ],
      [
        "app/tests/application/presentation/api/routes.py",
        1
      ],
      [
        "app/tests/mocks/mock_auth_dependencies.py",
        1
      ]
    ],
    "common_patterns": {
      "missing_attribute": 699,
      "incompatible_type": 319
    }
  }
}