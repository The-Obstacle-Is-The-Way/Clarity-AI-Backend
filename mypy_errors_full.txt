app/infrastructure/services/mock_xgboost_service.py:126: error: Returning Any from function declared to return "dict[str, Any] | None"  [no-any-return]
app/core/services/ml/digital_twin/digital_twin.py:42: error: Need type annotation for "_sessions" (hint: "_sessions: Dict[<type>, <type>] = ...")  [var-annotated]
app/core/services/ml/digital_twin/digital_twin.py:342: error: Signature of "get_insights" incompatible with supertype "DigitalTwinInterface"  [override]
app/core/services/ml/digital_twin/digital_twin.py:342: note:      Superclass:
app/core/services/ml/digital_twin/digital_twin.py:342: note:          def get_insights(self, twin_id: str, insight_types: list[str]) -> dict[str, Any]
app/core/services/ml/digital_twin/digital_twin.py:342: note:      Subclass:
app/core/services/ml/digital_twin/digital_twin.py:342: note:          def get_insights(self, session_id: str, insight_type: str | None = ...) -> dict[str, Any]
app/core/services/ml/digital_twin/digital_twin.py:542: error: Need type annotation for "sender_counts" (hint: "sender_counts: Dict[<type>, <type>] = ...")  [var-annotated]
app/infrastructure/ml/mentallama/mock.py:518: error: Unsupported operand types for > ("float" and "object")  [operator]
app/infrastructure/ml/mentallama/mock.py:519: error: Unsupported operand types for < ("float" and "object")  [operator]
app/infrastructure/aws/in_memory_aws_services.py:41: error: Signature of "put_item" incompatible with supertype "DynamoDBServiceInterface"  [override]
app/infrastructure/aws/in_memory_aws_services.py:41: note:      Superclass:
app/infrastructure/aws/in_memory_aws_services.py:41: note:          def put_item(self, table_name: str, item: dict[str, Any]) -> dict[str, Any]
app/infrastructure/aws/in_memory_aws_services.py:41: note:      Subclass:
app/infrastructure/aws/in_memory_aws_services.py:41: note:          def put_item(self, *, TableName: str, Item: dict[str, Any]) -> dict[str, Any]
app/domain/entities/analytics.py:180: error: Statement is unreachable  [unreachable]
app/tests/infrastructure/aws/test_aws_fixtures.py:27: error: "InMemoryDynamoDBService" has no attribute "tables"; maybe "_tables"?  [attr-defined]
app/tests/infrastructure/aws/test_aws_fixtures.py:28: error: "InMemoryDynamoDBService" has no attribute "tables"; maybe "_tables"?  [attr-defined]
app/infrastructure/ml_services/digital_twin_integration/service.py:168: error: "DigitalTwin" has no attribute "updated_at"; maybe "update_state"?  [attr-defined]
app/infrastructure/ml_services/digital_twin_integration/service.py:336: error: Unexpected keyword argument "symptom_forecast" for "DigitalTwin"  [call-arg]
app/infrastructure/ml_services/digital_twin_integration/service.py:336: error: Unexpected keyword argument "biometric_analysis" for "DigitalTwin"  [call-arg]
app/infrastructure/ml_services/digital_twin_integration/service.py:336: error: Unexpected keyword argument "pharmacogenomic_insights" for "DigitalTwin"  [call-arg]
app/infrastructure/ml_services/digital_twin_integration/service.py:336: error: Unexpected keyword argument "updated_at" for "DigitalTwin"  [call-arg]
app/domain/entities/digital_twin/neurotransmitter_model.py:50: error: "Medication" has no attribute "medication_class"  [attr-defined]
app/domain/entities/digital_twin/neurotransmitter_model.py:251: error: "Medication" has no attribute "medication_class"  [attr-defined]
app/tests/application/presentation/models/biometric_data.py:43: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/models/biometric_data.py:50: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/models/biometric_data.py:118: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/models/biometric_data.py:157: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/models/biometric_data.py:165: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/models/biometric_data.py:173: error: Name "field_validator" is not defined  [name-defined]
app/tests/application/presentation/api/schemas/xgboost.py:507: error: Name "hyperparameters" already defined on line 505  [no-redef]
app/tests/application/presentation/api/schemas/xgboost.py:508: error: Name "status" already defined on line 506  [no-redef]
app/infrastructure/factories/mock_digital_twin_factory.py:71: error: Incompatible return value type (got "MockDigitalTwinCoreService", expected "DigitalTwinCoreService")  [return-value]
app/domain/entities/biometric_twin.py:165: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", target has type "Collection[str]")  [assignment]
app/core/services/ml/pat/fixed_validation.py:127: error: Module "app.domain.exceptions" has no attribute "ResourceNotFoundError"  [attr-defined]
app/core/services/ml/pat/fixed_validation.py:173: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/presentation/api/schemas/digital_twin.py:102: error: Dict entry 0 has incompatible type "type[datetime]": "Callable[[Any], Any]"; expected "str": "int | float | str | list[JsonValue] | JsonDict"  [dict-item]
app/presentation/api/schemas/digital_twin.py:202: error: Dict entry 0 has incompatible type "type[datetime]": "Callable[[Any], Any]"; expected "str": "int | float | str | list[JsonValue] | JsonDict"  [dict-item]
app/infrastructure/services/mock_biometric_alert_rule_service.py:72: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/infrastructure/services/mock_biometric_alert_rule_service.py:95: error: Returning Any from function declared to return "dict[str, Any] | None"  [no-any-return]
app/infrastructure/services/mock_biometric_alert_rule_service.py:144: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/tests/unit/services/ml/xgboost_service/mocks.py:125: error: Returning Any from function declared to return "bool"  [no-any-return]
app/tests/unit/services/ml/xgboost_service/mocks.py:217: error: Return type "dict[str, list[dict[str, Any]]]" of "list_endpoints" incompatible with return type "list[dict[str, Any]]" in supertype "SageMakerServiceInterface"  [override]
app/tests/unit/services/ml/xgboost_service/mocks.py:225: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/tests/unit/services/ml/xgboost_service/mocks.py:242: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "invoke_endpoint" incompatible with return type "dict[str, Any]" in supertype "SageMakerRuntimeServiceInterface"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:27: error: Return type "Coroutine[Any, Any, list[dict[str, Any]]]" of "get_alerts" incompatible with return type "Coroutine[Any, Any, list[Alert]]" in supertype "AlertServiceInterface"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:29: error: Argument 1 of "get_alerts" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "UUID | None"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:29: note: This violates the Liskov substitution principle
app/infrastructure/services/mock_biometric_alert_service.py:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/services/mock_biometric_alert_service.py:30: error: Argument 2 of "get_alerts" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "str | None"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:30: note: This violates the Liskov substitution principle
app/infrastructure/services/mock_biometric_alert_service.py:30: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/services/mock_biometric_alert_service.py:32: error: Argument 4 of "get_alerts" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "str | None"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:32: note: This violates the Liskov substitution principle
app/infrastructure/services/mock_biometric_alert_service.py:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/services/mock_biometric_alert_service.py:62: error: Signature of "get_alert_by_id" incompatible with supertype "AlertServiceInterface"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:62: note:      Superclass:
app/infrastructure/services/mock_biometric_alert_service.py:62: note:          def get_alert_by_id(self, alert_id: UUID, user_id: UUID | None = ...) -> Coroutine[Any, Any, Alert | None]
app/infrastructure/services/mock_biometric_alert_service.py:62: note:      Subclass:
app/infrastructure/services/mock_biometric_alert_service.py:62: note:          def get_alert_by_id(self, alert_id: str) -> Coroutine[Any, Any, dict[str, Any] | None]
app/infrastructure/services/mock_biometric_alert_service.py:64: error: Returning Any from function declared to return "dict[str, Any] | None"  [no-any-return]
app/infrastructure/services/mock_biometric_alert_service.py:68: error: Argument 1 of "create_alert" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "UUID"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:68: note: This violates the Liskov substitution principle
app/infrastructure/services/mock_biometric_alert_service.py:68: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/services/mock_biometric_alert_service.py:87: error: "type[AlertStatus]" has no attribute "NEW"  [attr-defined]
app/infrastructure/services/mock_biometric_alert_service.py:95: error: Signature of "update_alert_status" incompatible with supertype "AlertServiceInterface"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:95: note:      Superclass:
app/infrastructure/services/mock_biometric_alert_service.py:95: note:          def update_alert_status(self, alert_id: UUID, status: str, resolution_notes: str | None = ..., resolved_by: UUID | None = ...) -> Coroutine[Any, Any, tuple[bool, str | None]]
app/infrastructure/services/mock_biometric_alert_service.py:95: note:      Subclass:
app/infrastructure/services/mock_biometric_alert_service.py:95: note:          def update_alert_status(self, alert_id: str, new_status: AlertStatus, updated_by: str) -> Coroutine[Any, Any, bool]
app/infrastructure/services/mock_biometric_alert_service.py:107: error: Argument 1 of "validate_access" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "UUID"  [override]
app/infrastructure/services/mock_biometric_alert_service.py:107: note: This violates the Liskov substitution principle
app/infrastructure/services/mock_biometric_alert_service.py:107: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/services/mock_biometric_alert_service.py:107: error: Argument 2 of "validate_access" is incompatible with supertype "AlertServiceInterface"; supertype defines the argument type as "UUID"  [override]
app/infrastructure/security/jwt/jwt_service.py:168: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
app/infrastructure/security/jwt/jwt_service.py:319: error: Returning Any from function declared to return "str | UUID"  [no-any-return]
app/infrastructure/security/jwt/jwt_service.py:362: error: Incompatible types in assignment (expression has type "list[Any]", target has type "str")  [assignment]
app/infrastructure/security/jwt/jwt_service.py:370: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "str")  [assignment]
app/infrastructure/security/jwt/jwt_service.py:371: error: Argument 1 to "TokenPayload" has incompatible type "**dict[str, str]"; expected "int"  [arg-type]
app/infrastructure/security/jwt/jwt_service.py:371: error: Argument 1 to "TokenPayload" has incompatible type "**dict[str, str]"; expected "list[str]"  [arg-type]
app/infrastructure/security/jwt/jwt_service.py:371: error: Argument 1 to "TokenPayload" has incompatible type "**dict[str, str]"; expected "bool"  [arg-type]
app/infrastructure/security/jwt/jwt_service.py:371: error: Argument 1 to "TokenPayload" has incompatible type "**dict[str, str]"; expected "dict[str, Any]"  [arg-type]
app/infrastructure/security/jwt/jwt_service.py:371: note: "Dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
app/infrastructure/security/jwt/jwt_service.py:371: note: Consider using "Mapping" instead, which is covariant in the value type
app/infrastructure/security/jwt/jwt_service.py:412: error: Returning Any from function declared to return "bool"  [no-any-return]
app/core/interfaces/services/authentication_service.py:18: error: Cannot assign to a type  [misc]
app/core/interfaces/services/authentication_service.py:18: error: Incompatible types in assignment (expression has type "object", variable has type "type[User]")  [assignment]
app/application/services/biometric_alert_rule_service.py:77: error: "BiometricAlertTemplateRepository" has no attribute "get_by_id"  [attr-defined]
app/application/services/biometric_alert_rule_service.py:302: error: Unexpected keyword argument "patient_id" for "get_rules" of "BiometricAlertRuleRepository"  [call-arg]
app/application/services/biometric_alert_rule_service.py:302: error: Unexpected keyword argument "is_active" for "get_rules" of "BiometricAlertRuleRepository"  [call-arg]
app/application/services/biometric_alert_rule_service.py:513: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/application/services/biometric_alert_rule_service.py:516: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/application/services/alert_rule_template_service.py:79: error: Argument 1 to "get_template_by_id" of "BiometricAlertTemplateRepository" has incompatible type "str"; expected "UUID"  [arg-type]
app/application/services/alert_rule_template_service.py:111: error: Argument 1 to "get_template_by_id" of "BiometricAlertTemplateRepository" has incompatible type "str"; expected "UUID"  [arg-type]
app/application/services/alert_rule_template_service.py:284: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/application/services/alert_rule_template_service.py:287: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/infrastructure/security/phi/sanitizer.py:20: error: All conditional function variants must have identical signatures  [misc]
app/infrastructure/security/phi/sanitizer.py:20: note: Original:
app/infrastructure/security/phi/sanitizer.py:20: note:     def get_settings() -> Settings
app/infrastructure/security/phi/sanitizer.py:20: note: Redefinition:
app/infrastructure/security/phi/sanitizer.py:20: note:     def get_settings() -> Any
app/infrastructure/security/phi/sanitizer.py:331: error: Statement is unreachable  [unreachable]
app/infrastructure/security/phi/sanitizer.py:464: error: "str" has no attribute "search"  [attr-defined]
app/infrastructure/security/phi/sanitizer.py:470: error: "str" has no attribute "search"  [attr-defined]
app/infrastructure/security/phi/sanitizer.py:490: error: "PHISanitizer" has no attribute "_is_path_whitelisted"; maybe "_is_whitelisted" or "is_whitelisted"?  [attr-defined]
app/infrastructure/security/phi/sanitizer.py:716: error: Statement is unreachable  [unreachable]
app/infrastructure/security/phi/sanitizer.py:772: error: "str" has no attribute "search"  [attr-defined]
app/infrastructure/security/phi/sanitizer.py:780: error: "str" has no attribute "search"  [attr-defined]
app/infrastructure/security/phi/sanitizer.py:914: error: Signature of "_log" incompatible with supertype "Logger"  [override]
app/infrastructure/security/phi/sanitizer.py:914: note:      Superclass:
app/infrastructure/security/phi/sanitizer.py:914: note:          def _log(self, level: int, msg: object, args: tuple[object, ...] | Mapping[str, object], exc_info: bool | tuple[type[BaseException], BaseException, TracebackType | None] | tuple[None, None, None] | BaseException | None | None = ..., extra: Mapping[str, object] | None = ..., stack_info: bool = ..., stacklevel: int = ...) -> None
app/infrastructure/security/phi/sanitizer.py:914: note:      Subclass:
app/infrastructure/security/phi/sanitizer.py:914: note:          def _log(self, level: Any, msg: Any, args: Any, exc_info: Any = ..., extra: Any = ..., stack_info: Any = ..., **kwargs: Any) -> None
app/infrastructure/security/phi/sanitizer.py:965: error: Incompatible return value type (got "Logger", expected "PHISafeLogger")  [return-value]
app/infrastructure/security/password/password_handler.py:231: error: "PasswordHandler" has no attribute "require_uppercase"  [attr-defined]
app/infrastructure/security/password/password_handler.py:234: error: "PasswordHandler" has no attribute "require_lowercase"  [attr-defined]
app/infrastructure/security/password/password_handler.py:237: error: "PasswordHandler" has no attribute "require_digit"  [attr-defined]
app/infrastructure/security/password/password_handler.py:240: error: "PasswordHandler" has no attribute "require_special"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:365: error: "None" has no attribute "__await__"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:426: error: "None" has no attribute "__await__"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:443: error: Signature of "create_refresh_token" incompatible with supertype "IJwtService"  [override]
app/infrastructure/security/jwt/jwt_service_impl.py:443: note:      Superclass:
app/infrastructure/security/jwt/jwt_service_impl.py:443: note:          def create_refresh_token(self, user_id: str | UUID, expires_delta_minutes: int | None = ...) -> Coroutine[Any, Any, str]
app/infrastructure/security/jwt/jwt_service_impl.py:443: note:      Subclass:
app/infrastructure/security/jwt/jwt_service_impl.py:443: note:          def create_refresh_token(self, user_id: str | UUID | None = ..., expires_delta_minutes: int | None = ..., *, data: dict[str, Any] | None = ..., subject: str | None = ..., expires_delta: timedelta | None = ..., additional_claims: dict[str, Any] | None = ...) -> str
app/infrastructure/security/jwt/jwt_service_impl.py:525: error: Argument "token_id" to "create_refresh_token_payload" has incompatible type "object"; expected "str | None"  [arg-type]
app/infrastructure/security/jwt/jwt_service_impl.py:528: error: Argument "original_iat" to "create_refresh_token_payload" has incompatible type "object"; expected "int | None"  [arg-type]
app/infrastructure/security/jwt/jwt_service_impl.py:641: error: "None" has no attribute "__await__"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:660: error: Signature of "create_access_token" incompatible with supertype "IJwtService"  [override]
app/infrastructure/security/jwt/jwt_service_impl.py:660: note:      Superclass:
app/infrastructure/security/jwt/jwt_service_impl.py:660: note:          def create_access_token(self, user_id: str | UUID, roles: list[str] | None = ..., expires_delta_minutes: int | None = ...) -> Coroutine[Any, Any, str]
app/infrastructure/security/jwt/jwt_service_impl.py:660: note:      Subclass:
app/infrastructure/security/jwt/jwt_service_impl.py:660: note:          def create_access_token(self, data: dict[str, Any] | None = ..., subject: str | None = ..., expires_delta_minutes: int | None = ..., expires_delta: timedelta | None = ..., additional_claims: dict[str, Any] | None = ..., **kwargs: Any) -> str
app/infrastructure/security/jwt/jwt_service_impl.py:842: error: Argument "event_type" to "log_security_event" of "IAuditLogger" has incompatible type "str"; expected "AuditEventType"  [arg-type]
app/infrastructure/security/jwt/jwt_service_impl.py:959: error: Argument "event_type" to "log_security_event" of "IAuditLogger" has incompatible type "str"; expected "AuditEventType"  [arg-type]
app/infrastructure/security/jwt/jwt_service_impl.py:1165: error: "None" has no attribute "__await__"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:1224: error: "None" has no attribute "__await__"  [attr-defined]
app/infrastructure/security/jwt/jwt_service_impl.py:1304: error: Returning Any from function declared to return "str | None"  [no-any-return]
app/infrastructure/security/jwt/jwt_service_impl.py:1311: error: Returning Any from function declared to return "str | None"  [no-any-return]
app/infrastructure/security/audit/audit.py:111: error: Item "str" of "AuditEventType | str" has no attribute "value"  [union-attr]
app/infrastructure/security/audit/audit.py:347: error: Signature of "log_system_event" incompatible with supertype "IAuditLogger"  [override]
app/infrastructure/security/audit/audit.py:347: note:      Superclass:
app/infrastructure/security/audit/audit.py:347: note:          def log_system_event(self, event_type: str, description: str, severity: AuditSeverity = ..., metadata: dict[str, Any] | None = ...) -> None
app/infrastructure/security/audit/audit.py:347: note:      Subclass:
app/infrastructure/security/audit/audit.py:347: note:          def log_system_event(self, event_type: str, description: str, details: dict[str, Any] | None = ..., actor_id: str | None = ..., user_id: str | None = ..., severity: AuditSeverity = ..., metadata: dict[str, Any] | None = ...) -> str
app/infrastructure/security/audit/audit.py:638: error: Signature of "log_system_event" incompatible with supertype "IAuditLogger"  [override]
app/infrastructure/security/audit/audit.py:638: note:      Superclass:
app/infrastructure/security/audit/audit.py:638: note:          def log_system_event(self, event_type: str, description: str, severity: AuditSeverity = ..., metadata: dict[str, Any] | None = ...) -> None
app/infrastructure/security/audit/audit.py:638: note:      Subclass:
app/infrastructure/security/audit/audit.py:638: note:          def log_system_event(self, event_type: str, description: str, details: dict[str, Any] | None = ..., actor_id: str | None = ..., user_id: str | None = ...) -> str
app/infrastructure/security/audit/audit.py:693: error: Incompatible types in assignment (expression has type "DummyAuditLogger", variable has type "AuditLogger")  [assignment]
app/infrastructure/ml/pat/repository.py:17: error: Module "app.core.exceptions.ml_exceptions" has no attribute "RepositoryError"  [attr-defined]
app/infrastructure/ml/pat/repository.py:40: error: "Settings" has no attribute "ml"  [attr-defined]
app/infrastructure/logging/audit_logger.py:91: error: Incompatible types in assignment (expression has type "StreamHandler[TextIO]", variable has type "FileHandler")  [assignment]
app/infrastructure/logging/audit_logger.py:217: error: Signature of "log_security_event" incompatible with supertype "IAuditLogger"  [override]
app/infrastructure/logging/audit_logger.py:217: note:      Superclass:
app/infrastructure/logging/audit_logger.py:217: note:          def log_security_event(self, event_type: AuditEventType, description: str, severity: AuditSeverity = ..., user_id: str | None = ..., metadata: dict[str, Any] | None = ...) -> None
app/infrastructure/logging/audit_logger.py:217: note:      Subclass:
app/infrastructure/logging/audit_logger.py:217: note:          def log_security_event(self, event_type: str, description: str | None = ..., user_id: str | None = ..., actor_id: str | None = ..., severity: AuditSeverity = ..., details: str | None = ..., status: str | None = ..., metadata: dict[Any, Any] | None = ..., ip_address: str | None = ...) -> None
app/infrastructure/logging/audit_logger.py:357: error: Argument 3 of "log_system_event" is incompatible with supertype "IAuditLogger"; supertype defines the argument type as "AuditSeverity"  [override]
app/infrastructure/logging/audit_logger.py:357: note: This violates the Liskov substitution principle
app/infrastructure/logging/audit_logger.py:357: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/logging/audit_logger.py:447: error: Cannot instantiate abstract class "AuditLogger" with abstract attributes "log_api_request" and "log_data_access"  [abstract]
app/infrastructure/logging/audit_logger.py:462: error: Cannot instantiate abstract class "AuditLogger" with abstract attributes "log_api_request" and "log_data_access"  [abstract]
app/infrastructure/logging/audit_logger.py:479: error: Cannot instantiate abstract class "AuditLogger" with abstract attributes "log_api_request" and "log_data_access"  [abstract]
app/domain/services/clinical_rule_engine.py:263: error: Argument 1 to "RuleCondition" has incompatible type "**dict[str, RuleOperator]"; expected "str"  [arg-type]
app/domain/services/clinical_rule_engine.py:263: error: Argument 1 to "RuleCondition" has incompatible type "**dict[str, RuleOperator]"; expected "int"  [arg-type]
app/domain/services/clinical_rule_engine.py:322: error: Argument 1 to "update_conditions" of "BiometricRule" has incompatible type "list[RuleCondition]"; expected "list[dict[Any, Any] | RuleCondition]"  [arg-type]
app/domain/services/clinical_rule_engine.py:322: note: "List" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
app/domain/services/clinical_rule_engine.py:322: note: Consider using "Sequence" instead, which is covariant
app/domain/services/clinical_rule_engine.py:322: error: Argument 2 to "update_conditions" of "BiometricRule" has incompatible type "str | LogicalOperator"; expected "LogicalOperator | None"  [arg-type]
app/domain/services/clinical_rule_engine.py:358: error: "BiometricRule" has no attribute "updated_at"  [attr-defined]
app/domain/services/clinical_rule_engine.py:385: error: Need type annotation for "created_rules" (hint: "created_rules: List[<type>] = ...")  [var-annotated]
app/domain/services/clinical_rule_engine.py:474: error: Value of type "object" is not indexable  [index]
app/domain/services/clinical_rule_engine.py:475: error: Value of type "object" is not indexable  [index]
app/domain/services/clinical_rule_engine.py:476: error: Value of type "object" is not indexable  [index]
app/domain/services/clinical_rule_engine.py:477: error: Value of type "object" is not indexable  [index]
app/domain/services/clinical_rule_engine.py:478: error: Value of type "object" is not indexable  [index]
app/infrastructure/security/phi/code_analyzer.py:492: error: "type[PHICodeAnalyzer]" has no attribute "PHI_MODEL_NAMES"  [attr-defined]
app/infrastructure/security/phi/code_analyzer.py:568: error: Need type annotation for "findings" (hint: "findings: List[<type>] = ...")  [var-annotated]
app/infrastructure/security/phi/code_analyzer.py:672: error: Argument 1 to "_check_config_dict" of "PHICodeAnalyzer" has incompatible type "dict[Any, Any] | list[Any]"; expected "dict[Any, Any]"  [arg-type]
app/infrastructure/security/phi/code_analyzer.py:691: error: Statement is unreachable  [unreachable]
app/infrastructure/security/phi/code_analyzer.py:727: error: Need type annotation for "findings" (hint: "findings: List[<type>] = ...")  [var-annotated]
app/infrastructure/security/phi/code_analyzer.py:885: error: Subclass of "str" and "dict[Any, Any]" cannot exist: would have incompatible method signatures  [unreachable]
app/infrastructure/security/phi/code_analyzer.py:888: error: Statement is unreachable  [unreachable]
app/infrastructure/security/phi/code_analyzer.py:1029: error: Need type annotation for "config_files" (hint: "config_files: List[<type>] = ...")  [var-annotated]
app/domain/services/biometric_alert_audit_service.py:186: error: Incompatible types in assignment (expression has type "datetime", target has type "str")  [assignment]
app/domain/services/biometric_alert_audit_service.py:189: error: Incompatible types in assignment (expression has type "datetime", target has type "str")  [assignment]
app/domain/services/biometric_alert_audit_service.py:192: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
app/core/services/ml/xgboost/mock.py:1614: error: Missing positional argument "clinical_data" in call to "_generate_supporting_evidence" of "MockXGBoostService"  [call-arg]
app/core/services/ml/xgboost/mock.py:1614: error: Argument 2 to "_generate_supporting_evidence" of "MockXGBoostService" has incompatible type "dict[str, Any]"; expected "str"  [arg-type]
app/core/services/ml/xgboost/mock.py:1714: error: Missing positional argument "clinical_data" in call to "_generate_expected_outcome" of "MockXGBoostService"  [call-arg]
app/core/services/ml/xgboost/mock.py:1824: error: Too many arguments for "_generate_deterministic_outcome_score" of "MockXGBoostService"  [call-arg]
app/core/services/ml/xgboost/mock.py:1825: error: Argument 2 to "_generate_deterministic_outcome_score" of "MockXGBoostService" has incompatible type "dict[str, Any]"; expected "int"  [arg-type]
app/core/services/ml/xgboost/mock.py:1825: error: Argument 5 to "_generate_deterministic_outcome_score" of "MockXGBoostService" has incompatible type "dict[str, Any]"; expected "str"  [arg-type]
app/core/services/ml/xgboost/mock.py:1832: error: Missing positional argument "time_frame_days" in call to "_generate_outcome_trajectory" of "MockXGBoostService"  [call-arg]
app/core/services/ml/xgboost/mock.py:1832: error: Argument 1 to "_generate_outcome_trajectory" of "MockXGBoostService" has incompatible type "dict[str, Any]"; expected "str"  [arg-type]
app/core/services/ml/xgboost/mock.py:1835: error: Missing positional arguments "clinical_data", "treatment_plan" in call to "_generate_outcome_details" of "MockXGBoostService"  [call-arg]
app/core/services/ml/xgboost/mock.py:1835: error: Argument 1 to "_generate_outcome_details" of "MockXGBoostService" has incompatible type "dict[str, Any]"; expected "str"  [arg-type]
app/core/services/ml/xgboost/mock.py:1963: error: Argument "key" to "sorted" has incompatible type "Callable[[tuple[Any, dict[str, object]]], object]"; expected "Callable[[tuple[Any, dict[str, object]]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
app/core/services/ml/xgboost/mock.py:1963: error: Incompatible return value type (got "object", expected "SupportsDunderLT[Any] | SupportsDunderGT[Any]")  [return-value]
app/core/services/ml/xgboost/factory.py:22: error: Dict entry 0 has incompatible type "str": "type[XGBoostService]"; expected "str": "type[XGBoostInterface]"  [dict-item]
app/core/services/ml/xgboost/aws_service.py:228: error: Signature of "predict_risk" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_service.py:228: note:      Superclass:
app/core/services/ml/xgboost/aws_service.py:228: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_service.py:228: note:      Subclass:
app/core/services/ml/xgboost/aws_service.py:228: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_service.py:435: error: Signature of "predict_outcome" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_service.py:435: note:      Superclass:
app/core/services/ml/xgboost/aws_service.py:435: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_service.py:435: note:      Subclass:
app/core/services/ml/xgboost/aws_service.py:435: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_service.py:546: error: "list[dict[str, Any]]" has no attribute "get"  [attr-defined]
app/core/services/ml/xgboost/aws_service.py:546: error: Subclass of "list[dict[str, Any]]" and "dict[Any, Any]" cannot exist: would have incompatible method signatures  [unreachable]
app/core/services/ml/xgboost/aws_service.py:898: error: "list[dict[str, Any]]" has no attribute "get"  [attr-defined]
app/core/services/ml/xgboost/aws_service.py:899: error: Subclass of "list[dict[str, Any]]" and "dict[Any, Any]" cannot exist: would have incompatible method signatures  [unreachable]
app/core/services/ml/xgboost/aws_service.py:995: error: Incompatible types in assignment (expression has type "SageMakerServiceInterface", variable has type "None")  [assignment]
app/core/services/ml/xgboost/aws_service.py:996: error: Incompatible types in assignment (expression has type "SageMakerRuntimeServiceInterface", variable has type "None")  [assignment]
app/core/services/ml/xgboost/aws_service.py:997: error: Incompatible types in assignment (expression has type "S3ServiceInterface", variable has type "None")  [assignment]
app/core/services/ml/xgboost/aws_service.py:998: error: Incompatible types in assignment (expression has type "DynamoDBServiceInterface", variable has type "None")  [assignment]
app/core/services/ml/xgboost/aws_service.py:1013: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_service.py:1081: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_service.py:1131: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_service.py:1310: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_service.py:1441: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_service.py:1474: error: Statement is unreachable  [unreachable]
app/application/security/authentication_service.py:22: error: Module "app.domain.exceptions" has no attribute "UserNotFoundError"; maybe "DataNotFoundError"?  [attr-defined]
app/application/security/authentication_service.py:99: error: "AuditLogger" has no attribute "log_failed_login"  [attr-defined]
app/application/security/authentication_service.py:109: error: "AuditLogger" has no attribute "log_failed_login"  [attr-defined]
app/application/security/authentication_service.py:124: error: "AuditLogger" has no attribute "log_failed_login"  [attr-defined]
app/application/security/authentication_service.py:146: error: "type[datetime]" has no attribute "UTC"  [attr-defined]
app/application/security/authentication_service.py:147: error: "type[datetime]" has no attribute "UTC"  [attr-defined]
app/application/security/authentication_service.py:154: error: "AuditLogger" has no attribute "log_successful_login"  [attr-defined]
app/application/security/authentication_service.py:187: error: "AuditLogger" has no attribute "log_failed_login"  [attr-defined]
app/application/security/authentication_service.py:220: error: "AuditLogger" has no attribute "log_logout"  [attr-defined]
app/application/security/authentication_service.py:231: error: Unexpected keyword argument "session_id" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:242: error: "AuditLogger" has no attribute "log_logout"  [attr-defined]
app/application/security/authentication_service.py:277: error: "Coroutine[Any, Any, AccessTokenPayload | RefreshTokenPayload]" has no attribute "get"  [attr-defined]
app/application/security/authentication_service.py:277: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:278: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:287: error: "Coroutine[Any, Any, AccessTokenPayload | RefreshTokenPayload]" has no attribute "get"  [attr-defined]
app/application/security/authentication_service.py:287: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:288: error: "Coroutine[Any, Any, AccessTokenPayload | RefreshTokenPayload]" has no attribute "get"  [attr-defined]
app/application/security/authentication_service.py:288: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:299: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:308: error: "type[datetime]" has no attribute "UTC"  [attr-defined]
app/application/security/authentication_service.py:312: error: Unexpected keyword argument "session_id" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:312: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:326: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:342: error: "type[datetime]" has no attribute "UTC"  [attr-defined]
app/application/security/authentication_service.py:343: error: "type[datetime]" has no attribute "UTC"  [attr-defined]
app/application/security/authentication_service.py:354: error: "JWTService" has no attribute "revoke_token"  [attr-defined]
app/application/security/authentication_service.py:357: error: Unexpected keyword argument "session_id" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:357: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:369: error: Unexpected keyword argument "user_agent" for "log_security_event" of "AuditLogger"  [call-arg]
app/infrastructure/logging/audit_logger.py:217: note: "log_security_event" of "AuditLogger" defined here
app/application/security/authentication_service.py:404: error: "Coroutine[Any, Any, AccessTokenPayload | RefreshTokenPayload]" has no attribute "get"  [attr-defined]
app/application/security/authentication_service.py:404: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:408: error: "Coroutine[Any, Any, AccessTokenPayload | RefreshTokenPayload]" has no attribute "get"  [attr-defined]
app/application/security/authentication_service.py:408: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:421: error: Returning Any from function declared to return "User"  [no-any-return]
app/application/security/authentication_service.py:447: error: "User" has no attribute "permissions"  [attr-defined]
app/application/security/authentication_service.py:473: error: Unexpected keyword argument "permissions" for "create_access_token" of "JWTService"  [call-arg]
app/application/security/authentication_service.py:475: error: "User" has no attribute "permissions"  [attr-defined]
app/infrastructure/security/jwt/jwt_service.py:125: note: "create_access_token" of "JWTService" defined here
app/application/security/authentication_service.py:473: error: Unexpected keyword argument "additional_data" for "create_access_token" of "JWTService"  [call-arg]
app/infrastructure/security/jwt/jwt_service.py:125: note: "create_access_token" of "JWTService" defined here
app/application/security/authentication_service.py:482: error: Argument "access_token" to "TokenPairDTO" has incompatible type "Coroutine[Any, Any, str]"; expected "str"  [arg-type]
app/application/security/authentication_service.py:482: note: Maybe you forgot to use "await"?
app/application/security/authentication_service.py:482: error: Argument "refresh_token" to "TokenPairDTO" has incompatible type "Coroutine[Any, Any, str]"; expected "str"  [arg-type]
app/application/security/authentication_service.py:491: error: "type[UUID]" has no attribute "uuid4"  [attr-defined]
app/infrastructure/security/audit_logger.py:54: error: Cannot determine type of "_hmac_key"  [has-type]
app/infrastructure/security/audit_logger.py:181: error: Incompatible types in assignment (expression has type "Collection[str]", variable has type "str")  [assignment]
app/infrastructure/security/audit_logger.py:241: error: Incompatible types in assignment (expression has type "Sequence[str]", variable has type "str")  [assignment]
app/infrastructure/security/audit_logger.py:550: error: Need type annotation for "all_fields" (hint: "all_fields: Set[<type>] = ...")  [var-annotated]
app/infrastructure/persistence/repositories/user_repository.py:36: error: Cannot instantiate abstract class "UserRepository" with abstract attributes "count" and "list_all"  [abstract]
app/infrastructure/persistence/repositories/user_repository.py:52: error: Need type annotation for "_users" (hint: "_users: Dict[<type>, <type>] = ...")  [var-annotated]
app/infrastructure/persistence/repositories/user_repository.py:74: error: Returning Any from function declared to return "User"  [no-any-return]
app/infrastructure/persistence/repositories/user_repository.py:110: error: Returning Any from function declared to return "User"  [no-any-return]
app/infrastructure/persistence/repositories/user_repository.py:118: error: Returning Any from function declared to return "User"  [no-any-return]
app/infrastructure/persistence/repositories/user_repository.py:141: error: Returning Any from function declared to return "User"  [no-any-return]
app/infrastructure/persistence/repositories/user_repository.py:150: error: Returning Any from function declared to return "User"  [no-any-return]
app/infrastructure/persistence/repositories/user_repository.py:155: error: Argument 1 of "create" is incompatible with supertype "IUserRepository"; supertype defines the argument type as "User"  [override]
app/infrastructure/persistence/repositories/user_repository.py:155: note: This violates the Liskov substitution principle
app/infrastructure/persistence/repositories/user_repository.py:155: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/persistence/repositories/user_repository.py:177: error: Argument 1 of "update" is incompatible with supertype "IUserRepository"; supertype defines the argument type as "User"  [override]
app/infrastructure/persistence/repositories/user_repository.py:177: note: This violates the Liskov substitution principle
app/infrastructure/persistence/repositories/user_repository.py:177: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/infrastructure/ml/utils/validation.py:22: error: Name "ValidationError" already defined (possibly by an import)  [no-redef]
app/infrastructure/ml/utils/validation.py:682: error: Statement is unreachable  [unreachable]
app/infrastructure/ml/utils/validation.py:689: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "str")  [assignment]
app/infrastructure/ml/utils/validation.py:691: error: Incompatible types in assignment (expression has type "list[Any]", target has type "str")  [assignment]
app/infrastructure/ml/base/base_model.py:247: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "str")  [assignment]
app/infrastructure/ml/base/base_model.py:249: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", target has type "str")  [assignment]
app/core/services/ml/xgboost/aws_compatibility.py:30: error: Name "AWSXGBoostService" already defined (possibly by an import)  [no-redef]
app/core/services/ml/xgboost/aws_compatibility.py:44: error: Argument 1 of "predict" is incompatible with supertype "MLServiceInterface"; supertype defines the argument type as "UUID"  [override]
app/core/services/ml/xgboost/aws_compatibility.py:44: note: This violates the Liskov substitution principle
app/core/services/ml/xgboost/aws_compatibility.py:44: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/core/services/ml/xgboost/aws_compatibility.py:58: error: Argument 1 to "predict" of "AWSXGBoostService" has incompatible type "str"; expected "UUID"  [arg-type]
app/core/services/ml/xgboost/aws_compatibility.py:59: error: Statement is unreachable  [unreachable]
app/core/services/ml/xgboost/aws_compatibility.py:66: error: Returning Any from function declared to return "bool"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:66: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:75: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:76: error: Cannot determine type of "_initialized"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:76: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:78: error: Signature of "predict_risk" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_compatibility.py:78: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:78: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:78: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:78: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:78: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:78: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], time_frame_days: int | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:78: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:78: note:          def predict_risk(self, patient_id: str, risk_type: str, clinical_data: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:93: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:93: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:121: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:121: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:129: error: Signature of "predict_outcome" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_compatibility.py:129: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:129: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:129: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:129: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:129: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:129: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, Any], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], social_determinants: dict[str, Any] | None = ..., comorbidities: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:129: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:129: note:          def predict_outcome(self, patient_id: str, outcome_timeframe: dict[str, int], clinical_data: dict[str, Any], treatment_plan: dict[str, Any], **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:150: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:150: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:158: error: Signature of "get_feature_importance" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_compatibility.py:158: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:158: note:          def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:158: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:158: note:          def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:158: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:158: note:          def get_feature_importance(self, model_type: str | ModelType, prediction_id: str, patient_id: str | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:158: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:158: note:          def get_feature_importance(self, model_type: str, patient_id: str | None = ..., **kwargs: Any) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:172: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:172: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:186: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:186: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:195: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:195: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:207: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:207: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:216: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:216: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:218: error: Signature of "integrate_with_digital_twin" incompatible with supertype "XGBoostInterface"  [override]
app/core/services/ml/xgboost/aws_compatibility.py:218: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:218: note:          def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:218: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:218: note:          def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:218: note:      Superclass:
app/core/services/ml/xgboost/aws_compatibility.py:218: note:          def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str, additional_data: dict[str, Any] | None = ...) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:218: note:      Subclass:
app/core/services/ml/xgboost/aws_compatibility.py:218: note:          def integrate_with_digital_twin(self, patient_id: str, profile_id: str, prediction_id: str) -> Coroutine[Any, Any, dict[str, Any]]
app/core/services/ml/xgboost/aws_compatibility.py:232: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/services/ml/xgboost/aws_compatibility.py:232: error: Cannot determine type of "_impl"  [has-type]
app/core/services/ml/xgboost/aws_compatibility.py:244: error: "AWSXGBoostService" has no attribute "_canonical"  [attr-defined]
app/core/services/ml/xgboost/aws_compatibility.py:254: error: "AWSXGBoostService" has no attribute "_canonical"  [attr-defined]
app/core/services/ml/xgboost/__init__.py:91: error: Name "PrivacyLevel" is not defined  [name-defined]
app/core/services/ml/xgboost/__init__.py:93: error: Name "PrivacyLevel" is not defined  [name-defined]
app/core/services/ml/xgboost/__init__.py:101: error: Unexpected keyword argument "implementation_name" for "get_xgboost_service"  [call-arg]
app/core/services/ml/xgboost/factory.py:30: note: "get_xgboost_service" defined here
app/core/services/ml/xgboost/__init__.py:108: error: "XGBoostInterface" has no attribute "initialize"  [attr-defined]
app/core/services/ml/xgboost/__init__.py:114: error: "XGBoostInterface" has no attribute "initialize"  [attr-defined]
app/core/services/ml/xgboost/__init__.py:180: error: Incompatible types in assignment (expression has type "dict[str, str]", target has type "str")  [assignment]
app/tests/utils/jwt_helpers.py:101: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/infrastructure/services/redis/redis_service.py:220: error: Incompatible types in "await" (actual type "Awaitable[int] | int", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:236: error: Incompatible types in "await" (actual type "Awaitable[set[Any]] | set[Any]", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:256: error: Incompatible types in "await" (actual type "Awaitable[int] | int", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:276: error: Statement is unreachable  [unreachable]
app/infrastructure/services/redis/redis_service.py:277: error: Incompatible types in "await" (actual type "Awaitable[int] | int", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:277: error: Argument 3 to "hset" of "HashCommands" has incompatible type "str | bytes | int | float"; expected "str | None"  [arg-type]
app/infrastructure/services/redis/redis_service.py:294: error: Incompatible types in "await" (actual type "Awaitable[str | None] | str", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:313: error: Incompatible types in "await" (actual type "Awaitable[int] | int", expected type "Awaitable[Any]")  [misc]
app/infrastructure/services/redis/redis_service.py:329: error: Incompatible types in "await" (actual type "Awaitable[dict[Any, Any]] | dict[Any, Any]", expected type "Awaitable[Any]")  [misc]
app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py:201: error: Statement is unreachable  [unreachable]
app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py:319: error: Statement is unreachable  [unreachable]
app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py:355: error: Unsupported operand types for <= ("int" and "Awaitable[Any]")  [operator]
app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py:355: note: Left operand is of type "Awaitable[Any] | Any"
app/infrastructure/security/rate_limiting/rate_limiter_enhanced.py:667: error: Incompatible return value type (got "RedisRateLimiter", expected "RateLimiter")  [return-value]
app/infrastructure/repositories/token_blacklist_repository_impl.py:166: error: Returning Any from function declared to return "bool"  [no-any-return]
app/infrastructure/repositories/redis_token_blacklist_repository.py:102: error: Returning Any from function declared to return "bool"  [no-any-return]
app/infrastructure/repositories/redis_token_blacklist_repository.py:162: error: Returning Any from function declared to return "bool"  [no-any-return]
app/infrastructure/logging/audit.py:62: error: Returning Any from function declared to return "str | None"  [no-any-return]
app/infrastructure/logging/audit.py:72: error: Returning Any from function declared to return "str | None"  [no-any-return]
app/infrastructure/logging/audit.py:395: error: Returning Any from function declared to return "list[dict[str, Any]]"  [no-any-return]
app/infrastructure/logging/audit.py:395: error: "AuditLogger" has no attribute "get_audit_trail"  [attr-defined]
/Users/ray/Desktop/CLARITY-DIGITAL-TWIN/Clarity-AI-Backend/.venv/lib/python3.12/site-packages/transformers/models/sam/processing_sam.py: error: INTERNAL ERROR -- Please try using mypy master on GitHub:
https://mypy.readthedocs.io/en/stable/common_issues.html#using-a-development-mypy-build
If this issue continues with mypy master, please report a bug at https://github.com/python/mypy/issues
version: 1.6.1
/Users/ray/Desktop/CLARITY-DIGITAL-TWIN/Clarity-AI-Backend/.venv/lib/python3.12/site-packages/transformers/models/sam/processing_sam.py: : note: please use --show-traceback to print a traceback when reporting a bug
