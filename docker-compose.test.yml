version: '3.9'

services:
  # Database for testing
  clarity-ai-db-test:
    container_name: clarity-ai-db-test
    image: postgres:15-alpine
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: clarity_ai_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - test-network

  # Redis for caching and session management
  clarity-ai-redis-test:
    container_name: clarity-ai-redis-test
    image: redis:7-alpine
    ports:
      - "16379:6379"
    volumes:
      - redis_data_test:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - test-network

  # PgAdmin for database management (optional, for developer convenience)
  clarity-ai-pgadmin-test:
    container_name: clarity-ai-pgadmin-test
    image: dpage/pgadmin4
    depends_on:
      - clarity-ai-db-test
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@clarity-ai.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data_test:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - test-network

  # Quantum Neural Test Runner container with PITUITARY region support
  clarity-ai-test-runner:
    container_name: clarity-ai-test-runner
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    # Enhanced with memory limits for neurotransmitter pathway modeling
    mem_limit: 1024M
    mem_reservation: 512M
    depends_on:
      clarity-ai-db-test:
        condition: service_healthy
      clarity-ai-redis-test:
        condition: service_started # Or service_healthy if Redis has health checks
    volumes:
      - .:/app
      - test_results:/app/test-results
    environment:
      # Database configuration
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:postgres@clarity-ai-db-test:5432/clarity_ai_test
      TEST_REDIS_URL: redis://clarity-ai-redis-test:6379/0

      # Python environment configuration
      PYTHONPATH: "/app:/app/backend"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
      
      # Test configuration
      TESTING: "1"
      TEST_MODE: "1"
      PYTEST_ADDOPTS: "--color=yes --cov=app --cov-report=term-missing:skip-covered --cov-report=xml:/app/test-results/coverage.xml"

      # Debugging and performance settings
      LOG_LEVEL: DEBUG
      
      # Clean architecture enforcement
      ENFORCE_CLEAN_ARCHITECTURE: "1"

      # Add other necessary test environment variables
      ENVIRONMENT: test
      APP_VERSION: 0.1.0-test

    # Command can be overridden when running docker-compose
    # Default runs quantum neural singularity with hypothalamus-pituitary connectivity
    command: python -m scripts.core.quantum_runner all

volumes:
  postgres_test_data:
  redis_data_test:
  pgadmin_data_test:
  test_results:
